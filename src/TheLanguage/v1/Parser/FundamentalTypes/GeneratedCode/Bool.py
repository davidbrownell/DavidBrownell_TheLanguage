# ----------------------------------------------------------------------
# This code was automatically generated by the PythonTarget. Any changes made to this
# file will be overwritten during the next generation!
# ----------------------------------------------------------------------

from v1.Lexer.Location import Location
from v1.Parser.MiniLanguage.Types.BooleanType import BooleanType
from v1.Parser.MiniLanguage.Types.NoneType import NoneType
from v1.Parser.MiniLanguage.Types.StringType import StringType
from v1.Parser.ParserInfos.Common.ClassModifier import ClassModifier
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParameterParserInfo
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParametersParserInfo
from v1.Parser.ParserInfos.Common.MethodModifier import MethodModifier
from v1.Parser.ParserInfos.Common.MutabilityModifier import MutabilityModifier
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateParametersParserInfo
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateTypeParameterParserInfo
from v1.Parser.ParserInfos.Common.VisibilityModifier import VisibilityModifier
from v1.Parser.ParserInfos.Expressions.FuncOrTypeExpressionParserInfo import FuncOrTypeExpressionParserInfo
from v1.Parser.ParserInfos.ParserInfo import ParserInfoType
from v1.Parser.ParserInfos.Statements.ClassCapabilities.StandardCapabilities import StandardCapabilities
from v1.Parser.ParserInfos.Statements.ClassStatementParserInfo import ClassStatementParserInfo
from v1.Parser.ParserInfos.Statements.FuncDefinitionStatementParserInfo import FuncDefinitionStatementParserInfo, OperatorType as FuncDefinitionStatementParserInfoOperatorType
from v1.Parser.Region import Region


# ----------------------------------------------------------------------
region_000000 = Region(begin=Location(line=20, column=23), end=Location(line=20, column=34))
region_000001 = Region(begin=Location(line=20, column=23), end=Location(line=20, column=30))
region_000002 = Region(begin=Location(line=20, column=5), end=Location(line=22, column=1))
region_000003 = Region(begin=Location(line=20, column=16), end=Location(line=20, column=22))
region_000004 = Region(begin=Location(line=20, column=46), end=Location(line=20, column=55))
region_000005 = Region(begin=Location(line=20, column=35), end=Location(line=20, column=43))
region_000006 = Region(begin=Location(line=20, column=43), end=Location(line=20, column=45))
region_000007 = Region(begin=Location(line=20, column=6), end=Location(line=20, column=14))
region_000008 = Region(begin=Location(line=22, column=40), end=Location(line=22, column=52))
region_000009 = Region(begin=Location(line=22, column=40), end=Location(line=22, column=48))
region_000010 = Region(begin=Location(line=22, column=70), end=Location(line=22, column=78))
region_000011 = Region(begin=Location(line=22, column=69), end=Location(line=22, column=79))
region_000012 = Region(begin=Location(line=22, column=80), end=Location(line=22, column=92))
region_000013 = Region(begin=Location(line=22, column=80), end=Location(line=22, column=88))
region_000014 = Region(begin=Location(line=22, column=80), end=Location(line=22, column=100))
region_000015 = Region(begin=Location(line=22, column=93), end=Location(line=22, column=100))
region_000016 = Region(begin=Location(line=22, column=79), end=Location(line=22, column=101))
region_000017 = Region(begin=Location(line=22, column=5), end=Location(line=23, column=1))
region_000018 = Region(begin=Location(line=22, column=24), end=Location(line=22, column=30))
region_000019 = Region(begin=Location(line=22, column=31), end=Location(line=22, column=39))
region_000020 = Region(begin=Location(line=22, column=53), end=Location(line=22, column=69))
region_000021 = Region(begin=Location(line=22, column=6), end=Location(line=22, column=14))
region_000022 = Region(begin=Location(line=22, column=16), end=Location(line=22, column=22))
region_000023 = Region(begin=Location(line=23, column=32), end=Location(line=23, column=36))
region_000024 = Region(begin=Location(line=23, column=52), end=Location(line=23, column=60))
region_000025 = Region(begin=Location(line=23, column=51), end=Location(line=23, column=61))
region_000026 = Region(begin=Location(line=23, column=62), end=Location(line=23, column=74))
region_000027 = Region(begin=Location(line=23, column=62), end=Location(line=23, column=70))
region_000028 = Region(begin=Location(line=23, column=62), end=Location(line=23, column=82))
region_000029 = Region(begin=Location(line=23, column=75), end=Location(line=23, column=82))
region_000030 = Region(begin=Location(line=23, column=61), end=Location(line=23, column=83))
region_000031 = Region(begin=Location(line=23, column=5), end=Location(line=25, column=1))
region_000032 = Region(begin=Location(line=23, column=16), end=Location(line=23, column=22))
region_000033 = Region(begin=Location(line=23, column=84), end=Location(line=23, column=93))
region_000034 = Region(begin=Location(line=23, column=23), end=Location(line=23, column=31))
region_000035 = Region(begin=Location(line=23, column=37), end=Location(line=23, column=51))
region_000036 = Region(begin=Location(line=23, column=6), end=Location(line=23, column=14))
region_000037 = Region(begin=Location(line=25, column=32), end=Location(line=25, column=36))
region_000038 = Region(begin=Location(line=25, column=49), end=Location(line=25, column=57))
region_000039 = Region(begin=Location(line=25, column=48), end=Location(line=25, column=58))
region_000040 = Region(begin=Location(line=25, column=59), end=Location(line=25, column=71))
region_000041 = Region(begin=Location(line=25, column=59), end=Location(line=25, column=67))
region_000042 = Region(begin=Location(line=25, column=59), end=Location(line=25, column=79))
region_000043 = Region(begin=Location(line=25, column=72), end=Location(line=25, column=79))
region_000044 = Region(begin=Location(line=25, column=58), end=Location(line=25, column=80))
region_000045 = Region(begin=Location(line=25, column=5), end=Location(line=27, column=1))
region_000046 = Region(begin=Location(line=25, column=16), end=Location(line=25, column=22))
region_000047 = Region(begin=Location(line=25, column=81), end=Location(line=25, column=90))
region_000048 = Region(begin=Location(line=25, column=23), end=Location(line=25, column=31))
region_000049 = Region(begin=Location(line=25, column=37), end=Location(line=25, column=48))
region_000050 = Region(begin=Location(line=25, column=6), end=Location(line=25, column=14))
region_000051 = Region(begin=Location(line=27, column=32), end=Location(line=27, column=44))
region_000052 = Region(begin=Location(line=27, column=32), end=Location(line=27, column=40))
region_000053 = Region(begin=Location(line=27, column=5), end=Location(line=29, column=1))
region_000054 = Region(begin=Location(line=27, column=16), end=Location(line=27, column=22))
region_000055 = Region(begin=Location(line=27, column=58), end=Location(line=27, column=67))
region_000056 = Region(begin=Location(line=27, column=23), end=Location(line=27, column=31))
region_000057 = Region(begin=Location(line=27, column=45), end=Location(line=27, column=55))
region_000058 = Region(begin=Location(line=27, column=55), end=Location(line=27, column=57))
region_000059 = Region(begin=Location(line=27, column=6), end=Location(line=27, column=14))
region_000060 = Region(begin=Location(line=29, column=32), end=Location(line=29, column=40))
region_000061 = Region(begin=Location(line=29, column=32), end=Location(line=29, column=36))
region_000062 = Region(begin=Location(line=29, column=5), end=Location(line=30, column=1))
region_000063 = Region(begin=Location(line=29, column=16), end=Location(line=29, column=22))
region_000064 = Region(begin=Location(line=29, column=54), end=Location(line=29, column=63))
region_000065 = Region(begin=Location(line=29, column=23), end=Location(line=29, column=31))
region_000066 = Region(begin=Location(line=29, column=41), end=Location(line=29, column=51))
region_000067 = Region(begin=Location(line=29, column=51), end=Location(line=29, column=53))
region_000068 = Region(begin=Location(line=29, column=6), end=Location(line=29, column=14))
region_000069 = Region(begin=Location(line=30, column=32), end=Location(line=30, column=39))
region_000070 = Region(begin=Location(line=30, column=32), end=Location(line=30, column=35))
region_000071 = Region(begin=Location(line=30, column=5), end=Location(line=32, column=1))
region_000072 = Region(begin=Location(line=30, column=16), end=Location(line=30, column=22))
region_000073 = Region(begin=Location(line=30, column=56), end=Location(line=30, column=65))
region_000074 = Region(begin=Location(line=30, column=23), end=Location(line=30, column=31))
region_000075 = Region(begin=Location(line=30, column=40), end=Location(line=30, column=53))
region_000076 = Region(begin=Location(line=30, column=53), end=Location(line=30, column=55))
region_000077 = Region(begin=Location(line=30, column=6), end=Location(line=30, column=14))
region_000078 = Region(begin=Location(line=32, column=40), end=Location(line=32, column=57))
region_000079 = Region(begin=Location(line=32, column=40), end=Location(line=32, column=53))
region_000080 = Region(begin=Location(line=32, column=70), end=Location(line=32, column=88))
region_000081 = Region(begin=Location(line=32, column=70), end=Location(line=32, column=78))
region_000082 = Region(begin=Location(line=32, column=70), end=Location(line=32, column=93))
region_000083 = Region(begin=Location(line=32, column=89), end=Location(line=32, column=93))
region_000084 = Region(begin=Location(line=32, column=95), end=Location(line=32, column=113))
region_000085 = Region(begin=Location(line=32, column=95), end=Location(line=32, column=103))
region_000086 = Region(begin=Location(line=32, column=95), end=Location(line=32, column=118))
region_000087 = Region(begin=Location(line=32, column=114), end=Location(line=32, column=118))
region_000088 = Region(begin=Location(line=32, column=69), end=Location(line=32, column=119))
region_000089 = Region(begin=Location(line=32, column=70), end=Location(line=32, column=118))
region_000090 = Region(begin=Location(line=32, column=5), end=Location(line=34, column=1))
region_000091 = Region(begin=Location(line=32, column=24), end=Location(line=32, column=30))
region_000092 = Region(begin=Location(line=32, column=31), end=Location(line=32, column=39))
region_000093 = Region(begin=Location(line=32, column=58), end=Location(line=32, column=69))
region_000094 = Region(begin=Location(line=32, column=6), end=Location(line=32, column=14))
region_000095 = Region(begin=Location(line=32, column=16), end=Location(line=32, column=22))
region_000096 = Region(begin=Location(line=34, column=32), end=Location(line=34, column=40))
region_000097 = Region(begin=Location(line=34, column=32), end=Location(line=34, column=36))
region_000098 = Region(begin=Location(line=34, column=51), end=Location(line=34, column=68))
region_000099 = Region(begin=Location(line=34, column=51), end=Location(line=34, column=58))
region_000100 = Region(begin=Location(line=34, column=51), end=Location(line=34, column=73))
region_000101 = Region(begin=Location(line=34, column=69), end=Location(line=34, column=73))
region_000102 = Region(begin=Location(line=34, column=50), end=Location(line=34, column=74))
region_000103 = Region(begin=Location(line=34, column=5), end=Location(line=35, column=1))
region_000104 = Region(begin=Location(line=34, column=16), end=Location(line=34, column=22))
region_000105 = Region(begin=Location(line=34, column=75), end=Location(line=34, column=84))
region_000106 = Region(begin=Location(line=34, column=23), end=Location(line=34, column=31))
region_000107 = Region(begin=Location(line=34, column=41), end=Location(line=34, column=50))
region_000108 = Region(begin=Location(line=34, column=6), end=Location(line=34, column=14))
region_000109 = Region(begin=Location(line=35, column=32), end=Location(line=35, column=40))
region_000110 = Region(begin=Location(line=35, column=32), end=Location(line=35, column=36))
region_000111 = Region(begin=Location(line=35, column=54), end=Location(line=35, column=71))
region_000112 = Region(begin=Location(line=35, column=54), end=Location(line=35, column=61))
region_000113 = Region(begin=Location(line=35, column=54), end=Location(line=35, column=76))
region_000114 = Region(begin=Location(line=35, column=72), end=Location(line=35, column=76))
region_000115 = Region(begin=Location(line=35, column=53), end=Location(line=35, column=77))
region_000116 = Region(begin=Location(line=35, column=5), end=Location(line=36, column=1))
region_000117 = Region(begin=Location(line=35, column=16), end=Location(line=35, column=22))
region_000118 = Region(begin=Location(line=35, column=78), end=Location(line=35, column=87))
region_000119 = Region(begin=Location(line=35, column=23), end=Location(line=35, column=31))
region_000120 = Region(begin=Location(line=35, column=41), end=Location(line=35, column=53))
region_000121 = Region(begin=Location(line=35, column=6), end=Location(line=35, column=14))
region_000122 = Region(begin=Location(line=36, column=32), end=Location(line=36, column=40))
region_000123 = Region(begin=Location(line=36, column=32), end=Location(line=36, column=36))
region_000124 = Region(begin=Location(line=36, column=50), end=Location(line=36, column=67))
region_000125 = Region(begin=Location(line=36, column=50), end=Location(line=36, column=57))
region_000126 = Region(begin=Location(line=36, column=50), end=Location(line=36, column=72))
region_000127 = Region(begin=Location(line=36, column=68), end=Location(line=36, column=72))
region_000128 = Region(begin=Location(line=36, column=49), end=Location(line=36, column=73))
region_000129 = Region(begin=Location(line=36, column=5), end=Location(line=37, column=1))
region_000130 = Region(begin=Location(line=36, column=16), end=Location(line=36, column=22))
region_000131 = Region(begin=Location(line=36, column=74), end=Location(line=36, column=83))
region_000132 = Region(begin=Location(line=36, column=23), end=Location(line=36, column=31))
region_000133 = Region(begin=Location(line=36, column=41), end=Location(line=36, column=49))
region_000134 = Region(begin=Location(line=36, column=6), end=Location(line=36, column=14))
region_000135 = Region(begin=Location(line=37, column=32), end=Location(line=37, column=40))
region_000136 = Region(begin=Location(line=37, column=32), end=Location(line=37, column=36))
region_000137 = Region(begin=Location(line=37, column=55), end=Location(line=37, column=72))
region_000138 = Region(begin=Location(line=37, column=55), end=Location(line=37, column=62))
region_000139 = Region(begin=Location(line=37, column=55), end=Location(line=37, column=77))
region_000140 = Region(begin=Location(line=37, column=73), end=Location(line=37, column=77))
region_000141 = Region(begin=Location(line=37, column=54), end=Location(line=37, column=78))
region_000142 = Region(begin=Location(line=37, column=5), end=Location(line=38, column=1))
region_000143 = Region(begin=Location(line=37, column=16), end=Location(line=37, column=22))
region_000144 = Region(begin=Location(line=37, column=79), end=Location(line=37, column=88))
region_000145 = Region(begin=Location(line=37, column=23), end=Location(line=37, column=31))
region_000146 = Region(begin=Location(line=37, column=41), end=Location(line=37, column=54))
region_000147 = Region(begin=Location(line=37, column=6), end=Location(line=37, column=14))
region_000148 = Region(begin=Location(line=38, column=32), end=Location(line=38, column=40))
region_000149 = Region(begin=Location(line=38, column=32), end=Location(line=38, column=36))
region_000150 = Region(begin=Location(line=38, column=53), end=Location(line=38, column=70))
region_000151 = Region(begin=Location(line=38, column=53), end=Location(line=38, column=60))
region_000152 = Region(begin=Location(line=38, column=53), end=Location(line=38, column=75))
region_000153 = Region(begin=Location(line=38, column=71), end=Location(line=38, column=75))
region_000154 = Region(begin=Location(line=38, column=52), end=Location(line=38, column=76))
region_000155 = Region(begin=Location(line=38, column=5), end=Location(line=39, column=1))
region_000156 = Region(begin=Location(line=38, column=16), end=Location(line=38, column=22))
region_000157 = Region(begin=Location(line=38, column=77), end=Location(line=38, column=86))
region_000158 = Region(begin=Location(line=38, column=23), end=Location(line=38, column=31))
region_000159 = Region(begin=Location(line=38, column=41), end=Location(line=38, column=52))
region_000160 = Region(begin=Location(line=38, column=6), end=Location(line=38, column=14))
region_000161 = Region(begin=Location(line=39, column=32), end=Location(line=39, column=40))
region_000162 = Region(begin=Location(line=39, column=32), end=Location(line=39, column=36))
region_000163 = Region(begin=Location(line=39, column=58), end=Location(line=39, column=75))
region_000164 = Region(begin=Location(line=39, column=58), end=Location(line=39, column=65))
region_000165 = Region(begin=Location(line=39, column=58), end=Location(line=39, column=80))
region_000166 = Region(begin=Location(line=39, column=76), end=Location(line=39, column=80))
region_000167 = Region(begin=Location(line=39, column=57), end=Location(line=39, column=81))
region_000168 = Region(begin=Location(line=39, column=5), end=Location(line=40, column=1))
region_000169 = Region(begin=Location(line=39, column=16), end=Location(line=39, column=22))
region_000170 = Region(begin=Location(line=39, column=82), end=Location(line=39, column=91))
region_000171 = Region(begin=Location(line=39, column=23), end=Location(line=39, column=31))
region_000172 = Region(begin=Location(line=39, column=41), end=Location(line=39, column=57))
region_000173 = Region(begin=Location(line=39, column=6), end=Location(line=39, column=14))
region_000174 = Region(begin=Location(line=19, column=1), end=Location(line=40, column=1))
region_000175 = Region(begin=Location(line=19, column=1), end=Location(line=19, column=7))
region_000176 = Region(begin=Location(line=19, column=8), end=Location(line=19, column=17))
region_000177 = Region(begin=Location(line=19, column=24), end=Location(line=19, column=28))
region_000178 = Region(begin=Location(line=19, column=28), end=Location(line=40, column=1))


# ----------------------------------------------------------------------
statement_000000 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000000, region_000001],
    name="ArchInt",
)

statement_000001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000002, region_000006, region_000003, region_000004, region_000002, region_000005, None, None, None, region_000007, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.standard,
    return_type=statement_000000,
    name="GetBytes",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000002 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000008, region_000009],
    name="ThisType",
)

statement_000003 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000010, region_000010, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000004 = TemplateParametersParserInfo.Create(
    regions=[region_000011, None, region_000010, None],
    positional=None,
    any=[statement_000003, ],
    keyword=None,
)

statement_000005 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000012, region_000013],
    name="ArchiveT",
)

statement_000006 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000014, None, region_000015],  # type: ignore
    type=statement_000005,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000007 = FuncParametersParserInfo.Create(
    regions=[region_000016, None, region_000014, None],
    positional=None,
    any_args=[statement_000006, ],
    keyword=None,
)

statement_000008 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000017, region_000016, region_000018, None, region_000019, region_000020, None, None, None, region_000021, None, None, None, None, region_000022],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000007,
    visibility_param=VisibilityModifier.public,
    mutability_param=None,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000002,
    name=FuncDefinitionStatementParserInfoOperatorType.Deserialize,
    documentation=None,
    templates=statement_000004,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=True,
)

statement_000009 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000023, region_000023],
    name=NoneType(),
)

statement_000010 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000024, region_000024, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000011 = TemplateParametersParserInfo.Create(
    regions=[region_000025, None, region_000024, None],
    positional=None,
    any=[statement_000010, ],
    keyword=None,
)

statement_000012 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000026, region_000027],
    name="ArchiveT",
)

statement_000013 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000028, None, region_000029],  # type: ignore
    type=statement_000012,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000014 = FuncParametersParserInfo.Create(
    regions=[region_000030, None, region_000028, None],
    positional=None,
    any_args=[statement_000013, ],
    keyword=None,
)

statement_000015 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000031, region_000030, region_000032, region_000033, region_000034, region_000035, None, None, None, region_000036, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000014,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000009,
    name=FuncDefinitionStatementParserInfoOperatorType.Serialize,
    documentation=None,
    templates=statement_000011,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000016 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000037, region_000037],
    name=NoneType(),
)

statement_000017 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000038, region_000038, None],
    name="VisitorT",
    is_variadic=None,
    default_type=None,
)

statement_000018 = TemplateParametersParserInfo.Create(
    regions=[region_000039, None, region_000038, None],
    positional=None,
    any=[statement_000017, ],
    keyword=None,
)

statement_000019 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000040, region_000041],
    name="VisitorT",
)

statement_000020 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000042, None, region_000043],  # type: ignore
    type=statement_000019,
    is_variadic=None,
    name="visitor",
    default_value=None,
)

statement_000021 = FuncParametersParserInfo.Create(
    regions=[region_000044, None, region_000042, None],
    positional=None,
    any_args=[statement_000020, ],
    keyword=None,
)

statement_000022 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000045, region_000044, region_000046, region_000047, region_000048, region_000049, None, None, None, region_000050, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000021,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000016,
    name=FuncDefinitionStatementParserInfoOperatorType.Accept,
    documentation=None,
    templates=statement_000018,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000023 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000051, region_000052],
    name="ThisType",
)

statement_000024 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000053, region_000058, region_000054, region_000055, region_000056, region_000057, None, None, None, region_000059, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000023,
    name=FuncDefinitionStatementParserInfoOperatorType.Clone,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000025 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000060, region_000061],
    name=BooleanType(),
)

statement_000026 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000062, region_000067, region_000063, region_000064, region_000065, region_000066, None, None, None, region_000068, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000025,
    name=FuncDefinitionStatementParserInfoOperatorType.ToBool,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000027 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000069, region_000070],
    name=StringType(),
)

statement_000028 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000071, region_000076, region_000072, region_000073, region_000074, region_000075, None, None, None, region_000077, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000027,
    name=FuncDefinitionStatementParserInfoOperatorType.ToString,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000029 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000078, region_000079],
    name="CompareResult",
)

statement_000030 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000080, region_000081],
    name="ThisType",
)

statement_000031 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000082, None, region_000083],  # type: ignore
    type=statement_000030,
    is_variadic=None,
    name="this",
    default_value=None,
)

statement_000032 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000084, region_000085],
    name="ThisType",
)

statement_000033 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000086, None, region_000087],  # type: ignore
    type=statement_000032,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000034 = FuncParametersParserInfo.Create(
    regions=[region_000088, None, region_000089, None],
    positional=None,
    any_args=[statement_000031, statement_000033, ],
    keyword=None,
)

statement_000035 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000090, region_000088, region_000091, None, region_000092, region_000093, None, None, None, region_000094, None, None, None, None, region_000095],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000034,
    visibility_param=VisibilityModifier.public,
    mutability_param=None,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000029,
    name=FuncDefinitionStatementParserInfoOperatorType.Compare,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=True,
)

statement_000036 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000096, region_000097],
    name=BooleanType(),
)

statement_000037 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000098, region_000099],
    name="Integer",
)

statement_000038 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000100, None, region_000101],  # type: ignore
    type=statement_000037,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000039 = FuncParametersParserInfo.Create(
    regions=[region_000102, None, region_000100, None],
    positional=None,
    any_args=[statement_000038, ],
    keyword=None,
)

statement_000040 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000103, region_000102, region_000104, region_000105, region_000106, region_000107, None, None, None, region_000108, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000039,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000036,
    name=FuncDefinitionStatementParserInfoOperatorType.Equal,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000041 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000109, region_000110],
    name=BooleanType(),
)

statement_000042 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000111, region_000112],
    name="Integer",
)

statement_000043 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000113, None, region_000114],  # type: ignore
    type=statement_000042,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000044 = FuncParametersParserInfo.Create(
    regions=[region_000115, None, region_000113, None],
    positional=None,
    any_args=[statement_000043, ],
    keyword=None,
)

statement_000045 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000116, region_000115, region_000117, region_000118, region_000119, region_000120, None, None, None, region_000121, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000044,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000041,
    name=FuncDefinitionStatementParserInfoOperatorType.NotEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000046 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000122, region_000123],
    name=BooleanType(),
)

statement_000047 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000124, region_000125],
    name="Integer",
)

statement_000048 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000126, None, region_000127],  # type: ignore
    type=statement_000047,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000049 = FuncParametersParserInfo.Create(
    regions=[region_000128, None, region_000126, None],
    positional=None,
    any_args=[statement_000048, ],
    keyword=None,
)

statement_000050 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000129, region_000128, region_000130, region_000131, region_000132, region_000133, None, None, None, region_000134, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000049,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000046,
    name=FuncDefinitionStatementParserInfoOperatorType.Less,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000051 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000135, region_000136],
    name=BooleanType(),
)

statement_000052 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000137, region_000138],
    name="Integer",
)

statement_000053 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000139, None, region_000140],  # type: ignore
    type=statement_000052,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000054 = FuncParametersParserInfo.Create(
    regions=[region_000141, None, region_000139, None],
    positional=None,
    any_args=[statement_000053, ],
    keyword=None,
)

statement_000055 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000142, region_000141, region_000143, region_000144, region_000145, region_000146, None, None, None, region_000147, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000054,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000051,
    name=FuncDefinitionStatementParserInfoOperatorType.LessEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000056 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000148, region_000149],
    name=BooleanType(),
)

statement_000057 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000150, region_000151],
    name="Integer",
)

statement_000058 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000152, None, region_000153],  # type: ignore
    type=statement_000057,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000059 = FuncParametersParserInfo.Create(
    regions=[region_000154, None, region_000152, None],
    positional=None,
    any_args=[statement_000058, ],
    keyword=None,
)

statement_000060 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000155, region_000154, region_000156, region_000157, region_000158, region_000159, None, None, None, region_000160, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000059,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000056,
    name=FuncDefinitionStatementParserInfoOperatorType.Greater,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000061 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000161, region_000162],
    name=BooleanType(),
)

statement_000062 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000163, region_000164],
    name="Integer",
)

statement_000063 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000165, None, region_000166],  # type: ignore
    type=statement_000062,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000064 = FuncParametersParserInfo.Create(
    regions=[region_000167, None, region_000165, None],
    positional=None,
    any_args=[statement_000063, ],
    keyword=None,
)

statement_000065 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000168, region_000167, region_000169, region_000170, region_000171, region_000172, None, None, None, region_000173, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000064,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000061,
    name=FuncDefinitionStatementParserInfoOperatorType.GreaterEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000066 = ClassStatementParserInfo.Create(
    regions=[region_000174, region_000175, region_000176, region_000177, None, None, None, None, region_000178, region_000174, None, None],
    class_capabilities=StandardCapabilities,
    visibility_param=VisibilityModifier.public,
    class_modifier_param=ClassModifier.immutable,
    name="Bool",
    documentation=None,
    templates=None,
    constraints=None,
    extends=None,
    implements=None,
    uses=None,
    statements=[statement_000001, statement_000008, statement_000015, statement_000022, statement_000024, statement_000026, statement_000028, statement_000035, statement_000040, statement_000045, statement_000050, statement_000055, statement_000060, statement_000065, ],
    constructor_visibility_param=VisibilityModifier.public,
    is_abstract=None,
    is_final=None,
)

public_exports = [
    statement_000066,
]
