# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Documentation: None
Regions__: # <class 'types.RootParserInfoRegions'>
  Documentation: None
  Self__: "[Ln 1, Col 1] -> [Ln 4, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.GeneratorExpressionParserInfo.GeneratorExpressionParserInfo'>
      ConditionExpression: None
      Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
        Name: "value1"
        Regions__: # <class 'types.VariableNameParserInfoRegions'>
          Name: "[Ln 1, Col 16] -> [Ln 1, Col 22]"
          Self__: "[Ln 1, Col 16] -> [Ln 1, Col 22]"
      Regions__: # <class 'types.GeneratorExpressionParserInfoRegions'>
        ConditionExpression: None
        Name: "[Ln 1, Col 16] -> [Ln 1, Col 22]"
        ResultExpression: "[Ln 1, Col 5] -> [Ln 1, Col 11]"
        Self__: "[Ln 1, Col 5] -> [Ln 1, Col 36]"
        SourceExpression: "[Ln 1, Col 26] -> [Ln 1, Col 36]"
      ResultExpression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "value1"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 1, Col 5] -> [Ln 1, Col 11]"
            Self__: "[Ln 1, Col 5] -> [Ln 1, Col 11]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 1, Col 5] -> [Ln 1, Col 11]"
          Self__: "[Ln 1, Col 5] -> [Ln 1, Col 11]"
      SourceExpression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
        Arguments: False
        Expression: # <class 'Original.Parser.Expressions.FuncNameExpressionParserInfo.FuncNameExpressionParserInfo'>
          Name: "OneToTen"
          Regions__: # <class 'types.FuncNameExpressionParserInfoRegions'>
            Name: "[Ln 1, Col 26] -> [Ln 1, Col 34]"
            Self__: "[Ln 1, Col 26] -> [Ln 1, Col 34]"
        Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
          Arguments: "[Ln 1, Col 34] -> [Ln 1, Col 36]"
          Expression: "[Ln 1, Col 26] -> [Ln 1, Col 34]"
          Self__: "[Ln 1, Col 26] -> [Ln 1, Col 36]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "a"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 1, Col 1] -> [Ln 1, Col 2]"
        Self__: "[Ln 1, Col 1] -> [Ln 1, Col 2]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 1, Col 5] -> [Ln 1, Col 36]"
      Modifier: None
      Name: "[Ln 1, Col 1] -> [Ln 1, Col 2]"
      Self__: "[Ln 1, Col 1] -> [Ln 2, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.GeneratorExpressionParserInfo.GeneratorExpressionParserInfo'>
      ConditionExpression: None
      Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
        Name: "value2"
        Regions__: # <class 'types.VariableNameParserInfoRegions'>
          Name: "[Ln 2, Col 24] -> [Ln 2, Col 30]"
          Self__: "[Ln 2, Col 24] -> [Ln 2, Col 30]"
      Regions__: # <class 'types.GeneratorExpressionParserInfoRegions'>
        ConditionExpression: None
        Name: "[Ln 2, Col 24] -> [Ln 2, Col 30]"
        ResultExpression: "[Ln 2, Col 5] -> [Ln 2, Col 19]"
        Self__: "[Ln 2, Col 5] -> [Ln 2, Col 44]"
        SourceExpression: "[Ln 2, Col 34] -> [Ln 2, Col 44]"
      ResultExpression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
        Arguments:
          - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "value2"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 2, Col 12] -> [Ln 2, Col 18]"
                  Self__: "[Ln 2, Col 12] -> [Ln 2, Col 18]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 2, Col 12] -> [Ln 2, Col 18]"
                Self__: "[Ln 2, Col 12] -> [Ln 2, Col 18]"
            Keyword: None
            Regions__: # <class 'types.ArgumentParserInfoRegions'>
              Expression: "[Ln 2, Col 12] -> [Ln 2, Col 18]"
              Keyword: None
              Self__: "[Ln 2, Col 12] -> [Ln 2, Col 18]"
        Expression: # <class 'Original.Parser.Expressions.FuncNameExpressionParserInfo.FuncNameExpressionParserInfo'>
          Name: "AddOne"
          Regions__: # <class 'types.FuncNameExpressionParserInfoRegions'>
            Name: "[Ln 2, Col 5] -> [Ln 2, Col 11]"
            Self__: "[Ln 2, Col 5] -> [Ln 2, Col 11]"
        Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
          Arguments: "[Ln 2, Col 11] -> [Ln 2, Col 19]"
          Expression: "[Ln 2, Col 5] -> [Ln 2, Col 11]"
          Self__: "[Ln 2, Col 5] -> [Ln 2, Col 19]"
      SourceExpression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
        Arguments: False
        Expression: # <class 'Original.Parser.Expressions.FuncNameExpressionParserInfo.FuncNameExpressionParserInfo'>
          Name: "OneToTen"
          Regions__: # <class 'types.FuncNameExpressionParserInfoRegions'>
            Name: "[Ln 2, Col 34] -> [Ln 2, Col 42]"
            Self__: "[Ln 2, Col 34] -> [Ln 2, Col 42]"
        Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
          Arguments: "[Ln 2, Col 42] -> [Ln 2, Col 44]"
          Expression: "[Ln 2, Col 34] -> [Ln 2, Col 42]"
          Self__: "[Ln 2, Col 34] -> [Ln 2, Col 44]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "b"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 2, Col 1] -> [Ln 2, Col 2]"
        Self__: "[Ln 2, Col 1] -> [Ln 2, Col 2]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 2, Col 5] -> [Ln 2, Col 44]"
      Modifier: None
      Name: "[Ln 2, Col 1] -> [Ln 2, Col 2]"
      Self__: "[Ln 2, Col 1] -> [Ln 3, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.GeneratorExpressionParserInfo.GeneratorExpressionParserInfo'>
      ConditionExpression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
        Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
          Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
            Name: "value3"
            Regions__: # <class 'types.VariableNameParserInfoRegions'>
              Name: "[Ln 3, Col 48] -> [Ln 3, Col 54]"
              Self__: "[Ln 3, Col 48] -> [Ln 3, Col 54]"
          Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
            Name: "[Ln 3, Col 48] -> [Ln 3, Col 54]"
            Self__: "[Ln 3, Col 48] -> [Ln 3, Col 54]"
        Operator: "OperatorType.Modulo"
        Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
          Left: "[Ln 3, Col 48] -> [Ln 3, Col 54]"
          Operator: "[Ln 3, Col 55] -> [Ln 3, Col 56]"
          Right: "[Ln 3, Col 57] -> [Ln 3, Col 60]"
          Self__: "[Ln 3, Col 48] -> [Ln 3, Col 60]"
        Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
          Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
            Name: "two"
            Regions__: # <class 'types.VariableNameParserInfoRegions'>
              Name: "[Ln 3, Col 57] -> [Ln 3, Col 60]"
              Self__: "[Ln 3, Col 57] -> [Ln 3, Col 60]"
          Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
            Name: "[Ln 3, Col 57] -> [Ln 3, Col 60]"
            Self__: "[Ln 3, Col 57] -> [Ln 3, Col 60]"
      Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
        Name: "value3"
        Regions__: # <class 'types.VariableNameParserInfoRegions'>
          Name: "[Ln 3, Col 24] -> [Ln 3, Col 30]"
          Self__: "[Ln 3, Col 24] -> [Ln 3, Col 30]"
      Regions__: # <class 'types.GeneratorExpressionParserInfoRegions'>
        ConditionExpression: "[Ln 3, Col 48] -> [Ln 3, Col 60]"
        Name: "[Ln 3, Col 24] -> [Ln 3, Col 30]"
        ResultExpression: "[Ln 3, Col 5] -> [Ln 3, Col 19]"
        Self__: "[Ln 3, Col 5] -> [Ln 3, Col 60]"
        SourceExpression: "[Ln 3, Col 34] -> [Ln 3, Col 44]"
      ResultExpression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
        Arguments:
          - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "value3"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 3, Col 12] -> [Ln 3, Col 18]"
                  Self__: "[Ln 3, Col 12] -> [Ln 3, Col 18]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 3, Col 12] -> [Ln 3, Col 18]"
                Self__: "[Ln 3, Col 12] -> [Ln 3, Col 18]"
            Keyword: None
            Regions__: # <class 'types.ArgumentParserInfoRegions'>
              Expression: "[Ln 3, Col 12] -> [Ln 3, Col 18]"
              Keyword: None
              Self__: "[Ln 3, Col 12] -> [Ln 3, Col 18]"
        Expression: # <class 'Original.Parser.Expressions.FuncNameExpressionParserInfo.FuncNameExpressionParserInfo'>
          Name: "AddOne"
          Regions__: # <class 'types.FuncNameExpressionParserInfoRegions'>
            Name: "[Ln 3, Col 5] -> [Ln 3, Col 11]"
            Self__: "[Ln 3, Col 5] -> [Ln 3, Col 11]"
        Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
          Arguments: "[Ln 3, Col 11] -> [Ln 3, Col 19]"
          Expression: "[Ln 3, Col 5] -> [Ln 3, Col 11]"
          Self__: "[Ln 3, Col 5] -> [Ln 3, Col 19]"
      SourceExpression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
        Arguments: False
        Expression: # <class 'Original.Parser.Expressions.FuncNameExpressionParserInfo.FuncNameExpressionParserInfo'>
          Name: "OneToTen"
          Regions__: # <class 'types.FuncNameExpressionParserInfoRegions'>
            Name: "[Ln 3, Col 34] -> [Ln 3, Col 42]"
            Self__: "[Ln 3, Col 34] -> [Ln 3, Col 42]"
        Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
          Arguments: "[Ln 3, Col 42] -> [Ln 3, Col 44]"
          Expression: "[Ln 3, Col 34] -> [Ln 3, Col 42]"
          Self__: "[Ln 3, Col 34] -> [Ln 3, Col 44]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "c"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 3, Col 1] -> [Ln 3, Col 2]"
        Self__: "[Ln 3, Col 1] -> [Ln 3, Col 2]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 3, Col 5] -> [Ln 3, Col 60]"
      Modifier: None
      Name: "[Ln 3, Col 1] -> [Ln 3, Col 2]"
      Self__: "[Ln 3, Col 1] -> [Ln 4, Col 1]"
