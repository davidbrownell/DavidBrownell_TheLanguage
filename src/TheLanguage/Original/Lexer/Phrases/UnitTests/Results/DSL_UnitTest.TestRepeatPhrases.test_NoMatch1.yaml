# <class 'TheLanguage.Lexer.Components.Phrase.Phrase.LexResult'>
Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
    DataItems:
      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                DataItems:
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[1, 1] (0)"
                      IterEnd: "[1, 6] (5)"
                      Token: "Word Token"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                        Match: "<_sre.SRE_Match object; span=(0, 5), match='worda'>"
                      Whitespace: None
                    Phrase: "Word Token"
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[1, 6] (5)"
                      IterEnd: "[2, 1] (6)"
                      Token: "Newline+"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.NewlineToken.MatchResult'>
                        End: 6
                        Start: 5
                      Whitespace: None
                    Phrase: "Newline+"
                IsComplete: True
              Phrase: "[Word Token, Newline+]"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                DataItems:
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[2, 1] (6)"
                      IterEnd: "[2, 6] (11)"
                      Token: "Word Token"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                        Match: "<_sre.SRE_Match object; span=(6, 11), match='wordb'>"
                      Whitespace: None
                    Phrase: "Word Token"
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[2, 6] (11)"
                      IterEnd: "[3, 1] (12)"
                      Token: "Newline+"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.NewlineToken.MatchResult'>
                        End: 12
                        Start: 11
                      Whitespace: None
                    Phrase: "Newline+"
                IsComplete: True
              Phrase: "[Word Token, Newline+]"
          IsComplete: True
        Phrase: "{[Word Token, Newline+], 0, None}"
      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                DataItems:
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: None
                    Phrase: "Number Token"
                IsComplete: True
              Phrase: "[Number Token, Newline+]"
          IsComplete: True
        Phrase: "{[Number Token, Newline+], 1, None}"
    IsComplete: True
  Phrase: "[{[Word Token, Newline+], 0, None}, {[Number Token, Newline+], 1, None}, {[Upper Token, Newline+], 0, 1}, {[Word Token, Newline+], 1, None}]"
IterBegin: "[1, 1] (0)"
IterEnd: "[3, 1] (12)"
Success: False
