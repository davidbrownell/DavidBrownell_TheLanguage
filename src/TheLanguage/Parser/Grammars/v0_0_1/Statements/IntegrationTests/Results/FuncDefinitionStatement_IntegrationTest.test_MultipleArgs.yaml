# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 1] (0)"
                            IterEnd: "[1, 4] (3)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(0, 3), match='Int'>"
                            Whitespace: None
                        IterBegin: "[1, 1] (0)"
                        IterEnd: "[1, 4] (3)"
                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 4] (3)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 4] (3)"
                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 5] (4)"
                IterEnd: "[1, 10] (9)"
                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(4, 9), match='Func1'>"
                Whitespace:
                  - 3
                  - 4
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 10] (9)"
                    IterEnd: "[1, 11] (10)"
                    Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(9, 10), match='('>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[1, 11] (10)"
                                                    IterEnd: "[1, 15] (14)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(10, 14), match='Bool'>"
                                                    Whitespace: None
                                                IterBegin: "[1, 11] (10)"
                                                IterEnd: "[1, 15] (14)"
                                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[1, 11] (10)"
                                            IterEnd: "[1, 15] (14)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[1, 11] (10)"
                                        IterEnd: "[1, 15] (14)"
                                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[1, 16] (15)"
                                                    IterEnd: "[1, 17] (16)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(15, 16), match='b'>"
                                                    Whitespace:
                                                      - 14
                                                      - 15
                                                IterBegin: "[1, 16] (15)"
                                                IterEnd: "[1, 17] (16)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[1, 16] (15)"
                                            IterEnd: "[1, 17] (16)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[1, 16] (15)"
                                        IterEnd: "[1, 17] (16)"
                                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[1, 11] (10)"
                                    IterEnd: "[1, 17] (16)"
                                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[1, 11] (10)"
                                IterEnd: "[1, 17] (16)"
                                Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[1, 17] (16)"
                                        IterEnd: "[1, 18] (17)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(16, 17), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 19] (18)"
                                                            IterEnd: "[1, 23] (22)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(18, 22), match='Char'>"
                                                            Whitespace:
                                                              - 17
                                                              - 18
                                                        IterBegin: "[1, 19] (18)"
                                                        IterEnd: "[1, 23] (22)"
                                                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[1, 19] (18)"
                                                    IterEnd: "[1, 23] (22)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[1, 19] (18)"
                                                IterEnd: "[1, 23] (22)"
                                                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 24] (23)"
                                                            IterEnd: "[1, 25] (24)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(23, 24), match='c'>"
                                                            Whitespace:
                                                              - 22
                                                              - 23
                                                        IterBegin: "[1, 24] (23)"
                                                        IterEnd: "[1, 25] (24)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[1, 24] (23)"
                                                    IterEnd: "[1, 25] (24)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[1, 24] (23)"
                                                IterEnd: "[1, 25] (24)"
                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[1, 19] (18)"
                                            IterEnd: "[1, 25] (24)"
                                            Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[1, 19] (18)"
                                        IterEnd: "[1, 25] (24)"
                                        Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[1, 17] (16)"
                                    IterEnd: "[1, 25] (24)"
                                    Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[1, 25] (24)"
                                        IterEnd: "[1, 26] (25)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(24, 25), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 27] (26)"
                                                            IterEnd: "[1, 33] (32)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(26, 32), match='Double'>"
                                                            Whitespace:
                                                              - 25
                                                              - 26
                                                        IterBegin: "[1, 27] (26)"
                                                        IterEnd: "[1, 33] (32)"
                                                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[1, 27] (26)"
                                                    IterEnd: "[1, 33] (32)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[1, 27] (26)"
                                                IterEnd: "[1, 33] (32)"
                                                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 34] (33)"
                                                            IterEnd: "[1, 35] (34)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(33, 34), match='d'>"
                                                            Whitespace:
                                                              - 32
                                                              - 33
                                                        IterBegin: "[1, 34] (33)"
                                                        IterEnd: "[1, 35] (34)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[1, 34] (33)"
                                                    IterEnd: "[1, 35] (34)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[1, 34] (33)"
                                                IterEnd: "[1, 35] (34)"
                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[1, 27] (26)"
                                            IterEnd: "[1, 35] (34)"
                                            Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[1, 27] (26)"
                                        IterEnd: "[1, 35] (34)"
                                        Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[1, 25] (24)"
                                    IterEnd: "[1, 35] (34)"
                                    Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[1, 17] (16)"
                                IterEnd: "[1, 35] (34)"
                                Type: "Repeat: {Comma and Parameter, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                            IterBegin: "[1, 11] (10)"
                            IterEnd: "[1, 35] (34)"
                            Type: "Traditional <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[1, 11] (10)"
                        IterEnd: "[1, 35] (34)"
                        Type: "Or: (Repeat: {New Style, 1, None}, Traditional) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[1, 11] (10)"
                    IterEnd: "[1, 35] (34)"
                    Type: "Repeat: {Or: (Repeat: {New Style, 1, None}, Traditional), 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 35] (34)"
                    IterEnd: "[1, 36] (35)"
                    Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(34, 35), match=')'>"
                    Whitespace: None
                IterBegin: "[1, 10] (9)"
                IterEnd: "[1, 36] (35)"
                Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 36] (35)"
                IterEnd: "[1, 37] (36)"
                Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(35, 36), match=':'>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 37] (36)"
                IterEnd: "[2, 1] (37)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 37
                  Start: 36
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 1] (37)"
                IterEnd: "[2, 5] (41)"
                Type: "Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                  End: 41
                  Start: 37
                  Value: 4
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[2, 5] (41)"
                                IterEnd: "[2, 9] (45)"
                                Type: "'pass' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(41, 45), match='pass'>"
                                Whitespace: None
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[2, 9] (45)"
                                IterEnd: "[4, 1] (47)"
                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                  End: 47
                                  Start: 45
                                Whitespace: None
                            IterBegin: "[2, 5] (41)"
                            IterEnd: "[4, 1] (47)"
                            Type: "Pass Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[2, 5] (41)"
                        IterEnd: "[4, 1] (47)"
                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[2, 5] (41)"
                    IterEnd: "[4, 1] (47)"
                    Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                IterBegin: "[2, 5] (41)"
                IterEnd: "[4, 1] (47)"
                Type: "Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 1] (47)"
                IterEnd: "[4, 1] (47)"
                Type: "Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                  {}
                Whitespace: None
            Info: # <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.FuncDefinitionStatement.FuncDefinitionStatement.NodeInfo'>
              Name: "Func1"
              Parameters:   ParametersType.any:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[1, 11] (10)"
                                    IterEnd: "[1, 15] (14)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(10, 14), match='Bool'>"
                                    Whitespace: None
                                IterBegin: "[1, 11] (10)"
                                IterEnd: "[1, 15] (14)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[1, 11] (10)"
                            IterEnd: "[1, 15] (14)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[1, 11] (10)"
                        IterEnd: "[1, 15] (14)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[1, 16] (15)"
                                    IterEnd: "[1, 17] (16)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(15, 16), match='b'>"
                                    Whitespace:
                                      - 14
                                      - 15
                                IterBegin: "[1, 16] (15)"
                                IterEnd: "[1, 17] (16)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[1, 16] (15)"
                            IterEnd: "[1, 17] (16)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[1, 16] (15)"
                        IterEnd: "[1, 17] (16)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[1, 11] (10)"
                    IterEnd: "[1, 17] (16)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[1, 19] (18)"
                                    IterEnd: "[1, 23] (22)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(18, 22), match='Char'>"
                                    Whitespace:
                                      - 17
                                      - 18
                                IterBegin: "[1, 19] (18)"
                                IterEnd: "[1, 23] (22)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[1, 19] (18)"
                            IterEnd: "[1, 23] (22)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[1, 19] (18)"
                        IterEnd: "[1, 23] (22)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[1, 24] (23)"
                                    IterEnd: "[1, 25] (24)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(23, 24), match='c'>"
                                    Whitespace:
                                      - 22
                                      - 23
                                IterBegin: "[1, 24] (23)"
                                IterEnd: "[1, 25] (24)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[1, 24] (23)"
                            IterEnd: "[1, 25] (24)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[1, 24] (23)"
                        IterEnd: "[1, 25] (24)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[1, 19] (18)"
                    IterEnd: "[1, 25] (24)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[1, 27] (26)"
                                    IterEnd: "[1, 33] (32)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(26, 32), match='Double'>"
                                    Whitespace:
                                      - 25
                                      - 26
                                IterBegin: "[1, 27] (26)"
                                IterEnd: "[1, 33] (32)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[1, 27] (26)"
                            IterEnd: "[1, 33] (32)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[1, 27] (26)"
                        IterEnd: "[1, 33] (32)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[1, 34] (33)"
                                    IterEnd: "[1, 35] (34)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(33, 34), match='d'>"
                                    Whitespace:
                                      - 32
                                      - 33
                                IterBegin: "[1, 34] (33)"
                                IterEnd: "[1, 35] (34)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[1, 34] (33)"
                            IterEnd: "[1, 35] (34)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[1, 34] (33)"
                        IterEnd: "[1, 35] (34)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[1, 27] (26)"
                    IterEnd: "[1, 35] (34)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              ReturnType: "Standard Type"
              Statements:
                - "Pass Statement"
              Visibility: "VisibilityModifier.private"
            IterBegin: "[1, 1] (0)"
            IterEnd: "[4, 1] (47)"
            Type: "Func Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[4, 1] (47)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[4, 1] (47)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[4, 1] (47)"
                            IterEnd: "[4, 4] (50)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(47, 50), match='Int'>"
                            Whitespace: None
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[4, 5] (51)"
                                IterEnd: "[4, 8] (54)"
                                Type: "Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(51, 54), match='var'>"
                                Whitespace:
                                  - 50
                                  - 51
                            IterBegin: "[4, 5] (51)"
                            IterEnd: "[4, 8] (54)"
                            Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                        IterBegin: "[4, 1] (47)"
                        IterEnd: "[4, 8] (54)"
                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[4, 1] (47)"
                    IterEnd: "[4, 8] (54)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 1] (47)"
                IterEnd: "[4, 8] (54)"
                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 9] (55)"
                IterEnd: "[4, 14] (60)"
                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(55, 60), match='Func2'>"
                Whitespace:
                  - 54
                  - 55
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[4, 14] (60)"
                    IterEnd: "[4, 15] (61)"
                    Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(60, 61), match='('>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[4, 15] (61)"
                                                    IterEnd: "[4, 19] (65)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(61, 65), match='Bool'>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[4, 20] (66)"
                                                        IterEnd: "[4, 23] (69)"
                                                        Type: "Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(66, 69), match='var'>"
                                                        Whitespace:
                                                          - 65
                                                          - 66
                                                    IterBegin: "[4, 20] (66)"
                                                    IterEnd: "[4, 23] (69)"
                                                    Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                IterBegin: "[4, 15] (61)"
                                                IterEnd: "[4, 23] (69)"
                                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[4, 15] (61)"
                                            IterEnd: "[4, 23] (69)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[4, 15] (61)"
                                        IterEnd: "[4, 23] (69)"
                                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[4, 24] (70)"
                                                    IterEnd: "[4, 25] (71)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(70, 71), match='b'>"
                                                    Whitespace:
                                                      - 69
                                                      - 70
                                                IterBegin: "[4, 24] (70)"
                                                IterEnd: "[4, 25] (71)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[4, 24] (70)"
                                            IterEnd: "[4, 25] (71)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[4, 24] (70)"
                                        IterEnd: "[4, 25] (71)"
                                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[4, 15] (61)"
                                    IterEnd: "[4, 25] (71)"
                                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[4, 15] (61)"
                                IterEnd: "[4, 25] (71)"
                                Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[4, 25] (71)"
                                        IterEnd: "[4, 26] (72)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(71, 72), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[4, 27] (73)"
                                                            IterEnd: "[4, 31] (77)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(73, 77), match='Char'>"
                                                            Whitespace:
                                                              - 72
                                                              - 73
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[4, 32] (78)"
                                                                IterEnd: "[4, 36] (82)"
                                                                Type: "Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(78, 82), match='view'>"
                                                                Whitespace:
                                                                  - 77
                                                                  - 78
                                                            IterBegin: "[4, 32] (78)"
                                                            IterEnd: "[4, 36] (82)"
                                                            Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                        IterBegin: "[4, 27] (73)"
                                                        IterEnd: "[4, 36] (82)"
                                                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[4, 27] (73)"
                                                    IterEnd: "[4, 36] (82)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[4, 27] (73)"
                                                IterEnd: "[4, 36] (82)"
                                                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[4, 37] (83)"
                                                            IterEnd: "[4, 38] (84)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(83, 84), match='c'>"
                                                            Whitespace:
                                                              - 82
                                                              - 83
                                                        IterBegin: "[4, 37] (83)"
                                                        IterEnd: "[4, 38] (84)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[4, 37] (83)"
                                                    IterEnd: "[4, 38] (84)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[4, 37] (83)"
                                                IterEnd: "[4, 38] (84)"
                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[4, 27] (73)"
                                            IterEnd: "[4, 38] (84)"
                                            Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[4, 27] (73)"
                                        IterEnd: "[4, 38] (84)"
                                        Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[4, 25] (71)"
                                    IterEnd: "[4, 38] (84)"
                                    Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[4, 38] (84)"
                                        IterEnd: "[4, 39] (85)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(84, 85), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[4, 40] (86)"
                                                            IterEnd: "[4, 46] (92)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(86, 92), match='Double'>"
                                                            Whitespace:
                                                              - 85
                                                              - 86
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[4, 47] (93)"
                                                                IterEnd: "[4, 50] (96)"
                                                                Type: "Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(93, 96), match='val'>"
                                                                Whitespace:
                                                                  - 92
                                                                  - 93
                                                            IterBegin: "[4, 47] (93)"
                                                            IterEnd: "[4, 50] (96)"
                                                            Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                        IterBegin: "[4, 40] (86)"
                                                        IterEnd: "[4, 50] (96)"
                                                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[4, 40] (86)"
                                                    IterEnd: "[4, 50] (96)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[4, 40] (86)"
                                                IterEnd: "[4, 50] (96)"
                                                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[4, 51] (97)"
                                                            IterEnd: "[4, 52] (98)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(97, 98), match='d'>"
                                                            Whitespace:
                                                              - 96
                                                              - 97
                                                        IterBegin: "[4, 51] (97)"
                                                        IterEnd: "[4, 52] (98)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[4, 51] (97)"
                                                    IterEnd: "[4, 52] (98)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[4, 51] (97)"
                                                IterEnd: "[4, 52] (98)"
                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[4, 40] (86)"
                                            IterEnd: "[4, 52] (98)"
                                            Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[4, 40] (86)"
                                        IterEnd: "[4, 52] (98)"
                                        Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[4, 38] (84)"
                                    IterEnd: "[4, 52] (98)"
                                    Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[4, 25] (71)"
                                IterEnd: "[4, 52] (98)"
                                Type: "Repeat: {Comma and Parameter, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                            IterBegin: "[4, 15] (61)"
                            IterEnd: "[4, 52] (98)"
                            Type: "Traditional <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[4, 15] (61)"
                        IterEnd: "[4, 52] (98)"
                        Type: "Or: (Repeat: {New Style, 1, None}, Traditional) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[4, 15] (61)"
                    IterEnd: "[4, 52] (98)"
                    Type: "Repeat: {Or: (Repeat: {New Style, 1, None}, Traditional), 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[4, 52] (98)"
                    IterEnd: "[4, 53] (99)"
                    Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(98, 99), match=')'>"
                    Whitespace: None
                IterBegin: "[4, 14] (60)"
                IterEnd: "[4, 53] (99)"
                Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 53] (99)"
                IterEnd: "[4, 54] (100)"
                Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(99, 100), match=':'>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 54] (100)"
                IterEnd: "[5, 1] (101)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 101
                  Start: 100
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[5, 1] (101)"
                IterEnd: "[5, 5] (105)"
                Type: "Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                  End: 105
                  Start: 101
                  Value: 4
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[5, 5] (105)"
                                IterEnd: "[5, 9] (109)"
                                Type: "'pass' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(105, 109), match='pass'>"
                                Whitespace: None
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[5, 9] (109)"
                                IterEnd: "[6, 1] (110)"
                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                  End: 110
                                  Start: 109
                                Whitespace: None
                            IterBegin: "[5, 5] (105)"
                            IterEnd: "[6, 1] (110)"
                            Type: "Pass Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[5, 5] (105)"
                        IterEnd: "[6, 1] (110)"
                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[5, 5] (105)"
                    IterEnd: "[6, 1] (110)"
                    Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                IterBegin: "[5, 5] (105)"
                IterEnd: "[6, 1] (110)"
                Type: "Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[6, 1] (110)"
                IterEnd: "[6, 1] (110)"
                Type: "Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                  {}
                Whitespace: None
            Info: # <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.FuncDefinitionStatement.FuncDefinitionStatement.NodeInfo'>
              Name: "Func2"
              Parameters:   ParametersType.any:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[4, 15] (61)"
                                    IterEnd: "[4, 19] (65)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(61, 65), match='Bool'>"
                                    Whitespace: None
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[4, 20] (66)"
                                        IterEnd: "[4, 23] (69)"
                                        Type: "Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(66, 69), match='var'>"
                                        Whitespace:
                                          - 65
                                          - 66
                                    IterBegin: "[4, 20] (66)"
                                    IterEnd: "[4, 23] (69)"
                                    Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                IterBegin: "[4, 15] (61)"
                                IterEnd: "[4, 23] (69)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[4, 15] (61)"
                            IterEnd: "[4, 23] (69)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[4, 15] (61)"
                        IterEnd: "[4, 23] (69)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[4, 24] (70)"
                                    IterEnd: "[4, 25] (71)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(70, 71), match='b'>"
                                    Whitespace:
                                      - 69
                                      - 70
                                IterBegin: "[4, 24] (70)"
                                IterEnd: "[4, 25] (71)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[4, 24] (70)"
                            IterEnd: "[4, 25] (71)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[4, 24] (70)"
                        IterEnd: "[4, 25] (71)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[4, 15] (61)"
                    IterEnd: "[4, 25] (71)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[4, 27] (73)"
                                    IterEnd: "[4, 31] (77)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(73, 77), match='Char'>"
                                    Whitespace:
                                      - 72
                                      - 73
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[4, 32] (78)"
                                        IterEnd: "[4, 36] (82)"
                                        Type: "Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(78, 82), match='view'>"
                                        Whitespace:
                                          - 77
                                          - 78
                                    IterBegin: "[4, 32] (78)"
                                    IterEnd: "[4, 36] (82)"
                                    Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                IterBegin: "[4, 27] (73)"
                                IterEnd: "[4, 36] (82)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[4, 27] (73)"
                            IterEnd: "[4, 36] (82)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[4, 27] (73)"
                        IterEnd: "[4, 36] (82)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[4, 37] (83)"
                                    IterEnd: "[4, 38] (84)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(83, 84), match='c'>"
                                    Whitespace:
                                      - 82
                                      - 83
                                IterBegin: "[4, 37] (83)"
                                IterEnd: "[4, 38] (84)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[4, 37] (83)"
                            IterEnd: "[4, 38] (84)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[4, 37] (83)"
                        IterEnd: "[4, 38] (84)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[4, 27] (73)"
                    IterEnd: "[4, 38] (84)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[4, 40] (86)"
                                    IterEnd: "[4, 46] (92)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(86, 92), match='Double'>"
                                    Whitespace:
                                      - 85
                                      - 86
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[4, 47] (93)"
                                        IterEnd: "[4, 50] (96)"
                                        Type: "Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(93, 96), match='val'>"
                                        Whitespace:
                                          - 92
                                          - 93
                                    IterBegin: "[4, 47] (93)"
                                    IterEnd: "[4, 50] (96)"
                                    Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                IterBegin: "[4, 40] (86)"
                                IterEnd: "[4, 50] (96)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[4, 40] (86)"
                            IterEnd: "[4, 50] (96)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[4, 40] (86)"
                        IterEnd: "[4, 50] (96)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[4, 51] (97)"
                                    IterEnd: "[4, 52] (98)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(97, 98), match='d'>"
                                    Whitespace:
                                      - 96
                                      - 97
                                IterBegin: "[4, 51] (97)"
                                IterEnd: "[4, 52] (98)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[4, 51] (97)"
                            IterEnd: "[4, 52] (98)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[4, 51] (97)"
                        IterEnd: "[4, 52] (98)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[4, 40] (86)"
                    IterEnd: "[4, 52] (98)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              ReturnType: "Standard Type"
              Statements:
                - "Pass Statement"
              Visibility: "VisibilityModifier.private"
            IterBegin: "[4, 1] (47)"
            IterEnd: "[6, 1] (110)"
            Type: "Func Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[4, 1] (47)"
        IterEnd: "[6, 1] (110)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[4, 1] (47)"
    IterEnd: "[6, 1] (110)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[6, 1] (110)"
Type: "<None>"
