# ----------------------------------------------------------------------
# This code was automatically generated by the PythonTarget. Any changes made to this
# file will be overwritten during the next generation!
# ----------------------------------------------------------------------

from v1.Lexer.Location import Location
from v1.Parser.MiniLanguage.Types.BooleanType import BooleanType
from v1.Parser.MiniLanguage.Types.CharacterType import CharacterType
from v1.Parser.MiniLanguage.Types.CustomType import CustomType
from v1.Parser.MiniLanguage.Types.StringType import StringType
from v1.Parser.ParserInfos.Common.ClassModifier import ClassModifier
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParameterParserInfo
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParametersParserInfo
from v1.Parser.ParserInfos.Common.MethodModifier import MethodModifier
from v1.Parser.ParserInfos.Common.MutabilityModifier import MutabilityModifier
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateParametersParserInfo
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateTypeParameterParserInfo
from v1.Parser.ParserInfos.Common.VisibilityModifier import VisibilityModifier
from v1.Parser.ParserInfos.Expressions.FuncOrTypeExpressionParserInfo import FuncOrTypeExpressionParserInfo
from v1.Parser.ParserInfos.ParserInfo import ParserInfoType
from v1.Parser.ParserInfos.ParserInfo import RootParserInfo
from v1.Parser.ParserInfos.Statements.ClassCapabilities.StandardCapabilities import StandardCapabilities
from v1.Parser.ParserInfos.Statements.ClassStatementParserInfo import ClassStatementParserInfo
from v1.Parser.ParserInfos.Statements.FuncDefinitionStatementParserInfo import FuncDefinitionStatementParserInfo, OperatorType as FuncDefinitionStatementParserInfoOperatorType
from v1.Parser.Region import Region


# ----------------------------------------------------------------------
region_000000 = Region(begin=Location(line=21, column=23), end=Location(line=21, column=34))
region_000001 = Region(begin=Location(line=21, column=23), end=Location(line=21, column=30))
region_000002 = Region(begin=Location(line=21, column=31), end=Location(line=21, column=34))
region_000003 = Region(begin=Location(line=21, column=5), end=Location(line=23, column=1))
region_000004 = Region(begin=Location(line=21, column=16), end=Location(line=21, column=22))
region_000005 = Region(begin=Location(line=21, column=46), end=Location(line=21, column=55))
region_000006 = Region(begin=Location(line=21, column=35), end=Location(line=21, column=43))
region_000007 = Region(begin=Location(line=21, column=43), end=Location(line=21, column=45))
region_000008 = Region(begin=Location(line=21, column=6), end=Location(line=21, column=14))
region_000009 = Region(begin=Location(line=23, column=40), end=Location(line=23, column=52))
region_000010 = Region(begin=Location(line=23, column=40), end=Location(line=23, column=48))
region_000011 = Region(begin=Location(line=23, column=49), end=Location(line=23, column=52))
region_000012 = Region(begin=Location(line=23, column=79), end=Location(line=23, column=87))
region_000013 = Region(begin=Location(line=23, column=69), end=Location(line=23, column=97))
region_000014 = Region(begin=Location(line=23, column=98), end=Location(line=23, column=110))
region_000015 = Region(begin=Location(line=23, column=98), end=Location(line=23, column=106))
region_000016 = Region(begin=Location(line=23, column=107), end=Location(line=23, column=110))
region_000017 = Region(begin=Location(line=23, column=98), end=Location(line=23, column=118))
region_000018 = Region(begin=Location(line=23, column=111), end=Location(line=23, column=118))
region_000019 = Region(begin=Location(line=23, column=97), end=Location(line=23, column=119))
region_000020 = Region(begin=Location(line=23, column=5), end=Location(line=24, column=1))
region_000021 = Region(begin=Location(line=23, column=24), end=Location(line=23, column=30))
region_000022 = Region(begin=Location(line=23, column=31), end=Location(line=23, column=39))
region_000023 = Region(begin=Location(line=23, column=53), end=Location(line=23, column=69))
region_000024 = Region(begin=Location(line=23, column=6), end=Location(line=23, column=14))
region_000025 = Region(begin=Location(line=23, column=16), end=Location(line=23, column=22))
region_000026 = Region(begin=Location(line=24, column=61), end=Location(line=24, column=69))
region_000027 = Region(begin=Location(line=24, column=51), end=Location(line=24, column=79))
region_000028 = Region(begin=Location(line=24, column=80), end=Location(line=24, column=92))
region_000029 = Region(begin=Location(line=24, column=80), end=Location(line=24, column=88))
region_000030 = Region(begin=Location(line=24, column=89), end=Location(line=24, column=92))
region_000031 = Region(begin=Location(line=24, column=80), end=Location(line=24, column=100))
region_000032 = Region(begin=Location(line=24, column=93), end=Location(line=24, column=100))
region_000033 = Region(begin=Location(line=24, column=79), end=Location(line=24, column=101))
region_000034 = Region(begin=Location(line=24, column=5), end=Location(line=26, column=1))
region_000035 = Region(begin=Location(line=24, column=16), end=Location(line=24, column=22))
region_000036 = Region(begin=Location(line=24, column=102), end=Location(line=24, column=111))
region_000037 = Region(begin=Location(line=24, column=23), end=Location(line=24, column=31))
region_000038 = Region(begin=Location(line=24, column=37), end=Location(line=24, column=51))
region_000039 = Region(begin=Location(line=24, column=6), end=Location(line=24, column=14))
region_000040 = Region(begin=Location(line=26, column=58), end=Location(line=26, column=66))
region_000041 = Region(begin=Location(line=26, column=48), end=Location(line=26, column=76))
region_000042 = Region(begin=Location(line=26, column=77), end=Location(line=26, column=89))
region_000043 = Region(begin=Location(line=26, column=77), end=Location(line=26, column=85))
region_000044 = Region(begin=Location(line=26, column=86), end=Location(line=26, column=89))
region_000045 = Region(begin=Location(line=26, column=77), end=Location(line=26, column=97))
region_000046 = Region(begin=Location(line=26, column=90), end=Location(line=26, column=97))
region_000047 = Region(begin=Location(line=26, column=76), end=Location(line=26, column=98))
region_000048 = Region(begin=Location(line=26, column=5), end=Location(line=28, column=1))
region_000049 = Region(begin=Location(line=26, column=16), end=Location(line=26, column=22))
region_000050 = Region(begin=Location(line=26, column=99), end=Location(line=26, column=108))
region_000051 = Region(begin=Location(line=26, column=23), end=Location(line=26, column=31))
region_000052 = Region(begin=Location(line=26, column=37), end=Location(line=26, column=48))
region_000053 = Region(begin=Location(line=26, column=6), end=Location(line=26, column=14))
region_000054 = Region(begin=Location(line=28, column=32), end=Location(line=28, column=44))
region_000055 = Region(begin=Location(line=28, column=32), end=Location(line=28, column=40))
region_000056 = Region(begin=Location(line=28, column=41), end=Location(line=28, column=44))
region_000057 = Region(begin=Location(line=28, column=5), end=Location(line=30, column=1))
region_000058 = Region(begin=Location(line=28, column=16), end=Location(line=28, column=22))
region_000059 = Region(begin=Location(line=28, column=58), end=Location(line=28, column=67))
region_000060 = Region(begin=Location(line=28, column=23), end=Location(line=28, column=31))
region_000061 = Region(begin=Location(line=28, column=45), end=Location(line=28, column=55))
region_000062 = Region(begin=Location(line=28, column=55), end=Location(line=28, column=57))
region_000063 = Region(begin=Location(line=28, column=6), end=Location(line=28, column=14))
region_000064 = Region(begin=Location(line=30, column=32), end=Location(line=30, column=40))
region_000065 = Region(begin=Location(line=30, column=32), end=Location(line=30, column=36))
region_000066 = Region(begin=Location(line=30, column=37), end=Location(line=30, column=40))
region_000067 = Region(begin=Location(line=30, column=5), end=Location(line=31, column=1))
region_000068 = Region(begin=Location(line=30, column=16), end=Location(line=30, column=22))
region_000069 = Region(begin=Location(line=30, column=54), end=Location(line=30, column=63))
region_000070 = Region(begin=Location(line=30, column=23), end=Location(line=30, column=31))
region_000071 = Region(begin=Location(line=30, column=41), end=Location(line=30, column=51))
region_000072 = Region(begin=Location(line=30, column=51), end=Location(line=30, column=53))
region_000073 = Region(begin=Location(line=30, column=6), end=Location(line=30, column=14))
region_000074 = Region(begin=Location(line=31, column=32), end=Location(line=31, column=39))
region_000075 = Region(begin=Location(line=31, column=32), end=Location(line=31, column=35))
region_000076 = Region(begin=Location(line=31, column=36), end=Location(line=31, column=39))
region_000077 = Region(begin=Location(line=31, column=5), end=Location(line=33, column=1))
region_000078 = Region(begin=Location(line=31, column=16), end=Location(line=31, column=22))
region_000079 = Region(begin=Location(line=31, column=56), end=Location(line=31, column=65))
region_000080 = Region(begin=Location(line=31, column=23), end=Location(line=31, column=31))
region_000081 = Region(begin=Location(line=31, column=40), end=Location(line=31, column=53))
region_000082 = Region(begin=Location(line=31, column=53), end=Location(line=31, column=55))
region_000083 = Region(begin=Location(line=31, column=6), end=Location(line=31, column=14))
region_000084 = Region(begin=Location(line=33, column=40), end=Location(line=33, column=57))
region_000085 = Region(begin=Location(line=33, column=40), end=Location(line=33, column=53))
region_000086 = Region(begin=Location(line=33, column=54), end=Location(line=33, column=57))
region_000087 = Region(begin=Location(line=33, column=70), end=Location(line=33, column=88))
region_000088 = Region(begin=Location(line=33, column=70), end=Location(line=33, column=78))
region_000089 = Region(begin=Location(line=33, column=79), end=Location(line=33, column=88))
region_000090 = Region(begin=Location(line=33, column=70), end=Location(line=33, column=93))
region_000091 = Region(begin=Location(line=33, column=89), end=Location(line=33, column=93))
region_000092 = Region(begin=Location(line=33, column=95), end=Location(line=33, column=113))
region_000093 = Region(begin=Location(line=33, column=95), end=Location(line=33, column=103))
region_000094 = Region(begin=Location(line=33, column=104), end=Location(line=33, column=113))
region_000095 = Region(begin=Location(line=33, column=95), end=Location(line=33, column=118))
region_000096 = Region(begin=Location(line=33, column=114), end=Location(line=33, column=118))
region_000097 = Region(begin=Location(line=33, column=69), end=Location(line=33, column=119))
region_000098 = Region(begin=Location(line=33, column=70), end=Location(line=33, column=118))
region_000099 = Region(begin=Location(line=33, column=5), end=Location(line=35, column=1))
region_000100 = Region(begin=Location(line=33, column=24), end=Location(line=33, column=30))
region_000101 = Region(begin=Location(line=33, column=31), end=Location(line=33, column=39))
region_000102 = Region(begin=Location(line=33, column=58), end=Location(line=33, column=69))
region_000103 = Region(begin=Location(line=33, column=6), end=Location(line=33, column=14))
region_000104 = Region(begin=Location(line=33, column=16), end=Location(line=33, column=22))
region_000105 = Region(begin=Location(line=35, column=32), end=Location(line=35, column=40))
region_000106 = Region(begin=Location(line=35, column=32), end=Location(line=35, column=36))
region_000107 = Region(begin=Location(line=35, column=37), end=Location(line=35, column=40))
region_000108 = Region(begin=Location(line=35, column=51), end=Location(line=35, column=65))
region_000109 = Region(begin=Location(line=35, column=51), end=Location(line=35, column=55))
region_000110 = Region(begin=Location(line=35, column=56), end=Location(line=35, column=65))
region_000111 = Region(begin=Location(line=35, column=51), end=Location(line=35, column=70))
region_000112 = Region(begin=Location(line=35, column=66), end=Location(line=35, column=70))
region_000113 = Region(begin=Location(line=35, column=50), end=Location(line=35, column=71))
region_000114 = Region(begin=Location(line=35, column=5), end=Location(line=36, column=1))
region_000115 = Region(begin=Location(line=35, column=16), end=Location(line=35, column=22))
region_000116 = Region(begin=Location(line=35, column=72), end=Location(line=35, column=81))
region_000117 = Region(begin=Location(line=35, column=23), end=Location(line=35, column=31))
region_000118 = Region(begin=Location(line=35, column=41), end=Location(line=35, column=50))
region_000119 = Region(begin=Location(line=35, column=6), end=Location(line=35, column=14))
region_000120 = Region(begin=Location(line=36, column=32), end=Location(line=36, column=40))
region_000121 = Region(begin=Location(line=36, column=32), end=Location(line=36, column=36))
region_000122 = Region(begin=Location(line=36, column=37), end=Location(line=36, column=40))
region_000123 = Region(begin=Location(line=36, column=54), end=Location(line=36, column=68))
region_000124 = Region(begin=Location(line=36, column=54), end=Location(line=36, column=58))
region_000125 = Region(begin=Location(line=36, column=59), end=Location(line=36, column=68))
region_000126 = Region(begin=Location(line=36, column=54), end=Location(line=36, column=73))
region_000127 = Region(begin=Location(line=36, column=69), end=Location(line=36, column=73))
region_000128 = Region(begin=Location(line=36, column=53), end=Location(line=36, column=74))
region_000129 = Region(begin=Location(line=36, column=5), end=Location(line=37, column=1))
region_000130 = Region(begin=Location(line=36, column=16), end=Location(line=36, column=22))
region_000131 = Region(begin=Location(line=36, column=75), end=Location(line=36, column=84))
region_000132 = Region(begin=Location(line=36, column=23), end=Location(line=36, column=31))
region_000133 = Region(begin=Location(line=36, column=41), end=Location(line=36, column=53))
region_000134 = Region(begin=Location(line=36, column=6), end=Location(line=36, column=14))
region_000135 = Region(begin=Location(line=37, column=32), end=Location(line=37, column=40))
region_000136 = Region(begin=Location(line=37, column=32), end=Location(line=37, column=36))
region_000137 = Region(begin=Location(line=37, column=37), end=Location(line=37, column=40))
region_000138 = Region(begin=Location(line=37, column=50), end=Location(line=37, column=64))
region_000139 = Region(begin=Location(line=37, column=50), end=Location(line=37, column=54))
region_000140 = Region(begin=Location(line=37, column=55), end=Location(line=37, column=64))
region_000141 = Region(begin=Location(line=37, column=50), end=Location(line=37, column=69))
region_000142 = Region(begin=Location(line=37, column=65), end=Location(line=37, column=69))
region_000143 = Region(begin=Location(line=37, column=49), end=Location(line=37, column=70))
region_000144 = Region(begin=Location(line=37, column=5), end=Location(line=38, column=1))
region_000145 = Region(begin=Location(line=37, column=16), end=Location(line=37, column=22))
region_000146 = Region(begin=Location(line=37, column=71), end=Location(line=37, column=80))
region_000147 = Region(begin=Location(line=37, column=23), end=Location(line=37, column=31))
region_000148 = Region(begin=Location(line=37, column=41), end=Location(line=37, column=49))
region_000149 = Region(begin=Location(line=37, column=6), end=Location(line=37, column=14))
region_000150 = Region(begin=Location(line=38, column=32), end=Location(line=38, column=40))
region_000151 = Region(begin=Location(line=38, column=32), end=Location(line=38, column=36))
region_000152 = Region(begin=Location(line=38, column=37), end=Location(line=38, column=40))
region_000153 = Region(begin=Location(line=38, column=55), end=Location(line=38, column=69))
region_000154 = Region(begin=Location(line=38, column=55), end=Location(line=38, column=59))
region_000155 = Region(begin=Location(line=38, column=60), end=Location(line=38, column=69))
region_000156 = Region(begin=Location(line=38, column=55), end=Location(line=38, column=74))
region_000157 = Region(begin=Location(line=38, column=70), end=Location(line=38, column=74))
region_000158 = Region(begin=Location(line=38, column=54), end=Location(line=38, column=75))
region_000159 = Region(begin=Location(line=38, column=5), end=Location(line=39, column=1))
region_000160 = Region(begin=Location(line=38, column=16), end=Location(line=38, column=22))
region_000161 = Region(begin=Location(line=38, column=76), end=Location(line=38, column=85))
region_000162 = Region(begin=Location(line=38, column=23), end=Location(line=38, column=31))
region_000163 = Region(begin=Location(line=38, column=41), end=Location(line=38, column=54))
region_000164 = Region(begin=Location(line=38, column=6), end=Location(line=38, column=14))
region_000165 = Region(begin=Location(line=39, column=32), end=Location(line=39, column=40))
region_000166 = Region(begin=Location(line=39, column=32), end=Location(line=39, column=36))
region_000167 = Region(begin=Location(line=39, column=37), end=Location(line=39, column=40))
region_000168 = Region(begin=Location(line=39, column=53), end=Location(line=39, column=67))
region_000169 = Region(begin=Location(line=39, column=53), end=Location(line=39, column=57))
region_000170 = Region(begin=Location(line=39, column=58), end=Location(line=39, column=67))
region_000171 = Region(begin=Location(line=39, column=53), end=Location(line=39, column=72))
region_000172 = Region(begin=Location(line=39, column=68), end=Location(line=39, column=72))
region_000173 = Region(begin=Location(line=39, column=52), end=Location(line=39, column=73))
region_000174 = Region(begin=Location(line=39, column=5), end=Location(line=40, column=1))
region_000175 = Region(begin=Location(line=39, column=16), end=Location(line=39, column=22))
region_000176 = Region(begin=Location(line=39, column=74), end=Location(line=39, column=83))
region_000177 = Region(begin=Location(line=39, column=23), end=Location(line=39, column=31))
region_000178 = Region(begin=Location(line=39, column=41), end=Location(line=39, column=52))
region_000179 = Region(begin=Location(line=39, column=6), end=Location(line=39, column=14))
region_000180 = Region(begin=Location(line=40, column=32), end=Location(line=40, column=40))
region_000181 = Region(begin=Location(line=40, column=32), end=Location(line=40, column=36))
region_000182 = Region(begin=Location(line=40, column=37), end=Location(line=40, column=40))
region_000183 = Region(begin=Location(line=40, column=58), end=Location(line=40, column=72))
region_000184 = Region(begin=Location(line=40, column=58), end=Location(line=40, column=62))
region_000185 = Region(begin=Location(line=40, column=63), end=Location(line=40, column=72))
region_000186 = Region(begin=Location(line=40, column=58), end=Location(line=40, column=77))
region_000187 = Region(begin=Location(line=40, column=73), end=Location(line=40, column=77))
region_000188 = Region(begin=Location(line=40, column=57), end=Location(line=40, column=78))
region_000189 = Region(begin=Location(line=40, column=5), end=Location(line=41, column=1))
region_000190 = Region(begin=Location(line=40, column=16), end=Location(line=40, column=22))
region_000191 = Region(begin=Location(line=40, column=79), end=Location(line=40, column=88))
region_000192 = Region(begin=Location(line=40, column=23), end=Location(line=40, column=31))
region_000193 = Region(begin=Location(line=40, column=41), end=Location(line=40, column=57))
region_000194 = Region(begin=Location(line=40, column=6), end=Location(line=40, column=14))
region_000195 = Region(begin=Location(line=20, column=1), end=Location(line=41, column=1))
region_000196 = Region(begin=Location(line=20, column=1), end=Location(line=20, column=7))
region_000197 = Region(begin=Location(line=20, column=8), end=Location(line=20, column=17))
region_000198 = Region(begin=Location(line=20, column=24), end=Location(line=20, column=28))
region_000199 = Region(begin=Location(line=20, column=28), end=Location(line=41, column=1))
region_000200 = Region(begin=Location(line=1, column=1), end=Location(line=41, column=1))


# ----------------------------------------------------------------------
statement_000000 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000000, region_000001, region_000002],
    value=CustomType("ArchInt"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000001 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000003, region_000007, region_000004, region_000005, region_000003, region_000006, None, None, None, region_000008, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.standard,
    return_type=statement_000000,
    name="GetBytes",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000002 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000009, region_000010, region_000011],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.var,
)

statement_000003 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000012, region_000012, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000004 = TemplateParametersParserInfo.Create(
    regions=[region_000013, None, region_000012, None],
    positional=None,
    any=[statement_000003, ],
    keyword=None,
)

statement_000005 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000014, region_000015, region_000016],
    value=CustomType("ArchiveT"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.ref,
)

statement_000006 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000017, None, region_000018],  # type: ignore
    type=statement_000005,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000007 = FuncParametersParserInfo.Create(
    regions=[region_000019, None, region_000017, None],
    positional=None,
    any=[statement_000006, ],
    keyword=None,
)

statement_000008 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000020, region_000019, region_000021, None, region_000022, region_000023, None, None, None, region_000024, None, None, None, None, region_000025],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000007,
    visibility_param=VisibilityModifier.public,
    mutability_param=None,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000002,
    name=FuncDefinitionStatementParserInfoOperatorType.Deserialize,
    documentation=None,
    templates=statement_000004,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=True,
)

statement_000009 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000026, region_000026, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000010 = TemplateParametersParserInfo.Create(
    regions=[region_000027, None, region_000026, None],
    positional=None,
    any=[statement_000009, ],
    keyword=None,
)

statement_000011 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000028, region_000029, region_000030],
    value=CustomType("ArchiveT"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.ref,
)

statement_000012 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000031, None, region_000032],  # type: ignore
    type=statement_000011,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000013 = FuncParametersParserInfo.Create(
    regions=[region_000033, None, region_000031, None],
    positional=None,
    any=[statement_000012, ],
    keyword=None,
)

statement_000014 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000034, region_000033, region_000035, region_000036, region_000037, region_000038, None, None, None, region_000039, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000013,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Serialize,
    documentation=None,
    templates=statement_000010,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000015 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000040, region_000040, None],
    name="VisitorT",
    is_variadic=None,
    default_type=None,
)

statement_000016 = TemplateParametersParserInfo.Create(
    regions=[region_000041, None, region_000040, None],
    positional=None,
    any=[statement_000015, ],
    keyword=None,
)

statement_000017 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000042, region_000043, region_000044],
    value=CustomType("VisitorT"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.ref,
)

statement_000018 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000045, None, region_000046],  # type: ignore
    type=statement_000017,
    is_variadic=None,
    name="visitor",
    default_value=None,
)

statement_000019 = FuncParametersParserInfo.Create(
    regions=[region_000047, None, region_000045, None],
    positional=None,
    any=[statement_000018, ],
    keyword=None,
)

statement_000020 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000048, region_000047, region_000049, region_000050, region_000051, region_000052, None, None, None, region_000053, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000019,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Accept,
    documentation=None,
    templates=statement_000016,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000021 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000054, region_000055, region_000056],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.var,
)

statement_000022 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000057, region_000062, region_000058, region_000059, region_000060, region_000061, None, None, None, region_000063, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000021,
    name=FuncDefinitionStatementParserInfoOperatorType.Clone,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000023 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000064, region_000065, region_000066],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000024 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000067, region_000072, region_000068, region_000069, region_000070, region_000071, None, None, None, region_000073, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000023,
    name=FuncDefinitionStatementParserInfoOperatorType.ToBool,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000025 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000074, region_000075, region_000076],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000026 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000077, region_000082, region_000078, region_000079, region_000080, region_000081, None, None, None, region_000083, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000025,
    name=FuncDefinitionStatementParserInfoOperatorType.ToString,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000027 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000084, region_000085, region_000086],
    value=CustomType("CompareResult"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000028 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000087, region_000088, region_000089],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000029 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000090, None, region_000091],  # type: ignore
    type=statement_000028,
    is_variadic=None,
    name="this",
    default_value=None,
)

statement_000030 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000092, region_000093, region_000094],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000031 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000095, None, region_000096],  # type: ignore
    type=statement_000030,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000032 = FuncParametersParserInfo.Create(
    regions=[region_000097, None, region_000098, None],
    positional=None,
    any=[statement_000029, statement_000031, ],
    keyword=None,
)

statement_000033 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000099, region_000097, region_000100, None, region_000101, region_000102, None, None, None, region_000103, None, None, None, None, region_000104],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000032,
    visibility_param=VisibilityModifier.public,
    mutability_param=None,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000027,
    name=FuncDefinitionStatementParserInfoOperatorType.Compare,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=True,
)

statement_000034 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000105, region_000106, region_000107],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000035 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000108, region_000109, region_000110],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000036 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000111, None, region_000112],  # type: ignore
    type=statement_000035,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000037 = FuncParametersParserInfo.Create(
    regions=[region_000113, None, region_000111, None],
    positional=None,
    any=[statement_000036, ],
    keyword=None,
)

statement_000038 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000114, region_000113, region_000115, region_000116, region_000117, region_000118, None, None, None, region_000119, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000037,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000034,
    name=FuncDefinitionStatementParserInfoOperatorType.Equal,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000039 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000120, region_000121, region_000122],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000040 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000123, region_000124, region_000125],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000041 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000126, None, region_000127],  # type: ignore
    type=statement_000040,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000042 = FuncParametersParserInfo.Create(
    regions=[region_000128, None, region_000126, None],
    positional=None,
    any=[statement_000041, ],
    keyword=None,
)

statement_000043 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000129, region_000128, region_000130, region_000131, region_000132, region_000133, None, None, None, region_000134, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000042,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000039,
    name=FuncDefinitionStatementParserInfoOperatorType.NotEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000044 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000135, region_000136, region_000137],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000045 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000138, region_000139, region_000140],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000046 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000141, None, region_000142],  # type: ignore
    type=statement_000045,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000047 = FuncParametersParserInfo.Create(
    regions=[region_000143, None, region_000141, None],
    positional=None,
    any=[statement_000046, ],
    keyword=None,
)

statement_000048 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000144, region_000143, region_000145, region_000146, region_000147, region_000148, None, None, None, region_000149, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000047,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000044,
    name=FuncDefinitionStatementParserInfoOperatorType.Less,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000049 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000150, region_000151, region_000152],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000050 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000153, region_000154, region_000155],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000051 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000156, None, region_000157],  # type: ignore
    type=statement_000050,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000052 = FuncParametersParserInfo.Create(
    regions=[region_000158, None, region_000156, None],
    positional=None,
    any=[statement_000051, ],
    keyword=None,
)

statement_000053 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000159, region_000158, region_000160, region_000161, region_000162, region_000163, None, None, None, region_000164, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000052,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000049,
    name=FuncDefinitionStatementParserInfoOperatorType.LessEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000054 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000165, region_000166, region_000167],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000055 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000168, region_000169, region_000170],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000056 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000171, None, region_000172],  # type: ignore
    type=statement_000055,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000057 = FuncParametersParserInfo.Create(
    regions=[region_000173, None, region_000171, None],
    positional=None,
    any=[statement_000056, ],
    keyword=None,
)

statement_000058 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000174, region_000173, region_000175, region_000176, region_000177, region_000178, None, None, None, region_000179, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000057,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000054,
    name=FuncDefinitionStatementParserInfoOperatorType.Greater,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000059 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000180, region_000181, region_000182],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000060 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000183, region_000184, region_000185],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000061 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000186, None, region_000187],  # type: ignore
    type=statement_000060,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000062 = FuncParametersParserInfo.Create(
    regions=[region_000188, None, region_000186, None],
    positional=None,
    any=[statement_000061, ],
    keyword=None,
)

statement_000063 = FuncDefinitionStatementParserInfo.Create(
    regions=[region_000189, region_000188, region_000190, region_000191, region_000192, region_000193, None, None, None, region_000194, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000062,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000059,
    name=FuncDefinitionStatementParserInfoOperatorType.GreaterEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000064 = ClassStatementParserInfo.Create(
    regions=[region_000195, region_000196, region_000197, region_000198, None, None, None, None, region_000199, region_000195, None, None],
    parent_class_capabilities=None,
    class_capabilities=StandardCapabilities,
    visibility_param=VisibilityModifier.public,
    class_modifier_param=ClassModifier.immutable,
    name="Char",
    documentation=None,
    templates=None,
    constraints=None,
    extends=None,
    implements=None,
    uses=None,
    statements=[statement_000001, statement_000008, statement_000014, statement_000020, statement_000022, statement_000024, statement_000026, statement_000033, statement_000038, statement_000043, statement_000048, statement_000053, statement_000058, statement_000063, ],
    constructor_visibility_param=VisibilityModifier.public,
    is_abstract=None,
    is_final=None,
)

root_parser_info = RootParserInfo.Create(
    regions=[region_000200, region_000200, None],
    statements=[statement_000064, ],
    documentation=None,
)
