0) StartPhrase, "Dynamic Phrases"
1) StartPhrase, "Custom Display <Prefix>"
2) StartPhrase, "Lower"
3) OnInternalPhraseAsync, 0, 3
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 1] (0)"
      IterEnd: "[1, 4] (3)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
      Whitespace: None
    Phrase: "Lower"
4) EndPhrase, "Lower" [True]
5) StartPhrase, "Upper"
6) EndPhrase, "Upper" [False]
7) OnInternalPhraseAsync, 0, 3
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 1] (0)"
        IterEnd: "[1, 4] (3)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
8) EndPhrase, "Custom Display <Prefix>" [True]
9) StartPhrase, "Custom Display <Suffix>"
10) StartPhrase, "'+'"
11) OnInternalPhraseAsync, 4, 5
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 5] (4)"
      IterEnd: "[1, 6] (5)"
      Token: "'+'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
      Whitespace:
        - 3
        - 4
    Phrase: "'+'"
12) EndPhrase, "'+'" [True]
13) StartPhrase, "DynamicPhrasesType.Statements"
14) StartPhrase, "Phrases"
15) StartPhrase, "Lower"
16) OnInternalPhraseAsync, 6, 10
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 7] (6)"
      IterEnd: "[1, 11] (10)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
      Whitespace:
        - 5
        - 6
    Phrase: "Lower"
17) EndPhrase, "Lower" [True]
18) StartPhrase, "Upper"
19) EndPhrase, "Upper" [False]
20) StartPhrase, "Dynamic Phrases"
21) StartPhrase, "Custom Display"
22) StartPhrase, "Lower"
23) OnInternalPhraseAsync, 6, 10
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 7] (6)"
      IterEnd: "[1, 11] (10)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
      Whitespace:
        - 5
        - 6
    Phrase: "Lower"
24) EndPhrase, "Lower" [True]
25) StartPhrase, "Upper"
26) EndPhrase, "Upper" [False]
27) OnInternalPhraseAsync, 5, 10
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 7] (6)"
        IterEnd: "[1, 11] (10)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
        Whitespace:
          - 5
          - 6
      Phrase: "Lower"
    Phrase: "Custom Display"
28) EndPhrase, "Custom Display" [True]
29) OnInternalPhraseAsync, 5, 10
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 7] (6)"
          IterEnd: "[1, 11] (10)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
          Whitespace:
            - 5
            - 6
        Phrase: "Lower"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
30) EndPhrase, "Dynamic Phrases" [True]
31) OnInternalPhraseAsync, 5, 10
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 7] (6)"
        IterEnd: "[1, 11] (10)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
        Whitespace:
          - 5
          - 6
      Phrase: "Lower"
    Phrase: "Phrases"
32) EndPhrase, "Phrases" [True]
33) OnInternalPhraseAsync, 5, 10
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 7] (6)"
          IterEnd: "[1, 11] (10)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
          Whitespace:
            - 5
            - 6
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
34) EndPhrase, "DynamicPhrasesType.Statements" [True]
35) StartPhrase, "'-'"
36) EndPhrase, "'-'" [False]
37) StartPhrase, "'*'"
38) EndPhrase, "'*'" [False]
39) StartPhrase, "'/'"
40) EndPhrase, "'/'" [False]
41) StartPhrase, "'if'"
42) EndPhrase, "'if'" [False]
43) StartPhrase, "'['"
44) EndPhrase, "'['" [False]
45) OnInternalPhraseAsync, 3, 10
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 1] (0)"
                  IterEnd: "[1, 4] (3)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Custom Display <Prefix>"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 5] (4)"
              IterEnd: "[1, 6] (5)"
              Token: "'+'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
              Whitespace:
                - 3
                - 4
            Phrase: "'+'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 7] (6)"
                  IterEnd: "[1, 11] (10)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
                  Whitespace:
                    - 5
                    - 6
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Add"
    Phrase: "Custom Display <Suffix>"
46) EndPhrase, "Custom Display <Suffix>" [True]
47) StartPhrase, "Custom Display <Suffix>"
48) StartPhrase, "'+'"
49) EndPhrase, "'+'" [False]
50) StartPhrase, "'-'"
51) EndPhrase, "'-'" [False]
52) StartPhrase, "'*'"
53) EndPhrase, "'*'" [False]
54) StartPhrase, "'/'"
55) EndPhrase, "'/'" [False]
56) StartPhrase, "'if'"
57) OnInternalPhraseAsync, 11, 13
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 12] (11)"
      IterEnd: "[1, 14] (13)"
      Token: "'if'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(11, 13), match='if'>"
      Whitespace:
        - 10
        - 11
    Phrase: "'if'"
58) EndPhrase, "'if'" [True]
59) StartPhrase, "DynamicPhrasesType.Statements"
60) StartPhrase, "Phrases"
61) StartPhrase, "Lower"
62) EndPhrase, "Lower" [False]
63) StartPhrase, "Upper"
64) OnInternalPhraseAsync, 14, 23
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 15] (14)"
      IterEnd: "[1, 24] (23)"
      Token: "Upper"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
      Whitespace:
        - 13
        - 14
    Phrase: "Upper"
65) EndPhrase, "Upper" [True]
66) StartPhrase, "Dynamic Phrases"
67) StartPhrase, "Custom Display"
68) StartPhrase, "Lower"
69) EndPhrase, "Lower" [False]
70) StartPhrase, "Upper"
71) OnInternalPhraseAsync, 14, 23
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 15] (14)"
      IterEnd: "[1, 24] (23)"
      Token: "Upper"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
      Whitespace:
        - 13
        - 14
    Phrase: "Upper"
72) EndPhrase, "Upper" [True]
73) OnInternalPhraseAsync, 13, 23
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 15] (14)"
        IterEnd: "[1, 24] (23)"
        Token: "Upper"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
        Whitespace:
          - 13
          - 14
      Phrase: "Upper"
    Phrase: "Custom Display"
74) EndPhrase, "Custom Display" [True]
75) OnInternalPhraseAsync, 13, 23
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 15] (14)"
          IterEnd: "[1, 24] (23)"
          Token: "Upper"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
          Whitespace:
            - 13
            - 14
        Phrase: "Upper"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
76) EndPhrase, "Dynamic Phrases" [True]
77) OnInternalPhraseAsync, 13, 23
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 15] (14)"
        IterEnd: "[1, 24] (23)"
        Token: "Upper"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
        Whitespace:
          - 13
          - 14
      Phrase: "Upper"
    Phrase: "Phrases"
78) EndPhrase, "Phrases" [True]
79) OnInternalPhraseAsync, 13, 23
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 15] (14)"
          IterEnd: "[1, 24] (23)"
          Token: "Upper"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
          Whitespace:
            - 13
            - 14
        Phrase: "Upper"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
80) EndPhrase, "DynamicPhrasesType.Statements" [True]
81) StartPhrase, "'else'"
82) OnInternalPhraseAsync, 24, 28
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 25] (24)"
      IterEnd: "[1, 29] (28)"
      Token: "'else'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(24, 28), match='else'>"
      Whitespace:
        - 23
        - 24
    Phrase: "'else'"
83) EndPhrase, "'else'" [True]
84) StartPhrase, "DynamicPhrasesType.Statements"
85) StartPhrase, "Phrases"
86) StartPhrase, "Lower"
87) OnInternalPhraseAsync, 29, 34
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 30] (29)"
      IterEnd: "[1, 35] (34)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
      Whitespace:
        - 28
        - 29
    Phrase: "Lower"
88) EndPhrase, "Lower" [True]
89) StartPhrase, "Upper"
90) EndPhrase, "Upper" [False]
91) StartPhrase, "Dynamic Phrases"
92) StartPhrase, "Custom Display"
93) StartPhrase, "Lower"
94) OnInternalPhraseAsync, 29, 34
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 30] (29)"
      IterEnd: "[1, 35] (34)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
      Whitespace:
        - 28
        - 29
    Phrase: "Lower"
95) EndPhrase, "Lower" [True]
96) StartPhrase, "Upper"
97) EndPhrase, "Upper" [False]
98) OnInternalPhraseAsync, 28, 34
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 30] (29)"
        IterEnd: "[1, 35] (34)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
        Whitespace:
          - 28
          - 29
      Phrase: "Lower"
    Phrase: "Custom Display"
99) EndPhrase, "Custom Display" [True]
100) OnInternalPhraseAsync, 28, 34
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 30] (29)"
          IterEnd: "[1, 35] (34)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
          Whitespace:
            - 28
            - 29
        Phrase: "Lower"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
101) EndPhrase, "Dynamic Phrases" [True]
102) OnInternalPhraseAsync, 28, 34
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 30] (29)"
        IterEnd: "[1, 35] (34)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
        Whitespace:
          - 28
          - 29
      Phrase: "Lower"
    Phrase: "Phrases"
103) EndPhrase, "Phrases" [True]
104) OnInternalPhraseAsync, 28, 34
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 30] (29)"
          IterEnd: "[1, 35] (34)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
          Whitespace:
            - 28
            - 29
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
105) EndPhrase, "DynamicPhrasesType.Statements" [True]
106) StartPhrase, "'['"
107) EndPhrase, "'['" [False]
108) OnInternalPhraseAsync, 10, 34
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 1] (0)"
                        IterEnd: "[1, 4] (3)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Custom Display <Prefix>"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 5] (4)"
                    IterEnd: "[1, 6] (5)"
                    Token: "'+'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
                    Whitespace:
                      - 3
                      - 4
                  Phrase: "'+'"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 7] (6)"
                        IterEnd: "[1, 11] (10)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
                        Whitespace:
                          - 5
                          - 6
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
              IsComplete: True
            Phrase: "Add"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 12] (11)"
              IterEnd: "[1, 14] (13)"
              Token: "'if'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(11, 13), match='if'>"
              Whitespace:
                - 10
                - 11
            Phrase: "'if'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 15] (14)"
                  IterEnd: "[1, 24] (23)"
                  Token: "Upper"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
                  Whitespace:
                    - 13
                    - 14
                Phrase: "Upper"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 25] (24)"
              IterEnd: "[1, 29] (28)"
              Token: "'else'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(24, 28), match='else'>"
              Whitespace:
                - 23
                - 24
            Phrase: "'else'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 30] (29)"
                  IterEnd: "[1, 35] (34)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
                  Whitespace:
                    - 28
                    - 29
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Ter"
    Phrase: "Custom Display <Suffix>"
109) EndPhrase, "Custom Display <Suffix>" [True]
110) StartPhrase, "Custom Display <Suffix>"
111) StartPhrase, "'+'"
112) EndPhrase, "'+'" [False]
113) StartPhrase, "'-'"
114) OnInternalPhraseAsync, 35, 36
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 36] (35)"
      IterEnd: "[1, 37] (36)"
      Token: "'-'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(35, 36), match='-'>"
      Whitespace:
        - 34
        - 35
    Phrase: "'-'"
115) EndPhrase, "'-'" [True]
116) StartPhrase, "DynamicPhrasesType.Statements"
117) StartPhrase, "Phrases"
118) StartPhrase, "Lower"
119) OnInternalPhraseAsync, 37, 42
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 38] (37)"
      IterEnd: "[1, 43] (42)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
      Whitespace:
        - 36
        - 37
    Phrase: "Lower"
120) EndPhrase, "Lower" [True]
121) StartPhrase, "Upper"
122) EndPhrase, "Upper" [False]
123) StartPhrase, "Dynamic Phrases"
124) StartPhrase, "Custom Display"
125) StartPhrase, "Lower"
126) OnInternalPhraseAsync, 37, 42
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 38] (37)"
      IterEnd: "[1, 43] (42)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
      Whitespace:
        - 36
        - 37
    Phrase: "Lower"
127) EndPhrase, "Lower" [True]
128) StartPhrase, "Upper"
129) EndPhrase, "Upper" [False]
130) OnInternalPhraseAsync, 36, 42
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 38] (37)"
        IterEnd: "[1, 43] (42)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
        Whitespace:
          - 36
          - 37
      Phrase: "Lower"
    Phrase: "Custom Display"
131) EndPhrase, "Custom Display" [True]
132) OnInternalPhraseAsync, 36, 42
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 38] (37)"
          IterEnd: "[1, 43] (42)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
          Whitespace:
            - 36
            - 37
        Phrase: "Lower"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
133) EndPhrase, "Dynamic Phrases" [True]
134) OnInternalPhraseAsync, 36, 42
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 38] (37)"
        IterEnd: "[1, 43] (42)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
        Whitespace:
          - 36
          - 37
      Phrase: "Lower"
    Phrase: "Phrases"
135) EndPhrase, "Phrases" [True]
136) OnInternalPhraseAsync, 36, 42
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 38] (37)"
          IterEnd: "[1, 43] (42)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
          Whitespace:
            - 36
            - 37
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
137) EndPhrase, "DynamicPhrasesType.Statements" [True]
138) StartPhrase, "'*'"
139) EndPhrase, "'*'" [False]
140) StartPhrase, "'/'"
141) EndPhrase, "'/'" [False]
142) StartPhrase, "'if'"
143) EndPhrase, "'if'" [False]
144) StartPhrase, "'['"
145) EndPhrase, "'['" [False]
146) OnInternalPhraseAsync, 34, 42
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 1] (0)"
                              IterEnd: "[1, 4] (3)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                              Whitespace: None
                            Phrase: "Lower"
                          Phrase: "Custom Display <Prefix>"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 5] (4)"
                          IterEnd: "[1, 6] (5)"
                          Token: "'+'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
                          Whitespace:
                            - 3
                            - 4
                        Phrase: "'+'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 7] (6)"
                              IterEnd: "[1, 11] (10)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
                              Whitespace:
                                - 5
                                - 6
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Add"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 12] (11)"
                    IterEnd: "[1, 14] (13)"
                    Token: "'if'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(11, 13), match='if'>"
                    Whitespace:
                      - 10
                      - 11
                  Phrase: "'if'"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 15] (14)"
                        IterEnd: "[1, 24] (23)"
                        Token: "Upper"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
                        Whitespace:
                          - 13
                          - 14
                      Phrase: "Upper"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 25] (24)"
                    IterEnd: "[1, 29] (28)"
                    Token: "'else'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(24, 28), match='else'>"
                    Whitespace:
                      - 23
                      - 24
                  Phrase: "'else'"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 30] (29)"
                        IterEnd: "[1, 35] (34)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
                        Whitespace:
                          - 28
                          - 29
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
              IsComplete: True
            Phrase: "Ter"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 36] (35)"
              IterEnd: "[1, 37] (36)"
              Token: "'-'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(35, 36), match='-'>"
              Whitespace:
                - 34
                - 35
            Phrase: "'-'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 38] (37)"
                  IterEnd: "[1, 43] (42)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
                  Whitespace:
                    - 36
                    - 37
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Sub"
    Phrase: "Custom Display <Suffix>"
147) EndPhrase, "Custom Display <Suffix>" [True]
148) StartPhrase, "Custom Display <Suffix>"
149) StartPhrase, "'+'"
150) EndPhrase, "'+'" [False]
151) StartPhrase, "'-'"
152) EndPhrase, "'-'" [False]
153) StartPhrase, "'*'"
154) EndPhrase, "'*'" [False]
155) StartPhrase, "'/'"
156) EndPhrase, "'/'" [False]
157) StartPhrase, "'if'"
158) EndPhrase, "'if'" [False]
159) StartPhrase, "'['"
160) OnInternalPhraseAsync, 42, 43
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 43] (42)"
      IterEnd: "[1, 44] (43)"
      Token: "'['"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(42, 43), match='['>"
      Whitespace: None
    Phrase: "'['"
161) EndPhrase, "'['" [True]
162) StartPhrase, "DynamicPhrasesType.Statements"
163) StartPhrase, "Phrases"
164) StartPhrase, "Lower"
165) OnInternalPhraseAsync, 43, 44
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 44] (43)"
      IterEnd: "[1, 45] (44)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
      Whitespace: None
    Phrase: "Lower"
166) EndPhrase, "Lower" [True]
167) StartPhrase, "Upper"
168) EndPhrase, "Upper" [False]
169) StartPhrase, "Dynamic Phrases"
170) StartPhrase, "Custom Display"
171) StartPhrase, "Lower"
172) OnInternalPhraseAsync, 43, 44
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 44] (43)"
      IterEnd: "[1, 45] (44)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
      Whitespace: None
    Phrase: "Lower"
173) EndPhrase, "Lower" [True]
174) StartPhrase, "Upper"
175) EndPhrase, "Upper" [False]
176) OnInternalPhraseAsync, 43, 44
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 44] (43)"
        IterEnd: "[1, 45] (44)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display"
177) EndPhrase, "Custom Display" [True]
178) OnInternalPhraseAsync, 43, 44
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 44] (43)"
          IterEnd: "[1, 45] (44)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
179) EndPhrase, "Dynamic Phrases" [True]
180) OnInternalPhraseAsync, 43, 44
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 44] (43)"
        IterEnd: "[1, 45] (44)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Phrases"
181) EndPhrase, "Phrases" [True]
182) OnInternalPhraseAsync, 43, 44
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 44] (43)"
          IterEnd: "[1, 45] (44)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
183) EndPhrase, "DynamicPhrasesType.Statements" [True]
184) StartPhrase, "']'"
185) OnInternalPhraseAsync, 44, 45
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 45] (44)"
      IterEnd: "[1, 46] (45)"
      Token: "']'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(44, 45), match=']'>"
      Whitespace: None
    Phrase: "']'"
186) EndPhrase, "']'" [True]
187) OnInternalPhraseAsync, 42, 45
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 1] (0)"
                                    IterEnd: "[1, 4] (3)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                                    Whitespace: None
                                  Phrase: "Lower"
                                Phrase: "Custom Display <Prefix>"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 5] (4)"
                                IterEnd: "[1, 6] (5)"
                                Token: "'+'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
                                Whitespace:
                                  - 3
                                  - 4
                              Phrase: "'+'"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 7] (6)"
                                    IterEnd: "[1, 11] (10)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
                                    Whitespace:
                                      - 5
                                      - 6
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                          IsComplete: True
                        Phrase: "Add"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 12] (11)"
                          IterEnd: "[1, 14] (13)"
                          Token: "'if'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(11, 13), match='if'>"
                          Whitespace:
                            - 10
                            - 11
                        Phrase: "'if'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 15] (14)"
                              IterEnd: "[1, 24] (23)"
                              Token: "Upper"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
                              Whitespace:
                                - 13
                                - 14
                            Phrase: "Upper"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 25] (24)"
                          IterEnd: "[1, 29] (28)"
                          Token: "'else'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(24, 28), match='else'>"
                          Whitespace:
                            - 23
                            - 24
                        Phrase: "'else'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 30] (29)"
                              IterEnd: "[1, 35] (34)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
                              Whitespace:
                                - 28
                                - 29
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Ter"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 36] (35)"
                    IterEnd: "[1, 37] (36)"
                    Token: "'-'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(35, 36), match='-'>"
                    Whitespace:
                      - 34
                      - 35
                  Phrase: "'-'"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 38] (37)"
                        IterEnd: "[1, 43] (42)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
                        Whitespace:
                          - 36
                          - 37
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
              IsComplete: True
            Phrase: "Sub"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 43] (42)"
              IterEnd: "[1, 44] (43)"
              Token: "'['"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(42, 43), match='['>"
              Whitespace: None
            Phrase: "'['"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 44] (43)"
                  IterEnd: "[1, 45] (44)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 45] (44)"
              IterEnd: "[1, 46] (45)"
              Token: "']'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(44, 45), match=']'>"
              Whitespace: None
            Phrase: "']'"
        IsComplete: True
      Phrase: "Index"
    Phrase: "Custom Display <Suffix>"
188) EndPhrase, "Custom Display <Suffix>" [True]
189) StartPhrase, "Custom Display <Suffix>"
190) StartPhrase, "'+'"
191) EndPhrase, "'+'" [False]
192) StartPhrase, "'-'"
193) EndPhrase, "'-'" [False]
194) StartPhrase, "'*'"
195) EndPhrase, "'*'" [False]
196) StartPhrase, "'/'"
197) EndPhrase, "'/'" [False]
198) StartPhrase, "'if'"
199) EndPhrase, "'if'" [False]
200) StartPhrase, "'['"
201) OnInternalPhraseAsync, 45, 46
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 46] (45)"
      IterEnd: "[1, 47] (46)"
      Token: "'['"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(45, 46), match='['>"
      Whitespace: None
    Phrase: "'['"
202) EndPhrase, "'['" [True]
203) StartPhrase, "DynamicPhrasesType.Statements"
204) StartPhrase, "Phrases"
205) StartPhrase, "Lower"
206) OnInternalPhraseAsync, 46, 47
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 47] (46)"
      IterEnd: "[1, 48] (47)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
      Whitespace: None
    Phrase: "Lower"
207) EndPhrase, "Lower" [True]
208) StartPhrase, "Upper"
209) EndPhrase, "Upper" [False]
210) StartPhrase, "Dynamic Phrases"
211) StartPhrase, "Custom Display"
212) StartPhrase, "Lower"
213) OnInternalPhraseAsync, 46, 47
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 47] (46)"
      IterEnd: "[1, 48] (47)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
      Whitespace: None
    Phrase: "Lower"
214) EndPhrase, "Lower" [True]
215) StartPhrase, "Upper"
216) EndPhrase, "Upper" [False]
217) OnInternalPhraseAsync, 46, 47
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 47] (46)"
        IterEnd: "[1, 48] (47)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display"
218) EndPhrase, "Custom Display" [True]
219) OnInternalPhraseAsync, 46, 47
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 47] (46)"
          IterEnd: "[1, 48] (47)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
220) EndPhrase, "Dynamic Phrases" [True]
221) OnInternalPhraseAsync, 46, 47
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 47] (46)"
        IterEnd: "[1, 48] (47)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Phrases"
222) EndPhrase, "Phrases" [True]
223) OnInternalPhraseAsync, 46, 47
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 47] (46)"
          IterEnd: "[1, 48] (47)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
224) EndPhrase, "DynamicPhrasesType.Statements" [True]
225) StartPhrase, "']'"
226) OnInternalPhraseAsync, 47, 48
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 48] (47)"
      IterEnd: "[1, 49] (48)"
      Token: "']'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(47, 48), match=']'>"
      Whitespace: None
    Phrase: "']'"
227) EndPhrase, "']'" [True]
228) OnInternalPhraseAsync, 45, 48
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 1] (0)"
                                          IterEnd: "[1, 4] (3)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                                          Whitespace: None
                                        Phrase: "Lower"
                                      Phrase: "Custom Display <Prefix>"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 5] (4)"
                                      IterEnd: "[1, 6] (5)"
                                      Token: "'+'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
                                      Whitespace:
                                        - 3
                                        - 4
                                    Phrase: "'+'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 7] (6)"
                                          IterEnd: "[1, 11] (10)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
                                          Whitespace:
                                            - 5
                                            - 6
                                        Phrase: "Lower"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                IsComplete: True
                              Phrase: "Add"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 12] (11)"
                                IterEnd: "[1, 14] (13)"
                                Token: "'if'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(11, 13), match='if'>"
                                Whitespace:
                                  - 10
                                  - 11
                              Phrase: "'if'"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 15] (14)"
                                    IterEnd: "[1, 24] (23)"
                                    Token: "Upper"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
                                    Whitespace:
                                      - 13
                                      - 14
                                  Phrase: "Upper"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 25] (24)"
                                IterEnd: "[1, 29] (28)"
                                Token: "'else'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(24, 28), match='else'>"
                                Whitespace:
                                  - 23
                                  - 24
                              Phrase: "'else'"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 30] (29)"
                                    IterEnd: "[1, 35] (34)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
                                    Whitespace:
                                      - 28
                                      - 29
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                          IsComplete: True
                        Phrase: "Ter"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 36] (35)"
                          IterEnd: "[1, 37] (36)"
                          Token: "'-'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(35, 36), match='-'>"
                          Whitespace:
                            - 34
                            - 35
                        Phrase: "'-'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 38] (37)"
                              IterEnd: "[1, 43] (42)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
                              Whitespace:
                                - 36
                                - 37
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Sub"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 43] (42)"
                    IterEnd: "[1, 44] (43)"
                    Token: "'['"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(42, 43), match='['>"
                    Whitespace: None
                  Phrase: "'['"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 44] (43)"
                        IterEnd: "[1, 45] (44)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 45] (44)"
                    IterEnd: "[1, 46] (45)"
                    Token: "']'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(44, 45), match=']'>"
                    Whitespace: None
                  Phrase: "']'"
              IsComplete: True
            Phrase: "Index"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 46] (45)"
              IterEnd: "[1, 47] (46)"
              Token: "'['"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(45, 46), match='['>"
              Whitespace: None
            Phrase: "'['"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 47] (46)"
                  IterEnd: "[1, 48] (47)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 48] (47)"
              IterEnd: "[1, 49] (48)"
              Token: "']'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(47, 48), match=']'>"
              Whitespace: None
            Phrase: "']'"
        IsComplete: True
      Phrase: "Index"
    Phrase: "Custom Display <Suffix>"
229) EndPhrase, "Custom Display <Suffix>" [True]
230) StartPhrase, "Custom Display <Suffix>"
231) StartPhrase, "'+'"
232) EndPhrase, "'+'" [False]
233) StartPhrase, "'-'"
234) EndPhrase, "'-'" [False]
235) StartPhrase, "'*'"
236) EndPhrase, "'*'" [False]
237) StartPhrase, "'/'"
238) EndPhrase, "'/'" [False]
239) StartPhrase, "'if'"
240) EndPhrase, "'if'" [False]
241) StartPhrase, "'['"
242) OnInternalPhraseAsync, 48, 49
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 49] (48)"
      IterEnd: "[1, 50] (49)"
      Token: "'['"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(48, 49), match='['>"
      Whitespace: None
    Phrase: "'['"
243) EndPhrase, "'['" [True]
244) StartPhrase, "DynamicPhrasesType.Statements"
245) StartPhrase, "Phrases"
246) StartPhrase, "Lower"
247) OnInternalPhraseAsync, 49, 50
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 50] (49)"
      IterEnd: "[1, 51] (50)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
      Whitespace: None
    Phrase: "Lower"
248) EndPhrase, "Lower" [True]
249) StartPhrase, "Upper"
250) EndPhrase, "Upper" [False]
251) StartPhrase, "Dynamic Phrases"
252) StartPhrase, "Custom Display"
253) StartPhrase, "Lower"
254) OnInternalPhraseAsync, 49, 50
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 50] (49)"
      IterEnd: "[1, 51] (50)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
      Whitespace: None
    Phrase: "Lower"
255) EndPhrase, "Lower" [True]
256) StartPhrase, "Upper"
257) EndPhrase, "Upper" [False]
258) OnInternalPhraseAsync, 49, 50
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 50] (49)"
        IterEnd: "[1, 51] (50)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display"
259) EndPhrase, "Custom Display" [True]
260) OnInternalPhraseAsync, 49, 50
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 50] (49)"
          IterEnd: "[1, 51] (50)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
261) EndPhrase, "Dynamic Phrases" [True]
262) OnInternalPhraseAsync, 49, 50
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 50] (49)"
        IterEnd: "[1, 51] (50)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Phrases"
263) EndPhrase, "Phrases" [True]
264) OnInternalPhraseAsync, 49, 50
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 50] (49)"
          IterEnd: "[1, 51] (50)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
265) EndPhrase, "DynamicPhrasesType.Statements" [True]
266) StartPhrase, "']'"
267) OnInternalPhraseAsync, 50, 51
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 51] (50)"
      IterEnd: "[1, 52] (51)"
      Token: "']'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(50, 51), match=']'>"
      Whitespace: None
    Phrase: "']'"
268) EndPhrase, "']'" [True]
269) OnInternalPhraseAsync, 48, 51
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                      DataItems:
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 1] (0)"
                                                IterEnd: "[1, 4] (3)"
                                                Token: "Lower"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                                                Whitespace: None
                                              Phrase: "Lower"
                                            Phrase: "Custom Display <Prefix>"
                                          Phrase: "DynamicPhrasesType.Statements"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 5] (4)"
                                            IterEnd: "[1, 6] (5)"
                                            Token: "'+'"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
                                            Whitespace:
                                              - 3
                                              - 4
                                          Phrase: "'+'"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 7] (6)"
                                                IterEnd: "[1, 11] (10)"
                                                Token: "Lower"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
                                                Whitespace:
                                                  - 5
                                                  - 6
                                              Phrase: "Lower"
                                            Phrase: "Phrases"
                                          Phrase: "DynamicPhrasesType.Statements"
                                      IsComplete: True
                                    Phrase: "Add"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 12] (11)"
                                      IterEnd: "[1, 14] (13)"
                                      Token: "'if'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(11, 13), match='if'>"
                                      Whitespace:
                                        - 10
                                        - 11
                                    Phrase: "'if'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 15] (14)"
                                          IterEnd: "[1, 24] (23)"
                                          Token: "Upper"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
                                          Whitespace:
                                            - 13
                                            - 14
                                        Phrase: "Upper"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 25] (24)"
                                      IterEnd: "[1, 29] (28)"
                                      Token: "'else'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(24, 28), match='else'>"
                                      Whitespace:
                                        - 23
                                        - 24
                                    Phrase: "'else'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 30] (29)"
                                          IterEnd: "[1, 35] (34)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
                                          Whitespace:
                                            - 28
                                            - 29
                                        Phrase: "Lower"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                IsComplete: True
                              Phrase: "Ter"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 36] (35)"
                                IterEnd: "[1, 37] (36)"
                                Token: "'-'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(35, 36), match='-'>"
                                Whitespace:
                                  - 34
                                  - 35
                              Phrase: "'-'"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 38] (37)"
                                    IterEnd: "[1, 43] (42)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
                                    Whitespace:
                                      - 36
                                      - 37
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                          IsComplete: True
                        Phrase: "Sub"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 43] (42)"
                          IterEnd: "[1, 44] (43)"
                          Token: "'['"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(42, 43), match='['>"
                          Whitespace: None
                        Phrase: "'['"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 44] (43)"
                              IterEnd: "[1, 45] (44)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
                              Whitespace: None
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 45] (44)"
                          IterEnd: "[1, 46] (45)"
                          Token: "']'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(44, 45), match=']'>"
                          Whitespace: None
                        Phrase: "']'"
                    IsComplete: True
                  Phrase: "Index"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 46] (45)"
                    IterEnd: "[1, 47] (46)"
                    Token: "'['"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(45, 46), match='['>"
                    Whitespace: None
                  Phrase: "'['"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 47] (46)"
                        IterEnd: "[1, 48] (47)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 48] (47)"
                    IterEnd: "[1, 49] (48)"
                    Token: "']'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(47, 48), match=']'>"
                    Whitespace: None
                  Phrase: "']'"
              IsComplete: True
            Phrase: "Index"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 49] (48)"
              IterEnd: "[1, 50] (49)"
              Token: "'['"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(48, 49), match='['>"
              Whitespace: None
            Phrase: "'['"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 50] (49)"
                  IterEnd: "[1, 51] (50)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 51] (50)"
              IterEnd: "[1, 52] (51)"
              Token: "']'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(50, 51), match=']'>"
              Whitespace: None
            Phrase: "']'"
        IsComplete: True
      Phrase: "Index"
    Phrase: "Custom Display <Suffix>"
270) EndPhrase, "Custom Display <Suffix>" [True]
271) StartPhrase, "Custom Display <Suffix>"
272) StartPhrase, "'+'"
273) EndPhrase, "'+'" [False]
274) StartPhrase, "'-'"
275) EndPhrase, "'-'" [False]
276) StartPhrase, "'*'"
277) EndPhrase, "'*'" [False]
278) StartPhrase, "'/'"
279) EndPhrase, "'/'" [False]
280) StartPhrase, "'if'"
281) EndPhrase, "'if'" [False]
282) StartPhrase, "'['"
283) OnInternalPhraseAsync, 51, 52
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 52] (51)"
      IterEnd: "[1, 53] (52)"
      Token: "'['"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(51, 52), match='['>"
      Whitespace: None
    Phrase: "'['"
284) EndPhrase, "'['" [True]
285) StartPhrase, "DynamicPhrasesType.Statements"
286) StartPhrase, "Phrases"
287) StartPhrase, "Lower"
288) OnInternalPhraseAsync, 52, 53
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 53] (52)"
      IterEnd: "[1, 54] (53)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(52, 53), match='d'>"
      Whitespace: None
    Phrase: "Lower"
289) EndPhrase, "Lower" [True]
290) StartPhrase, "Upper"
291) EndPhrase, "Upper" [False]
292) StartPhrase, "Dynamic Phrases"
293) StartPhrase, "Custom Display"
294) StartPhrase, "Lower"
295) OnInternalPhraseAsync, 52, 53
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 53] (52)"
      IterEnd: "[1, 54] (53)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(52, 53), match='d'>"
      Whitespace: None
    Phrase: "Lower"
296) EndPhrase, "Lower" [True]
297) StartPhrase, "Upper"
298) EndPhrase, "Upper" [False]
299) OnInternalPhraseAsync, 52, 53
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 53] (52)"
        IterEnd: "[1, 54] (53)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(52, 53), match='d'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display"
300) EndPhrase, "Custom Display" [True]
301) OnInternalPhraseAsync, 52, 53
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 53] (52)"
          IterEnd: "[1, 54] (53)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(52, 53), match='d'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
302) EndPhrase, "Dynamic Phrases" [True]
303) OnInternalPhraseAsync, 52, 53
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 53] (52)"
        IterEnd: "[1, 54] (53)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(52, 53), match='d'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Phrases"
304) EndPhrase, "Phrases" [True]
305) OnInternalPhraseAsync, 52, 53
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 53] (52)"
          IterEnd: "[1, 54] (53)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(52, 53), match='d'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
306) EndPhrase, "DynamicPhrasesType.Statements" [True]
307) StartPhrase, "']'"
308) OnInternalPhraseAsync, 53, 54
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 54] (53)"
      IterEnd: "[1, 55] (54)"
      Token: "']'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(53, 54), match=']'>"
      Whitespace: None
    Phrase: "']'"
309) EndPhrase, "']'" [True]
310) OnInternalPhraseAsync, 51, 54
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                      DataItems:
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                            DataItems:
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 1] (0)"
                                                      IterEnd: "[1, 4] (3)"
                                                      Token: "Lower"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                                                      Whitespace: None
                                                    Phrase: "Lower"
                                                  Phrase: "Custom Display <Prefix>"
                                                Phrase: "DynamicPhrasesType.Statements"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                  IsIgnored: False
                                                  IterBegin: "[1, 5] (4)"
                                                  IterEnd: "[1, 6] (5)"
                                                  Token: "'+'"
                                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                    Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
                                                  Whitespace:
                                                    - 3
                                                    - 4
                                                Phrase: "'+'"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 7] (6)"
                                                      IterEnd: "[1, 11] (10)"
                                                      Token: "Lower"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
                                                      Whitespace:
                                                        - 5
                                                        - 6
                                                    Phrase: "Lower"
                                                  Phrase: "Phrases"
                                                Phrase: "DynamicPhrasesType.Statements"
                                            IsComplete: True
                                          Phrase: "Add"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 12] (11)"
                                            IterEnd: "[1, 14] (13)"
                                            Token: "'if'"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(11, 13), match='if'>"
                                            Whitespace:
                                              - 10
                                              - 11
                                          Phrase: "'if'"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 15] (14)"
                                                IterEnd: "[1, 24] (23)"
                                                Token: "Upper"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
                                                Whitespace:
                                                  - 13
                                                  - 14
                                              Phrase: "Upper"
                                            Phrase: "Phrases"
                                          Phrase: "DynamicPhrasesType.Statements"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 25] (24)"
                                            IterEnd: "[1, 29] (28)"
                                            Token: "'else'"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(24, 28), match='else'>"
                                            Whitespace:
                                              - 23
                                              - 24
                                          Phrase: "'else'"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 30] (29)"
                                                IterEnd: "[1, 35] (34)"
                                                Token: "Lower"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
                                                Whitespace:
                                                  - 28
                                                  - 29
                                              Phrase: "Lower"
                                            Phrase: "Phrases"
                                          Phrase: "DynamicPhrasesType.Statements"
                                      IsComplete: True
                                    Phrase: "Ter"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 36] (35)"
                                      IterEnd: "[1, 37] (36)"
                                      Token: "'-'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(35, 36), match='-'>"
                                      Whitespace:
                                        - 34
                                        - 35
                                    Phrase: "'-'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 38] (37)"
                                          IterEnd: "[1, 43] (42)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
                                          Whitespace:
                                            - 36
                                            - 37
                                        Phrase: "Lower"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                IsComplete: True
                              Phrase: "Sub"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 43] (42)"
                                IterEnd: "[1, 44] (43)"
                                Token: "'['"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(42, 43), match='['>"
                                Whitespace: None
                              Phrase: "'['"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 44] (43)"
                                    IterEnd: "[1, 45] (44)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
                                    Whitespace: None
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 45] (44)"
                                IterEnd: "[1, 46] (45)"
                                Token: "']'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(44, 45), match=']'>"
                                Whitespace: None
                              Phrase: "']'"
                          IsComplete: True
                        Phrase: "Index"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 46] (45)"
                          IterEnd: "[1, 47] (46)"
                          Token: "'['"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(45, 46), match='['>"
                          Whitespace: None
                        Phrase: "'['"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 47] (46)"
                              IterEnd: "[1, 48] (47)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
                              Whitespace: None
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 48] (47)"
                          IterEnd: "[1, 49] (48)"
                          Token: "']'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(47, 48), match=']'>"
                          Whitespace: None
                        Phrase: "']'"
                    IsComplete: True
                  Phrase: "Index"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 49] (48)"
                    IterEnd: "[1, 50] (49)"
                    Token: "'['"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(48, 49), match='['>"
                    Whitespace: None
                  Phrase: "'['"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 50] (49)"
                        IterEnd: "[1, 51] (50)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 51] (50)"
                    IterEnd: "[1, 52] (51)"
                    Token: "']'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(50, 51), match=']'>"
                    Whitespace: None
                  Phrase: "']'"
              IsComplete: True
            Phrase: "Index"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 52] (51)"
              IterEnd: "[1, 53] (52)"
              Token: "'['"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(51, 52), match='['>"
              Whitespace: None
            Phrase: "'['"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 53] (52)"
                  IterEnd: "[1, 54] (53)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(52, 53), match='d'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 54] (53)"
              IterEnd: "[1, 55] (54)"
              Token: "']'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(53, 54), match=']'>"
              Whitespace: None
            Phrase: "']'"
        IsComplete: True
      Phrase: "Index"
    Phrase: "Custom Display <Suffix>"
311) EndPhrase, "Custom Display <Suffix>" [True]
312) StartPhrase, "Custom Display <Suffix>"
313) StartPhrase, "'+'"
314) EndPhrase, "'+'" [False]
315) StartPhrase, "'-'"
316) EndPhrase, "'-'" [False]
317) StartPhrase, "'*'"
318) OnInternalPhraseAsync, 55, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 56] (55)"
      IterEnd: "[1, 57] (56)"
      Token: "'*'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(55, 56), match='*'>"
      Whitespace:
        - 54
        - 55
    Phrase: "'*'"
319) EndPhrase, "'*'" [True]
320) StartPhrase, "DynamicPhrasesType.Statements"
321) StartPhrase, "Phrases"
322) StartPhrase, "Lower"
323) EndPhrase, "Lower" [False]
324) StartPhrase, "Upper"
325) OnInternalPhraseAsync, 57, 61
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 58] (57)"
      IterEnd: "[1, 62] (61)"
      Token: "Upper"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(57, 61), match='FOUR'>"
      Whitespace:
        - 56
        - 57
    Phrase: "Upper"
326) EndPhrase, "Upper" [True]
327) StartPhrase, "Dynamic Phrases"
328) StartPhrase, "Custom Display"
329) StartPhrase, "Lower"
330) EndPhrase, "Lower" [False]
331) StartPhrase, "Upper"
332) OnInternalPhraseAsync, 57, 61
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 58] (57)"
      IterEnd: "[1, 62] (61)"
      Token: "Upper"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(57, 61), match='FOUR'>"
      Whitespace:
        - 56
        - 57
    Phrase: "Upper"
333) EndPhrase, "Upper" [True]
334) OnInternalPhraseAsync, 56, 61
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 58] (57)"
        IterEnd: "[1, 62] (61)"
        Token: "Upper"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(57, 61), match='FOUR'>"
        Whitespace:
          - 56
          - 57
      Phrase: "Upper"
    Phrase: "Custom Display"
335) EndPhrase, "Custom Display" [True]
336) OnInternalPhraseAsync, 56, 61
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 58] (57)"
          IterEnd: "[1, 62] (61)"
          Token: "Upper"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(57, 61), match='FOUR'>"
          Whitespace:
            - 56
            - 57
        Phrase: "Upper"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
337) EndPhrase, "Dynamic Phrases" [True]
338) OnInternalPhraseAsync, 56, 61
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 58] (57)"
        IterEnd: "[1, 62] (61)"
        Token: "Upper"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(57, 61), match='FOUR'>"
        Whitespace:
          - 56
          - 57
      Phrase: "Upper"
    Phrase: "Phrases"
339) EndPhrase, "Phrases" [True]
340) OnInternalPhraseAsync, 56, 61
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 58] (57)"
          IterEnd: "[1, 62] (61)"
          Token: "Upper"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(57, 61), match='FOUR'>"
          Whitespace:
            - 56
            - 57
        Phrase: "Upper"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
341) EndPhrase, "DynamicPhrasesType.Statements" [True]
342) StartPhrase, "'/'"
343) EndPhrase, "'/'" [False]
344) StartPhrase, "'if'"
345) EndPhrase, "'if'" [False]
346) StartPhrase, "'['"
347) EndPhrase, "'['" [False]
348) OnInternalPhraseAsync, 54, 61
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                      DataItems:
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                            DataItems:
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                                  DataItems:
                                                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 1] (0)"
                                                            IterEnd: "[1, 4] (3)"
                                                            Token: "Lower"
                                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                                                            Whitespace: None
                                                          Phrase: "Lower"
                                                        Phrase: "Custom Display <Prefix>"
                                                      Phrase: "DynamicPhrasesType.Statements"
                                                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                        IsIgnored: False
                                                        IterBegin: "[1, 5] (4)"
                                                        IterEnd: "[1, 6] (5)"
                                                        Token: "'+'"
                                                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
                                                        Whitespace:
                                                          - 3
                                                          - 4
                                                      Phrase: "'+'"
                                                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 7] (6)"
                                                            IterEnd: "[1, 11] (10)"
                                                            Token: "Lower"
                                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(6, 10), match='true'>"
                                                            Whitespace:
                                                              - 5
                                                              - 6
                                                          Phrase: "Lower"
                                                        Phrase: "Phrases"
                                                      Phrase: "DynamicPhrasesType.Statements"
                                                  IsComplete: True
                                                Phrase: "Add"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                  IsIgnored: False
                                                  IterBegin: "[1, 12] (11)"
                                                  IterEnd: "[1, 14] (13)"
                                                  Token: "'if'"
                                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                    Match: "<_sre.SRE_Match object; span=(11, 13), match='if'>"
                                                  Whitespace:
                                                    - 10
                                                    - 11
                                                Phrase: "'if'"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 15] (14)"
                                                      IterEnd: "[1, 24] (23)"
                                                      Token: "Upper"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(14, 23), match='CONDITION'>"
                                                      Whitespace:
                                                        - 13
                                                        - 14
                                                    Phrase: "Upper"
                                                  Phrase: "Phrases"
                                                Phrase: "DynamicPhrasesType.Statements"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                  IsIgnored: False
                                                  IterBegin: "[1, 25] (24)"
                                                  IterEnd: "[1, 29] (28)"
                                                  Token: "'else'"
                                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                    Match: "<_sre.SRE_Match object; span=(24, 28), match='else'>"
                                                  Whitespace:
                                                    - 23
                                                    - 24
                                                Phrase: "'else'"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 30] (29)"
                                                      IterEnd: "[1, 35] (34)"
                                                      Token: "Lower"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(29, 34), match='false'>"
                                                      Whitespace:
                                                        - 28
                                                        - 29
                                                    Phrase: "Lower"
                                                  Phrase: "Phrases"
                                                Phrase: "DynamicPhrasesType.Statements"
                                            IsComplete: True
                                          Phrase: "Ter"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 36] (35)"
                                            IterEnd: "[1, 37] (36)"
                                            Token: "'-'"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(35, 36), match='-'>"
                                            Whitespace:
                                              - 34
                                              - 35
                                          Phrase: "'-'"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 38] (37)"
                                                IterEnd: "[1, 43] (42)"
                                                Token: "Lower"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(37, 42), match='three'>"
                                                Whitespace:
                                                  - 36
                                                  - 37
                                              Phrase: "Lower"
                                            Phrase: "Phrases"
                                          Phrase: "DynamicPhrasesType.Statements"
                                      IsComplete: True
                                    Phrase: "Sub"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 43] (42)"
                                      IterEnd: "[1, 44] (43)"
                                      Token: "'['"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(42, 43), match='['>"
                                      Whitespace: None
                                    Phrase: "'['"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 44] (43)"
                                          IterEnd: "[1, 45] (44)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(43, 44), match='a'>"
                                          Whitespace: None
                                        Phrase: "Lower"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 45] (44)"
                                      IterEnd: "[1, 46] (45)"
                                      Token: "']'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(44, 45), match=']'>"
                                      Whitespace: None
                                    Phrase: "']'"
                                IsComplete: True
                              Phrase: "Index"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 46] (45)"
                                IterEnd: "[1, 47] (46)"
                                Token: "'['"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(45, 46), match='['>"
                                Whitespace: None
                              Phrase: "'['"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 47] (46)"
                                    IterEnd: "[1, 48] (47)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(46, 47), match='b'>"
                                    Whitespace: None
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 48] (47)"
                                IterEnd: "[1, 49] (48)"
                                Token: "']'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(47, 48), match=']'>"
                                Whitespace: None
                              Phrase: "']'"
                          IsComplete: True
                        Phrase: "Index"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 49] (48)"
                          IterEnd: "[1, 50] (49)"
                          Token: "'['"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(48, 49), match='['>"
                          Whitespace: None
                        Phrase: "'['"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 50] (49)"
                              IterEnd: "[1, 51] (50)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(49, 50), match='c'>"
                              Whitespace: None
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 51] (50)"
                          IterEnd: "[1, 52] (51)"
                          Token: "']'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(50, 51), match=']'>"
                          Whitespace: None
                        Phrase: "']'"
                    IsComplete: True
                  Phrase: "Index"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 52] (51)"
                    IterEnd: "[1, 53] (52)"
                    Token: "'['"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(51, 52), match='['>"
                    Whitespace: None
                  Phrase: "'['"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 53] (52)"
                        IterEnd: "[1, 54] (53)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(52, 53), match='d'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 54] (53)"
                    IterEnd: "[1, 55] (54)"
                    Token: "']'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(53, 54), match=']'>"
                    Whitespace: None
                  Phrase: "']'"
              IsComplete: True
            Phrase: "Index"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 56] (55)"
              IterEnd: "[1, 57] (56)"
              Token: "'*'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(55, 56), match='*'>"
              Whitespace:
                - 54
                - 55
            Phrase: "'*'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 58] (57)"
                  IterEnd: "[1, 62] (61)"
                  Token: "Upper"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(57, 61), match='FOUR'>"
                  Whitespace:
                    - 56
                    - 57
                Phrase: "Upper"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Mul"
    Phrase: "Custom Display <Suffix>"
349) EndPhrase, "Custom Display <Suffix>" [True]
350) StartPhrase, "Custom Display <Suffix>"
351) StartPhrase, "'+'"
352) EndPhrase, "'+'" [False]
353) StartPhrase, "'-'"
354) EndPhrase, "'-'" [False]
355) StartPhrase, "'*'"
356) EndPhrase, "'*'" [False]
357) StartPhrase, "'/'"
358) EndPhrase, "'/'" [False]
359) StartPhrase, "'if'"
360) EndPhrase, "'if'" [False]
361) StartPhrase, "'['"
362) EndPhrase, "'['" [False]
363) EndPhrase, "Custom Display <Suffix>" [False]
364) EndPhrase, "Dynamic Phrases" [True]
