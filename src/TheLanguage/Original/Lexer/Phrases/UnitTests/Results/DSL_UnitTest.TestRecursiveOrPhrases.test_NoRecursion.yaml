# <class 'Original.Lexer.Components.Phrase.Phrase.LexResult'>
Data: # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
  Data: # <class 'Original.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
    DataItems:
      - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'Original.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 1] (0)"
          IterEnd: "[1, 2] (1)"
          Token: "lpar"
          Value: # <class 'Original.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(0, 1), match='('>"
          Whitespace: None
        Phrase: "lpar"
      - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'Original.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
            IsIgnored: False
            IterBegin: "[1, 3] (2)"
            IterEnd: "[1, 8] (7)"
            Token: "Word Token"
            Value: # <class 'Original.Lexer.Components.Token.RegexToken.MatchResult'>
              Match: "<_sre.SRE_Match object; span=(2, 7), match='hello'>"
            Whitespace:
              - 1
              - 2
          Phrase: "Word Token"
        Phrase: "(Word Token | Recursive Phrase)"
      - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'Original.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 9] (8)"
          IterEnd: "[1, 10] (9)"
          Token: "rpar"
          Value: # <class 'Original.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(8, 9), match=')'>"
          Whitespace:
            - 7
            - 8
        Phrase: "rpar"
    IsComplete: True
  Phrase: "Recursive Phrase"
IterBegin: "[1, 1] (0)"
IterEnd: "[1, 10] (9)"
Success: True
