# ----------------------------------------------------------------------
# |
# |  MutableInt.TheLanguage
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2022-04-19 11:14:42
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2022
# |  Distributed under the Boost Software License, Version 1.0. See
# |  accompanying file LICENSE_1_0.txt or copy at
# |  http://www.boost.org/LICENSE_1_0.txt.
# |
# ----------------------------------------------------------------------
from .Int import Int


# ----------------------------------------------------------------------
public concept MutableInt {
    (Int | None) min_value! = None,
    (Int | None) max_value! = None,
}
    extends Int { min_value!, max_value! }
:
    public None __Serialize?__<ArchiveT>(ArchiveT ref archive) mutable
    public None __Accept?__<VisitorT>(VisitorT ref visitor) mutable

    [Deferred] public None __BitFlipInplace?__() mutable

    [Deferred] public None __DivideFloorInplace?__(Int immutable divisor) mutable
    [Deferred] public None __ModuloInplace?__(Int immutable divisor) mutable
    [Deferred] public None __MultiplyInplace?__(Int immutable multiplier) mutable
    [Deferred] public None __PowerInplace?__(Int immutable exponent) mutable

    [Deferred] public None __AddInplace?__(Int immutable value) mutable
    [Deferred] public None __SubtractInplace?__(Int immutable value) mutable

    [Deferred] public None __BitShiftLeftInplace?__(Int immutable places) mutable
    [Deferred] public None __BitShiftRightInplace?__(Int immutable places) mutable

    [Deferred] public None __BitAndInplace?__(Int immutable value) mutable
    [Deferred] public None __BitXOrInplace?__(Int immutable value) mutable
    [Deferred] public None __BitOrInplace?__(Int immutable value) mutable
