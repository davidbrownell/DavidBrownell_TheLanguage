# <class 'TheLanguage.Parser.RootParserInfo.RootParserInfo'>
Regions__: # <class 'types.RootParserInfoRegions'>
  Self__: "[Ln 1, Col 1] -> [Ln 6, Col 1]"
Statements:
  - # <class 'TheLanguage.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'TheLanguage.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "one"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
            Self__: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
          Self__: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
      Operator: "OperatorType.BitShiftLeft"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
        Operator: "[Ln 1, Col 12] -> [Ln 1, Col 14]"
        Right: "[Ln 1, Col 15] -> [Ln 1, Col 18]"
        Self__: "[Ln 1, Col 8] -> [Ln 1, Col 18]"
      Right: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "two"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 1, Col 15] -> [Ln 1, Col 18]"
            Self__: "[Ln 1, Col 15] -> [Ln 1, Col 18]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 1, Col 15] -> [Ln 1, Col 18]"
          Self__: "[Ln 1, Col 15] -> [Ln 1, Col 18]"
    Modifier: None
    Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var1"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
        Self__: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 1, Col 8] -> [Ln 1, Col 18]"
      Modifier: None
      Name: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
      Self__: "[Ln 1, Col 1] -> [Ln 2, Col 1]"
  - # <class 'TheLanguage.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'TheLanguage.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "three"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
            Self__: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
          Self__: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
      Operator: "OperatorType.BitShiftRight"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
        Operator: "[Ln 2, Col 14] -> [Ln 2, Col 16]"
        Right: "[Ln 2, Col 17] -> [Ln 2, Col 21]"
        Self__: "[Ln 2, Col 8] -> [Ln 2, Col 21]"
      Right: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "four"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 2, Col 17] -> [Ln 2, Col 21]"
            Self__: "[Ln 2, Col 17] -> [Ln 2, Col 21]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 2, Col 17] -> [Ln 2, Col 21]"
          Self__: "[Ln 2, Col 17] -> [Ln 2, Col 21]"
    Modifier: None
    Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var2"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 2, Col 1] -> [Ln 2, Col 5]"
        Self__: "[Ln 2, Col 1] -> [Ln 2, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 2, Col 8] -> [Ln 2, Col 21]"
      Modifier: None
      Name: "[Ln 2, Col 1] -> [Ln 2, Col 5]"
      Self__: "[Ln 2, Col 1] -> [Ln 3, Col 1]"
  - # <class 'TheLanguage.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'TheLanguage.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "five"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
            Self__: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
          Self__: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
      Operator: "OperatorType.BitAnd"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
        Operator: "[Ln 3, Col 13] -> [Ln 3, Col 14]"
        Right: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
        Self__: "[Ln 3, Col 8] -> [Ln 3, Col 18]"
      Right: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "six"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
            Self__: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
          Self__: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
    Modifier: None
    Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var3"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 3, Col 1] -> [Ln 3, Col 5]"
        Self__: "[Ln 3, Col 1] -> [Ln 3, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 3, Col 8] -> [Ln 3, Col 18]"
      Modifier: None
      Name: "[Ln 3, Col 1] -> [Ln 3, Col 5]"
      Self__: "[Ln 3, Col 1] -> [Ln 4, Col 1]"
  - # <class 'TheLanguage.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'TheLanguage.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "seven"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
            Self__: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
          Self__: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
      Operator: "OperatorType.BitOr"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
        Operator: "[Ln 4, Col 14] -> [Ln 4, Col 15]"
        Right: "[Ln 4, Col 16] -> [Ln 4, Col 21]"
        Self__: "[Ln 4, Col 8] -> [Ln 4, Col 21]"
      Right: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "eight"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 4, Col 16] -> [Ln 4, Col 21]"
            Self__: "[Ln 4, Col 16] -> [Ln 4, Col 21]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 4, Col 16] -> [Ln 4, Col 21]"
          Self__: "[Ln 4, Col 16] -> [Ln 4, Col 21]"
    Modifier: None
    Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var4"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 4, Col 1] -> [Ln 4, Col 5]"
        Self__: "[Ln 4, Col 1] -> [Ln 4, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 4, Col 8] -> [Ln 4, Col 21]"
      Modifier: None
      Name: "[Ln 4, Col 1] -> [Ln 4, Col 5]"
      Self__: "[Ln 4, Col 1] -> [Ln 5, Col 1]"
  - # <class 'TheLanguage.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'TheLanguage.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "nine"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
            Self__: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
          Self__: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
      Operator: "OperatorType.BitXor"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
        Operator: "[Ln 5, Col 13] -> [Ln 5, Col 14]"
        Right: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
        Self__: "[Ln 5, Col 8] -> [Ln 5, Col 18]"
      Right: # <class 'TheLanguage.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "ten"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
            Self__: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
          Self__: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
    Modifier: None
    Name: # <class 'TheLanguage.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var5"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 5, Col 1] -> [Ln 5, Col 5]"
        Self__: "[Ln 5, Col 1] -> [Ln 5, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 5, Col 8] -> [Ln 5, Col 18]"
      Modifier: None
      Name: "[Ln 5, Col 1] -> [Ln 5, Col 5]"
      Self__: "[Ln 5, Col 1] -> [Ln 6, Col 1]"
