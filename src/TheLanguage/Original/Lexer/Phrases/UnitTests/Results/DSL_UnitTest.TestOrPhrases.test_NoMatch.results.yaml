# <class 'Original.Lexer.Components.Phrase.Phrase.LexResult'>
Data: # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
  Data: # <class 'Original.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
    DataItems:
      - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'Original.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'Original.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                IsIgnored: False
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 5] (4)"
                Token: "Word Token"
                Value: # <class 'Original.Lexer.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(0, 4), match='this'>"
                Whitespace: None
              Phrase: "Word Token"
            - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: None
              Phrase: "Newline+"
          IsComplete: True
        Phrase: "Word Phrase"
      - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'Original.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: None
              Phrase: "Number Token"
          IsComplete: True
        Phrase: "Number Phrase"
      - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'Original.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'Original.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: None
              Phrase: "Upper Token"
          IsComplete: True
        Phrase: "Upper Phrase"
    IsComplete: True
  Phrase: "(Word Phrase | Number Phrase | Upper Phrase)"
IterBegin: "[1, 1] (0)"
IterEnd: "[1, 5] (4)"
Success: False
