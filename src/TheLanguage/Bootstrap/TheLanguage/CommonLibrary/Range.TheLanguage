# ----------------------------------------------------------------------
# |
# |  Range.TheLanguage
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2021-11-08 15:26:44
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2021
# |  Distributed under the Boost Software License, Version 1.0. See
# |  accompanying file LICENSE_1_0.txt or copy at
# |  http://www.boost.org/LICENSE_1_0.txt.
# |
# ----------------------------------------------------------------------
<<<
BugBug
>>>


# ----------------------------------------------------------------------
public immutable class Range<T>:
    public T val begin
    public T val end

    # ----------------------------------------------------------------------
    public static Range val Create?(T val begin, T val end):
        if end < begin:
            raise InvalidParameterException("end")

        return Range(begin, end)


# ----------------------------------------------------------------------
public Range<T> CreateRange(T val begin, T val end):
    return Range<T>::Create(begin, end)


# ----------------------------------------------------------------------
public T IntGenerator<T>(T var begin, T val end): # TODO generator:
    while begin != end:
        yield begin
        begin += 1
