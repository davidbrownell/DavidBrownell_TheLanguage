# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 6] (5)"
                    Type: "'class' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(0, 5), match='class'>"
                    Whitespace: None
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 6] (5)"
                Type: "Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 7] (6)"
                IterEnd: "[1, 10] (9)"
                Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(6, 9), match='Foo'>"
                Whitespace:
                  - 5
                  - 6
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 10] (9)"
                IterEnd: "[1, 11] (10)"
                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(9, 10), match='('>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 11] (10)"
                IterEnd: "[1, 12] (11)"
                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(10, 11), match=')'>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 12] (11)"
                    IterEnd: "[1, 13] (12)"
                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(11, 12), match=':'>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 13] (12)"
                            IterEnd: "[2, 1] (13)"
                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                              End: 13
                              Start: 12
                            Whitespace: None
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 1] (13)"
                            IterEnd: "[2, 5] (17)"
                            Type: "Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                              End: 17
                              Start: 13
                              Value: 4
                            Whitespace: None
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[2, 5] (17)"
                                                    IterEnd: "[2, 13] (25)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(17, 25), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[2, 5] (17)"
                                                IterEnd: "[2, 13] (25)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[2, 5] (17)"
                                            IterEnd: "[2, 13] (25)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 14] (26)"
                                                        IterEnd: "[2, 17] (29)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(26, 29), match='Int'>"
                                                        Whitespace:
                                                          - 25
                                                          - 26
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 2
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 2
                                                    IterBegin: "[2, 14] (26)"
                                                    IterEnd: "[2, 17] (29)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[2, 14] (26)"
                                                IterEnd: "[2, 17] (29)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[2, 14] (26)"
                                            IterEnd: "[2, 17] (29)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[2, 18] (30)"
                                            IterEnd: "[2, 28] (40)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(30, 40), match='__ToBool__'>"
                                            Whitespace:
                                              - 29
                                              - 30
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 28] (40)"
                                                IterEnd: "[2, 29] (41)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(40, 41), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 29] (41)"
                                                IterEnd: "[2, 30] (42)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(41, 42), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[2, 28] (40)"
                                            IterEnd: "[2, 30] (42)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 30] (42)"
                                                IterEnd: "[3, 1] (43)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 43
                                                  Start: 42
                                                Whitespace: None
                                            IterBegin: "[2, 30] (42)"
                                            IterEnd: "[3, 1] (43)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.ToBool"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 3
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 2
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 2
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 2
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 3
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 3
                                        IterBegin: "[2, 5] (17)"
                                        IterEnd: "[3, 1] (43)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[2, 5] (17)"
                                    IterEnd: "[3, 1] (43)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[2, 5] (17)"
                                IterEnd: "[3, 1] (43)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[3, 5] (47)"
                                                    IterEnd: "[3, 13] (55)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(47, 55), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[3, 5] (47)"
                                                IterEnd: "[3, 13] (55)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[3, 5] (47)"
                                            IterEnd: "[3, 13] (55)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[3, 14] (56)"
                                                        IterEnd: "[3, 17] (59)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(56, 59), match='Int'>"
                                                        Whitespace:
                                                          - 55
                                                          - 56
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 3
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 3
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 3
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 3
                                                    IterBegin: "[3, 14] (56)"
                                                    IterEnd: "[3, 17] (59)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[3, 14] (56)"
                                                IterEnd: "[3, 17] (59)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[3, 14] (56)"
                                            IterEnd: "[3, 17] (59)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[3, 18] (60)"
                                            IterEnd: "[3, 30] (72)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(60, 72), match='__ToString__'>"
                                            Whitespace:
                                              - 59
                                              - 60
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[3, 30] (72)"
                                                IterEnd: "[3, 31] (73)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(72, 73), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[3, 31] (73)"
                                                IterEnd: "[3, 32] (74)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(73, 74), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[3, 30] (72)"
                                            IterEnd: "[3, 32] (74)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[3, 32] (74)"
                                                IterEnd: "[4, 1] (75)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 75
                                                  Start: 74
                                                Whitespace: None
                                            IterBegin: "[3, 32] (74)"
                                            IterEnd: "[4, 1] (75)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.ToString"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 4
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 3
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 3
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 3
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 4
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 4
                                        IterBegin: "[3, 5] (47)"
                                        IterEnd: "[4, 1] (75)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[3, 5] (47)"
                                    IterEnd: "[4, 1] (75)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[3, 5] (47)"
                                IterEnd: "[4, 1] (75)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[4, 5] (79)"
                                                    IterEnd: "[4, 13] (87)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(79, 87), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[4, 5] (79)"
                                                IterEnd: "[4, 13] (87)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[4, 5] (79)"
                                            IterEnd: "[4, 13] (87)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[4, 14] (88)"
                                                        IterEnd: "[4, 17] (91)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(88, 91), match='Int'>"
                                                        Whitespace:
                                                          - 87
                                                          - 88
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 4
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 4
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 4
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 4
                                                    IterBegin: "[4, 14] (88)"
                                                    IterEnd: "[4, 17] (91)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[4, 14] (88)"
                                                IterEnd: "[4, 17] (91)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[4, 14] (88)"
                                            IterEnd: "[4, 17] (91)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[4, 18] (92)"
                                            IterEnd: "[4, 26] (100)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(92, 100), match='__Repr__'>"
                                            Whitespace:
                                              - 91
                                              - 92
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[4, 26] (100)"
                                                IterEnd: "[4, 27] (101)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(100, 101), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[4, 27] (101)"
                                                IterEnd: "[4, 28] (102)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(101, 102), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[4, 26] (100)"
                                            IterEnd: "[4, 28] (102)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[4, 28] (102)"
                                                IterEnd: "[5, 1] (103)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 103
                                                  Start: 102
                                                Whitespace: None
                                            IterBegin: "[4, 28] (102)"
                                            IterEnd: "[5, 1] (103)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Repr"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 5
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 4
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 4
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 4
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 5
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 5
                                        IterBegin: "[4, 5] (79)"
                                        IterEnd: "[5, 1] (103)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[4, 5] (79)"
                                    IterEnd: "[5, 1] (103)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[4, 5] (79)"
                                IterEnd: "[5, 1] (103)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[5, 5] (107)"
                                                    IterEnd: "[5, 13] (115)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(107, 115), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[5, 5] (107)"
                                                IterEnd: "[5, 13] (115)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[5, 5] (107)"
                                            IterEnd: "[5, 13] (115)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 14] (116)"
                                                        IterEnd: "[5, 17] (119)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(116, 119), match='Int'>"
                                                        Whitespace:
                                                          - 115
                                                          - 116
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 5
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 5
                                                    IterBegin: "[5, 14] (116)"
                                                    IterEnd: "[5, 17] (119)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[5, 14] (116)"
                                                IterEnd: "[5, 17] (119)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[5, 14] (116)"
                                            IterEnd: "[5, 17] (119)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[5, 18] (120)"
                                            IterEnd: "[5, 27] (129)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(120, 129), match='__Clone__'>"
                                            Whitespace:
                                              - 119
                                              - 120
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 27] (129)"
                                                IterEnd: "[5, 28] (130)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(129, 130), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 28] (130)"
                                                IterEnd: "[5, 29] (131)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(130, 131), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[5, 27] (129)"
                                            IterEnd: "[5, 29] (131)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 29] (131)"
                                                IterEnd: "[6, 1] (132)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 132
                                                  Start: 131
                                                Whitespace: None
                                            IterBegin: "[5, 29] (131)"
                                            IterEnd: "[6, 1] (132)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Clone"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 6
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 5
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 5
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 5
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 6
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 6
                                        IterBegin: "[5, 5] (107)"
                                        IterEnd: "[6, 1] (132)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[5, 5] (107)"
                                    IterEnd: "[6, 1] (132)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[5, 5] (107)"
                                IterEnd: "[6, 1] (132)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[6, 5] (136)"
                                                    IterEnd: "[6, 13] (144)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(136, 144), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[6, 5] (136)"
                                                IterEnd: "[6, 13] (144)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[6, 5] (136)"
                                            IterEnd: "[6, 13] (144)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[6, 14] (145)"
                                                        IterEnd: "[6, 17] (148)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(145, 148), match='Int'>"
                                                        Whitespace:
                                                          - 144
                                                          - 145
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 6
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 6
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 6
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 6
                                                    IterBegin: "[6, 14] (145)"
                                                    IterEnd: "[6, 17] (148)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[6, 14] (145)"
                                                IterEnd: "[6, 17] (148)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[6, 14] (145)"
                                            IterEnd: "[6, 17] (148)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[6, 18] (149)"
                                            IterEnd: "[6, 31] (162)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(149, 162), match='__Serialize__'>"
                                            Whitespace:
                                              - 148
                                              - 149
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[6, 31] (162)"
                                                IterEnd: "[6, 32] (163)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(162, 163), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[6, 32] (163)"
                                                IterEnd: "[6, 33] (164)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(163, 164), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[6, 31] (162)"
                                            IterEnd: "[6, 33] (164)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[6, 33] (164)"
                                                IterEnd: "[8, 1] (166)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 166
                                                  Start: 164
                                                Whitespace: None
                                            IterBegin: "[6, 33] (164)"
                                            IterEnd: "[8, 1] (166)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Serialize"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 6
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 8
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 6
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 6
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 6
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 6
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 6
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 33
                                                Line: 6
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 6
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 8
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 6
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 8
                                        IterBegin: "[6, 5] (136)"
                                        IterEnd: "[8, 1] (166)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[6, 5] (136)"
                                    IterEnd: "[8, 1] (166)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[6, 5] (136)"
                                IterEnd: "[8, 1] (166)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[8, 5] (170)"
                                                    IterEnd: "[8, 13] (178)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(170, 178), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[8, 5] (170)"
                                                IterEnd: "[8, 13] (178)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[8, 5] (170)"
                                            IterEnd: "[8, 13] (178)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[8, 14] (179)"
                                                        IterEnd: "[8, 17] (182)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(179, 182), match='Int'>"
                                                        Whitespace:
                                                          - 178
                                                          - 179
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 8
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 8
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 8
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 8
                                                    IterBegin: "[8, 14] (179)"
                                                    IterEnd: "[8, 17] (182)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[8, 14] (179)"
                                                IterEnd: "[8, 17] (182)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[8, 14] (179)"
                                            IterEnd: "[8, 17] (182)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[8, 18] (183)"
                                            IterEnd: "[8, 26] (191)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(183, 191), match='__Init__'>"
                                            Whitespace:
                                              - 182
                                              - 183
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[8, 26] (191)"
                                                IterEnd: "[8, 27] (192)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(191, 192), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[8, 27] (192)"
                                                IterEnd: "[8, 28] (193)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(192, 193), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[8, 26] (191)"
                                            IterEnd: "[8, 28] (193)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[8, 28] (193)"
                                                IterEnd: "[9, 1] (194)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 194
                                                  Start: 193
                                                Whitespace: None
                                            IterBegin: "[8, 28] (193)"
                                            IterEnd: "[9, 1] (194)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Init"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 9
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 8
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 8
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 8
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 9
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 9
                                        IterBegin: "[8, 5] (170)"
                                        IterEnd: "[9, 1] (194)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[8, 5] (170)"
                                    IterEnd: "[9, 1] (194)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[8, 5] (170)"
                                IterEnd: "[9, 1] (194)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[9, 5] (198)"
                                                    IterEnd: "[9, 13] (206)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(198, 206), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[9, 5] (198)"
                                                IterEnd: "[9, 13] (206)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[9, 5] (198)"
                                            IterEnd: "[9, 13] (206)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[9, 14] (207)"
                                                        IterEnd: "[9, 17] (210)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(207, 210), match='Int'>"
                                                        Whitespace:
                                                          - 206
                                                          - 207
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 9
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 9
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 9
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 9
                                                    IterBegin: "[9, 14] (207)"
                                                    IterEnd: "[9, 17] (210)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[9, 14] (207)"
                                                IterEnd: "[9, 17] (210)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[9, 14] (207)"
                                            IterEnd: "[9, 17] (210)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[9, 18] (211)"
                                            IterEnd: "[9, 30] (223)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(211, 223), match='__PostInit__'>"
                                            Whitespace:
                                              - 210
                                              - 211
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[9, 30] (223)"
                                                IterEnd: "[9, 31] (224)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(223, 224), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[9, 31] (224)"
                                                IterEnd: "[9, 32] (225)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(224, 225), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[9, 30] (223)"
                                            IterEnd: "[9, 32] (225)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[9, 32] (225)"
                                                IterEnd: "[11, 1] (227)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 227
                                                  Start: 225
                                                Whitespace: None
                                            IterBegin: "[9, 32] (225)"
                                            IterEnd: "[11, 1] (227)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.PostInit"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 9
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 11
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 9
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 9
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 9
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 9
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 9
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 9
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 9
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 11
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 9
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 11
                                        IterBegin: "[9, 5] (198)"
                                        IterEnd: "[11, 1] (227)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[9, 5] (198)"
                                    IterEnd: "[11, 1] (227)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[9, 5] (198)"
                                IterEnd: "[11, 1] (227)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[11, 5] (231)"
                                                    IterEnd: "[11, 13] (239)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(231, 239), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[11, 5] (231)"
                                                IterEnd: "[11, 13] (239)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[11, 5] (231)"
                                            IterEnd: "[11, 13] (239)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[11, 14] (240)"
                                                        IterEnd: "[11, 17] (243)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(240, 243), match='Int'>"
                                                        Whitespace:
                                                          - 239
                                                          - 240
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 11
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 11
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 11
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 11
                                                    IterBegin: "[11, 14] (240)"
                                                    IterEnd: "[11, 17] (243)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[11, 14] (240)"
                                                IterEnd: "[11, 17] (243)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[11, 14] (240)"
                                            IterEnd: "[11, 17] (243)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[11, 18] (244)"
                                            IterEnd: "[11, 34] (260)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(244, 260), match='__GetAttribute__'>"
                                            Whitespace:
                                              - 243
                                              - 244
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[11, 34] (260)"
                                                IterEnd: "[11, 35] (261)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(260, 261), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[11, 35] (261)"
                                                IterEnd: "[11, 36] (262)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(261, 262), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[11, 34] (260)"
                                            IterEnd: "[11, 36] (262)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[11, 36] (262)"
                                                IterEnd: "[12, 1] (263)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 263
                                                  Start: 262
                                                Whitespace: None
                                            IterBegin: "[11, 36] (262)"
                                            IterEnd: "[12, 1] (263)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.GetAttribute"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 11
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 12
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 11
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 11
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 11
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 11
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 11
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 36
                                                Line: 11
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 11
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 12
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 11
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 12
                                        IterBegin: "[11, 5] (231)"
                                        IterEnd: "[12, 1] (263)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[11, 5] (231)"
                                    IterEnd: "[12, 1] (263)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[11, 5] (231)"
                                IterEnd: "[12, 1] (263)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[12, 5] (267)"
                                                    IterEnd: "[12, 13] (275)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(267, 275), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[12, 5] (267)"
                                                IterEnd: "[12, 13] (275)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[12, 5] (267)"
                                            IterEnd: "[12, 13] (275)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[12, 14] (276)"
                                                        IterEnd: "[12, 17] (279)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(276, 279), match='Int'>"
                                                        Whitespace:
                                                          - 275
                                                          - 276
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 12
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 12
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 12
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 12
                                                    IterBegin: "[12, 14] (276)"
                                                    IterEnd: "[12, 17] (279)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[12, 14] (276)"
                                                IterEnd: "[12, 17] (279)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[12, 14] (276)"
                                            IterEnd: "[12, 17] (279)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[12, 18] (280)"
                                            IterEnd: "[12, 26] (288)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(280, 288), match='__Call__'>"
                                            Whitespace:
                                              - 279
                                              - 280
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[12, 26] (288)"
                                                IterEnd: "[12, 27] (289)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(288, 289), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[12, 27] (289)"
                                                IterEnd: "[12, 28] (290)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(289, 290), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[12, 26] (288)"
                                            IterEnd: "[12, 28] (290)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[12, 28] (290)"
                                                IterEnd: "[13, 1] (291)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 291
                                                  Start: 290
                                                Whitespace: None
                                            IterBegin: "[12, 28] (290)"
                                            IterEnd: "[13, 1] (291)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Call"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 12
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 13
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 12
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 12
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 12
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 12
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 12
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 12
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 12
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 13
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 12
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 13
                                        IterBegin: "[12, 5] (267)"
                                        IterEnd: "[13, 1] (291)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[12, 5] (267)"
                                    IterEnd: "[13, 1] (291)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[12, 5] (267)"
                                IterEnd: "[13, 1] (291)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[13, 5] (295)"
                                                    IterEnd: "[13, 13] (303)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(295, 303), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[13, 5] (295)"
                                                IterEnd: "[13, 13] (303)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[13, 5] (295)"
                                            IterEnd: "[13, 13] (303)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[13, 14] (304)"
                                                        IterEnd: "[13, 17] (307)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(304, 307), match='Int'>"
                                                        Whitespace:
                                                          - 303
                                                          - 304
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 13
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 13
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 13
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 13
                                                    IterBegin: "[13, 14] (304)"
                                                    IterEnd: "[13, 17] (307)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[13, 14] (304)"
                                                IterEnd: "[13, 17] (307)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[13, 14] (304)"
                                            IterEnd: "[13, 17] (307)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[13, 18] (308)"
                                            IterEnd: "[13, 26] (316)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(308, 316), match='__Cast__'>"
                                            Whitespace:
                                              - 307
                                              - 308
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[13, 26] (316)"
                                                IterEnd: "[13, 27] (317)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(316, 317), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[13, 27] (317)"
                                                IterEnd: "[13, 28] (318)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(317, 318), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[13, 26] (316)"
                                            IterEnd: "[13, 28] (318)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[13, 28] (318)"
                                                IterEnd: "[14, 1] (319)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 319
                                                  Start: 318
                                                Whitespace: None
                                            IterBegin: "[13, 28] (318)"
                                            IterEnd: "[14, 1] (319)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Cast"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 13
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 14
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 13
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 13
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 13
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 13
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 13
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 13
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 13
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 14
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 13
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 14
                                        IterBegin: "[13, 5] (295)"
                                        IterEnd: "[14, 1] (319)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[13, 5] (295)"
                                    IterEnd: "[14, 1] (319)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[13, 5] (295)"
                                IterEnd: "[14, 1] (319)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[14, 5] (323)"
                                                    IterEnd: "[14, 13] (331)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(323, 331), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[14, 5] (323)"
                                                IterEnd: "[14, 13] (331)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[14, 5] (323)"
                                            IterEnd: "[14, 13] (331)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[14, 14] (332)"
                                                        IterEnd: "[14, 17] (335)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(332, 335), match='Int'>"
                                                        Whitespace:
                                                          - 331
                                                          - 332
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 14
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 14
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 14
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 14
                                                    IterBegin: "[14, 14] (332)"
                                                    IterEnd: "[14, 17] (335)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[14, 14] (332)"
                                                IterEnd: "[14, 17] (335)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[14, 14] (332)"
                                            IterEnd: "[14, 17] (335)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[14, 18] (336)"
                                            IterEnd: "[14, 27] (345)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(336, 345), match='__Index__'>"
                                            Whitespace:
                                              - 335
                                              - 336
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[14, 27] (345)"
                                                IterEnd: "[14, 28] (346)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(345, 346), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[14, 28] (346)"
                                                IterEnd: "[14, 29] (347)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(346, 347), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[14, 27] (345)"
                                            IterEnd: "[14, 29] (347)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[14, 29] (347)"
                                                IterEnd: "[16, 1] (349)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 349
                                                  Start: 347
                                                Whitespace: None
                                            IterBegin: "[14, 29] (347)"
                                            IterEnd: "[16, 1] (349)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Index"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 14
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 16
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 14
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 14
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 14
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 14
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 14
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 14
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 14
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 16
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 14
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 16
                                        IterBegin: "[14, 5] (323)"
                                        IterEnd: "[16, 1] (349)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[14, 5] (323)"
                                    IterEnd: "[16, 1] (349)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[14, 5] (323)"
                                IterEnd: "[16, 1] (349)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[16, 5] (353)"
                                                    IterEnd: "[16, 13] (361)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(353, 361), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[16, 5] (353)"
                                                IterEnd: "[16, 13] (361)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[16, 5] (353)"
                                            IterEnd: "[16, 13] (361)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[16, 14] (362)"
                                                        IterEnd: "[16, 17] (365)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(362, 365), match='Int'>"
                                                        Whitespace:
                                                          - 361
                                                          - 362
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 16
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 16
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 16
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 16
                                                    IterBegin: "[16, 14] (362)"
                                                    IterEnd: "[16, 17] (365)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[16, 14] (362)"
                                                IterEnd: "[16, 17] (365)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[16, 14] (362)"
                                            IterEnd: "[16, 17] (365)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[16, 18] (366)"
                                            IterEnd: "[16, 30] (378)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(366, 378), match='__Contains__'>"
                                            Whitespace:
                                              - 365
                                              - 366
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[16, 30] (378)"
                                                IterEnd: "[16, 31] (379)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(378, 379), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[16, 31] (379)"
                                                IterEnd: "[16, 32] (380)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(379, 380), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[16, 30] (378)"
                                            IterEnd: "[16, 32] (380)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[16, 32] (380)"
                                                IterEnd: "[17, 1] (381)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 381
                                                  Start: 380
                                                Whitespace: None
                                            IterBegin: "[16, 32] (380)"
                                            IterEnd: "[17, 1] (381)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Contains"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 16
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 17
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 16
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 16
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 16
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 16
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 16
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 16
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 16
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 17
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 16
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 17
                                        IterBegin: "[16, 5] (353)"
                                        IterEnd: "[17, 1] (381)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[16, 5] (353)"
                                    IterEnd: "[17, 1] (381)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[16, 5] (353)"
                                IterEnd: "[17, 1] (381)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[17, 5] (385)"
                                                    IterEnd: "[17, 13] (393)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(385, 393), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[17, 5] (385)"
                                                IterEnd: "[17, 13] (393)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[17, 5] (385)"
                                            IterEnd: "[17, 13] (393)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[17, 14] (394)"
                                                        IterEnd: "[17, 17] (397)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(394, 397), match='Int'>"
                                                        Whitespace:
                                                          - 393
                                                          - 394
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 17
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 17
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 17
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 17
                                                    IterBegin: "[17, 14] (394)"
                                                    IterEnd: "[17, 17] (397)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[17, 14] (394)"
                                                IterEnd: "[17, 17] (397)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[17, 14] (394)"
                                            IterEnd: "[17, 17] (397)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[17, 18] (398)"
                                            IterEnd: "[17, 28] (408)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(398, 408), match='__Length__'>"
                                            Whitespace:
                                              - 397
                                              - 398
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[17, 28] (408)"
                                                IterEnd: "[17, 29] (409)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(408, 409), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[17, 29] (409)"
                                                IterEnd: "[17, 30] (410)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(409, 410), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[17, 28] (408)"
                                            IterEnd: "[17, 30] (410)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[17, 30] (410)"
                                                IterEnd: "[18, 1] (411)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 411
                                                  Start: 410
                                                Whitespace: None
                                            IterBegin: "[17, 30] (410)"
                                            IterEnd: "[18, 1] (411)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Length"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 17
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 18
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 17
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 17
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 17
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 17
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 17
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 17
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 17
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 18
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 17
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 18
                                        IterBegin: "[17, 5] (385)"
                                        IterEnd: "[18, 1] (411)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[17, 5] (385)"
                                    IterEnd: "[18, 1] (411)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[17, 5] (385)"
                                IterEnd: "[18, 1] (411)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[18, 5] (415)"
                                                    IterEnd: "[18, 13] (423)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(415, 423), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[18, 5] (415)"
                                                IterEnd: "[18, 13] (423)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[18, 5] (415)"
                                            IterEnd: "[18, 13] (423)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[18, 14] (424)"
                                                        IterEnd: "[18, 17] (427)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(424, 427), match='Int'>"
                                                        Whitespace:
                                                          - 423
                                                          - 424
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 18
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 18
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 18
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 18
                                                    IterBegin: "[18, 14] (424)"
                                                    IterEnd: "[18, 17] (427)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[18, 14] (424)"
                                                IterEnd: "[18, 17] (427)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[18, 14] (424)"
                                            IterEnd: "[18, 17] (427)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[18, 18] (428)"
                                            IterEnd: "[18, 26] (436)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(428, 436), match='__Iter__'>"
                                            Whitespace:
                                              - 427
                                              - 428
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[18, 26] (436)"
                                                IterEnd: "[18, 27] (437)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(436, 437), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[18, 27] (437)"
                                                IterEnd: "[18, 28] (438)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(437, 438), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[18, 26] (436)"
                                            IterEnd: "[18, 28] (438)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[18, 28] (438)"
                                                IterEnd: "[19, 1] (439)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 439
                                                  Start: 438
                                                Whitespace: None
                                            IterBegin: "[18, 28] (438)"
                                            IterEnd: "[19, 1] (439)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Iter"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 18
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 19
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 18
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 18
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 18
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 18
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 18
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 18
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 18
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 19
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 18
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 19
                                        IterBegin: "[18, 5] (415)"
                                        IterEnd: "[19, 1] (439)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[18, 5] (415)"
                                    IterEnd: "[19, 1] (439)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[18, 5] (415)"
                                IterEnd: "[19, 1] (439)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[19, 5] (443)"
                                                    IterEnd: "[19, 13] (451)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(443, 451), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[19, 5] (443)"
                                                IterEnd: "[19, 13] (451)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[19, 5] (443)"
                                            IterEnd: "[19, 13] (451)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[19, 14] (452)"
                                                        IterEnd: "[19, 17] (455)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(452, 455), match='Int'>"
                                                        Whitespace:
                                                          - 451
                                                          - 452
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 19
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 19
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 19
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 19
                                                    IterBegin: "[19, 14] (452)"
                                                    IterEnd: "[19, 17] (455)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[19, 14] (452)"
                                                IterEnd: "[19, 17] (455)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[19, 14] (452)"
                                            IterEnd: "[19, 17] (455)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[19, 18] (456)"
                                            IterEnd: "[19, 27] (465)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(456, 465), match='__AtEnd__'>"
                                            Whitespace:
                                              - 455
                                              - 456
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[19, 27] (465)"
                                                IterEnd: "[19, 28] (466)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(465, 466), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[19, 28] (466)"
                                                IterEnd: "[19, 29] (467)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(466, 467), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[19, 27] (465)"
                                            IterEnd: "[19, 29] (467)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[19, 29] (467)"
                                                IterEnd: "[21, 1] (469)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 469
                                                  Start: 467
                                                Whitespace: None
                                            IterBegin: "[19, 29] (467)"
                                            IterEnd: "[21, 1] (469)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.AtEnd"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 19
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 21
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 19
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 19
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 19
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 19
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 19
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 19
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 19
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 21
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 19
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 21
                                        IterBegin: "[19, 5] (443)"
                                        IterEnd: "[21, 1] (469)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[19, 5] (443)"
                                    IterEnd: "[21, 1] (469)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[19, 5] (443)"
                                IterEnd: "[21, 1] (469)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[21, 5] (473)"
                                                    IterEnd: "[21, 13] (481)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(473, 481), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[21, 5] (473)"
                                                IterEnd: "[21, 13] (481)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[21, 5] (473)"
                                            IterEnd: "[21, 13] (481)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[21, 14] (482)"
                                                        IterEnd: "[21, 17] (485)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(482, 485), match='Int'>"
                                                        Whitespace:
                                                          - 481
                                                          - 482
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 21
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 21
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 21
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 21
                                                    IterBegin: "[21, 14] (482)"
                                                    IterEnd: "[21, 17] (485)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[21, 14] (482)"
                                                IterEnd: "[21, 17] (485)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[21, 14] (482)"
                                            IterEnd: "[21, 17] (485)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[21, 18] (486)"
                                            IterEnd: "[21, 29] (497)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(486, 497), match='__Compare__'>"
                                            Whitespace:
                                              - 485
                                              - 486
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[21, 29] (497)"
                                                IterEnd: "[21, 30] (498)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(497, 498), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[21, 30] (498)"
                                                IterEnd: "[21, 31] (499)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(498, 499), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[21, 29] (497)"
                                            IterEnd: "[21, 31] (499)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[21, 31] (499)"
                                                IterEnd: "[22, 1] (500)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 500
                                                  Start: 499
                                                Whitespace: None
                                            IterBegin: "[21, 31] (499)"
                                            IterEnd: "[22, 1] (500)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Compare"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 21
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 22
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 21
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 21
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 21
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 21
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 21
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 21
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 21
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 22
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 21
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 22
                                        IterBegin: "[21, 5] (473)"
                                        IterEnd: "[22, 1] (500)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[21, 5] (473)"
                                    IterEnd: "[22, 1] (500)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[21, 5] (473)"
                                IterEnd: "[22, 1] (500)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[22, 5] (504)"
                                                    IterEnd: "[22, 13] (512)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(504, 512), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[22, 5] (504)"
                                                IterEnd: "[22, 13] (512)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[22, 5] (504)"
                                            IterEnd: "[22, 13] (512)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[22, 14] (513)"
                                                        IterEnd: "[22, 17] (516)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(513, 516), match='Int'>"
                                                        Whitespace:
                                                          - 512
                                                          - 513
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 22
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 22
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 22
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 22
                                                    IterBegin: "[22, 14] (513)"
                                                    IterEnd: "[22, 17] (516)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[22, 14] (513)"
                                                IterEnd: "[22, 17] (516)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[22, 14] (513)"
                                            IterEnd: "[22, 17] (516)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[22, 18] (517)"
                                            IterEnd: "[22, 27] (526)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(517, 526), match='__Equal__'>"
                                            Whitespace:
                                              - 516
                                              - 517
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[22, 27] (526)"
                                                IterEnd: "[22, 28] (527)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(526, 527), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[22, 28] (527)"
                                                IterEnd: "[22, 29] (528)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(527, 528), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[22, 27] (526)"
                                            IterEnd: "[22, 29] (528)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[22, 29] (528)"
                                                IterEnd: "[23, 1] (529)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 529
                                                  Start: 528
                                                Whitespace: None
                                            IterBegin: "[22, 29] (528)"
                                            IterEnd: "[23, 1] (529)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Equal"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 22
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 23
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 22
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 22
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 22
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 22
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 22
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 22
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 22
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 23
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 22
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 23
                                        IterBegin: "[22, 5] (504)"
                                        IterEnd: "[23, 1] (529)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[22, 5] (504)"
                                    IterEnd: "[23, 1] (529)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[22, 5] (504)"
                                IterEnd: "[23, 1] (529)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[23, 5] (533)"
                                                    IterEnd: "[23, 13] (541)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(533, 541), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[23, 5] (533)"
                                                IterEnd: "[23, 13] (541)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[23, 5] (533)"
                                            IterEnd: "[23, 13] (541)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[23, 14] (542)"
                                                        IterEnd: "[23, 17] (545)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(542, 545), match='Int'>"
                                                        Whitespace:
                                                          - 541
                                                          - 542
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 23
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 23
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 23
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 23
                                                    IterBegin: "[23, 14] (542)"
                                                    IterEnd: "[23, 17] (545)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[23, 14] (542)"
                                                IterEnd: "[23, 17] (545)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[23, 14] (542)"
                                            IterEnd: "[23, 17] (545)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[23, 18] (546)"
                                            IterEnd: "[23, 30] (558)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(546, 558), match='__NotEqual__'>"
                                            Whitespace:
                                              - 545
                                              - 546
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[23, 30] (558)"
                                                IterEnd: "[23, 31] (559)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(558, 559), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[23, 31] (559)"
                                                IterEnd: "[23, 32] (560)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(559, 560), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[23, 30] (558)"
                                            IterEnd: "[23, 32] (560)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[23, 32] (560)"
                                                IterEnd: "[24, 1] (561)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 561
                                                  Start: 560
                                                Whitespace: None
                                            IterBegin: "[23, 32] (560)"
                                            IterEnd: "[24, 1] (561)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.NotEqual"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 23
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 24
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 23
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 23
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 23
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 23
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 23
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 23
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 23
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 24
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 23
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 24
                                        IterBegin: "[23, 5] (533)"
                                        IterEnd: "[24, 1] (561)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[23, 5] (533)"
                                    IterEnd: "[24, 1] (561)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[23, 5] (533)"
                                IterEnd: "[24, 1] (561)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[24, 5] (565)"
                                                    IterEnd: "[24, 13] (573)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(565, 573), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[24, 5] (565)"
                                                IterEnd: "[24, 13] (573)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[24, 5] (565)"
                                            IterEnd: "[24, 13] (573)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[24, 14] (574)"
                                                        IterEnd: "[24, 17] (577)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(574, 577), match='Int'>"
                                                        Whitespace:
                                                          - 573
                                                          - 574
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 24
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 24
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 24
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 24
                                                    IterBegin: "[24, 14] (574)"
                                                    IterEnd: "[24, 17] (577)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[24, 14] (574)"
                                                IterEnd: "[24, 17] (577)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[24, 14] (574)"
                                            IterEnd: "[24, 17] (577)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[24, 18] (578)"
                                            IterEnd: "[24, 26] (586)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(578, 586), match='__Less__'>"
                                            Whitespace:
                                              - 577
                                              - 578
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[24, 26] (586)"
                                                IterEnd: "[24, 27] (587)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(586, 587), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[24, 27] (587)"
                                                IterEnd: "[24, 28] (588)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(587, 588), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[24, 26] (586)"
                                            IterEnd: "[24, 28] (588)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[24, 28] (588)"
                                                IterEnd: "[25, 1] (589)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 589
                                                  Start: 588
                                                Whitespace: None
                                            IterBegin: "[24, 28] (588)"
                                            IterEnd: "[25, 1] (589)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Less"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 24
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 25
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 24
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 24
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 24
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 24
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 24
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 24
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 24
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 25
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 24
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 25
                                        IterBegin: "[24, 5] (565)"
                                        IterEnd: "[25, 1] (589)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[24, 5] (565)"
                                    IterEnd: "[25, 1] (589)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[24, 5] (565)"
                                IterEnd: "[25, 1] (589)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[25, 5] (593)"
                                                    IterEnd: "[25, 13] (601)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(593, 601), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[25, 5] (593)"
                                                IterEnd: "[25, 13] (601)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[25, 5] (593)"
                                            IterEnd: "[25, 13] (601)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[25, 14] (602)"
                                                        IterEnd: "[25, 17] (605)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(602, 605), match='Int'>"
                                                        Whitespace:
                                                          - 601
                                                          - 602
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 25
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 25
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 25
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 25
                                                    IterBegin: "[25, 14] (602)"
                                                    IterEnd: "[25, 17] (605)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[25, 14] (602)"
                                                IterEnd: "[25, 17] (605)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[25, 14] (602)"
                                            IterEnd: "[25, 17] (605)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[25, 18] (606)"
                                            IterEnd: "[25, 31] (619)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(606, 619), match='__LessEqual__'>"
                                            Whitespace:
                                              - 605
                                              - 606
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[25, 31] (619)"
                                                IterEnd: "[25, 32] (620)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(619, 620), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[25, 32] (620)"
                                                IterEnd: "[25, 33] (621)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(620, 621), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[25, 31] (619)"
                                            IterEnd: "[25, 33] (621)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[25, 33] (621)"
                                                IterEnd: "[26, 1] (622)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 622
                                                  Start: 621
                                                Whitespace: None
                                            IterBegin: "[25, 33] (621)"
                                            IterEnd: "[26, 1] (622)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.LessEqual"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 25
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 26
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 25
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 25
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 25
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 25
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 25
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 33
                                                Line: 25
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 25
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 26
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 25
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 26
                                        IterBegin: "[25, 5] (593)"
                                        IterEnd: "[26, 1] (622)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[25, 5] (593)"
                                    IterEnd: "[26, 1] (622)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[25, 5] (593)"
                                IterEnd: "[26, 1] (622)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[26, 5] (626)"
                                                    IterEnd: "[26, 13] (634)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(626, 634), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[26, 5] (626)"
                                                IterEnd: "[26, 13] (634)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[26, 5] (626)"
                                            IterEnd: "[26, 13] (634)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[26, 14] (635)"
                                                        IterEnd: "[26, 17] (638)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(635, 638), match='Int'>"
                                                        Whitespace:
                                                          - 634
                                                          - 635
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 26
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 26
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 26
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 26
                                                    IterBegin: "[26, 14] (635)"
                                                    IterEnd: "[26, 17] (638)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[26, 14] (635)"
                                                IterEnd: "[26, 17] (638)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[26, 14] (635)"
                                            IterEnd: "[26, 17] (638)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[26, 18] (639)"
                                            IterEnd: "[26, 29] (650)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(639, 650), match='__Greater__'>"
                                            Whitespace:
                                              - 638
                                              - 639
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[26, 29] (650)"
                                                IterEnd: "[26, 30] (651)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(650, 651), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[26, 30] (651)"
                                                IterEnd: "[26, 31] (652)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(651, 652), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[26, 29] (650)"
                                            IterEnd: "[26, 31] (652)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[26, 31] (652)"
                                                IterEnd: "[27, 1] (653)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 653
                                                  Start: 652
                                                Whitespace: None
                                            IterBegin: "[26, 31] (652)"
                                            IterEnd: "[27, 1] (653)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Greater"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 26
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 27
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 26
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 26
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 26
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 26
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 26
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 26
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 26
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 27
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 26
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 27
                                        IterBegin: "[26, 5] (626)"
                                        IterEnd: "[27, 1] (653)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[26, 5] (626)"
                                    IterEnd: "[27, 1] (653)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[26, 5] (626)"
                                IterEnd: "[27, 1] (653)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[27, 5] (657)"
                                                    IterEnd: "[27, 13] (665)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(657, 665), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[27, 5] (657)"
                                                IterEnd: "[27, 13] (665)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[27, 5] (657)"
                                            IterEnd: "[27, 13] (665)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[27, 14] (666)"
                                                        IterEnd: "[27, 17] (669)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(666, 669), match='Int'>"
                                                        Whitespace:
                                                          - 665
                                                          - 666
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 27
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 27
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 27
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 27
                                                    IterBegin: "[27, 14] (666)"
                                                    IterEnd: "[27, 17] (669)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[27, 14] (666)"
                                                IterEnd: "[27, 17] (669)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[27, 14] (666)"
                                            IterEnd: "[27, 17] (669)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[27, 18] (670)"
                                            IterEnd: "[27, 34] (686)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(670, 686), match='__GreaterEqual__'>"
                                            Whitespace:
                                              - 669
                                              - 670
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[27, 34] (686)"
                                                IterEnd: "[27, 35] (687)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(686, 687), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[27, 35] (687)"
                                                IterEnd: "[27, 36] (688)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(687, 688), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[27, 34] (686)"
                                            IterEnd: "[27, 36] (688)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[27, 36] (688)"
                                                IterEnd: "[29, 1] (690)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 690
                                                  Start: 688
                                                Whitespace: None
                                            IterBegin: "[27, 36] (688)"
                                            IterEnd: "[29, 1] (690)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.GreaterEqual"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 27
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 29
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 27
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 27
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 27
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 27
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 27
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 36
                                                Line: 27
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 27
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 29
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 27
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 29
                                        IterBegin: "[27, 5] (657)"
                                        IterEnd: "[29, 1] (690)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[27, 5] (657)"
                                    IterEnd: "[29, 1] (690)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[27, 5] (657)"
                                IterEnd: "[29, 1] (690)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[29, 5] (694)"
                                                    IterEnd: "[29, 13] (702)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(694, 702), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[29, 5] (694)"
                                                IterEnd: "[29, 13] (702)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[29, 5] (694)"
                                            IterEnd: "[29, 13] (702)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[29, 14] (703)"
                                                        IterEnd: "[29, 17] (706)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(703, 706), match='Int'>"
                                                        Whitespace:
                                                          - 702
                                                          - 703
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 29
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 29
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 29
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 29
                                                    IterBegin: "[29, 14] (703)"
                                                    IterEnd: "[29, 17] (706)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[29, 14] (703)"
                                                IterEnd: "[29, 17] (706)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[29, 14] (703)"
                                            IterEnd: "[29, 17] (706)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[29, 18] (707)"
                                            IterEnd: "[29, 25] (714)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(707, 714), match='__And__'>"
                                            Whitespace:
                                              - 706
                                              - 707
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[29, 25] (714)"
                                                IterEnd: "[29, 26] (715)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(714, 715), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[29, 26] (715)"
                                                IterEnd: "[29, 27] (716)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(715, 716), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[29, 25] (714)"
                                            IterEnd: "[29, 27] (716)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[29, 27] (716)"
                                                IterEnd: "[30, 1] (717)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 717
                                                  Start: 716
                                                Whitespace: None
                                            IterBegin: "[29, 27] (716)"
                                            IterEnd: "[30, 1] (717)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.And"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 29
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 30
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 29
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 29
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 29
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 25
                                                Line: 29
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 25
                                                Line: 29
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 29
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 29
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 30
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 29
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 30
                                        IterBegin: "[29, 5] (694)"
                                        IterEnd: "[30, 1] (717)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[29, 5] (694)"
                                    IterEnd: "[30, 1] (717)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[29, 5] (694)"
                                IterEnd: "[30, 1] (717)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[30, 5] (721)"
                                                    IterEnd: "[30, 13] (729)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(721, 729), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[30, 5] (721)"
                                                IterEnd: "[30, 13] (729)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[30, 5] (721)"
                                            IterEnd: "[30, 13] (729)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[30, 14] (730)"
                                                        IterEnd: "[30, 17] (733)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(730, 733), match='Int'>"
                                                        Whitespace:
                                                          - 729
                                                          - 730
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 30
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 30
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 30
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 30
                                                    IterBegin: "[30, 14] (730)"
                                                    IterEnd: "[30, 17] (733)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[30, 14] (730)"
                                                IterEnd: "[30, 17] (733)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[30, 14] (730)"
                                            IterEnd: "[30, 17] (733)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[30, 18] (734)"
                                            IterEnd: "[30, 24] (740)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(734, 740), match='__Or__'>"
                                            Whitespace:
                                              - 733
                                              - 734
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[30, 24] (740)"
                                                IterEnd: "[30, 25] (741)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(740, 741), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[30, 25] (741)"
                                                IterEnd: "[30, 26] (742)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(741, 742), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[30, 24] (740)"
                                            IterEnd: "[30, 26] (742)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[30, 26] (742)"
                                                IterEnd: "[31, 1] (743)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 743
                                                  Start: 742
                                                Whitespace: None
                                            IterBegin: "[30, 26] (742)"
                                            IterEnd: "[31, 1] (743)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Or"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 30
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 31
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 30
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 30
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 30
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 24
                                                Line: 30
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 24
                                                Line: 30
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 26
                                                Line: 30
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 30
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 31
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 30
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 31
                                        IterBegin: "[30, 5] (721)"
                                        IterEnd: "[31, 1] (743)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[30, 5] (721)"
                                    IterEnd: "[31, 1] (743)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[30, 5] (721)"
                                IterEnd: "[31, 1] (743)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[31, 5] (747)"
                                                    IterEnd: "[31, 13] (755)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(747, 755), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[31, 5] (747)"
                                                IterEnd: "[31, 13] (755)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[31, 5] (747)"
                                            IterEnd: "[31, 13] (755)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[31, 14] (756)"
                                                        IterEnd: "[31, 17] (759)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(756, 759), match='Int'>"
                                                        Whitespace:
                                                          - 755
                                                          - 756
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 31
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 31
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 31
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 31
                                                    IterBegin: "[31, 14] (756)"
                                                    IterEnd: "[31, 17] (759)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[31, 14] (756)"
                                                IterEnd: "[31, 17] (759)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[31, 14] (756)"
                                            IterEnd: "[31, 17] (759)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[31, 18] (760)"
                                            IterEnd: "[31, 25] (767)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(760, 767), match='__Not__'>"
                                            Whitespace:
                                              - 759
                                              - 760
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[31, 25] (767)"
                                                IterEnd: "[31, 26] (768)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(767, 768), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[31, 26] (768)"
                                                IterEnd: "[31, 27] (769)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(768, 769), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[31, 25] (767)"
                                            IterEnd: "[31, 27] (769)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[31, 27] (769)"
                                                IterEnd: "[33, 1] (771)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 771
                                                  Start: 769
                                                Whitespace: None
                                            IterBegin: "[31, 27] (769)"
                                            IterEnd: "[33, 1] (771)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Not"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 31
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 33
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 31
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 31
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 31
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 25
                                                Line: 31
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 25
                                                Line: 31
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 31
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 31
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 33
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 31
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 33
                                        IterBegin: "[31, 5] (747)"
                                        IterEnd: "[33, 1] (771)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[31, 5] (747)"
                                    IterEnd: "[33, 1] (771)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[31, 5] (747)"
                                IterEnd: "[33, 1] (771)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[33, 5] (775)"
                                                    IterEnd: "[33, 13] (783)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(775, 783), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[33, 5] (775)"
                                                IterEnd: "[33, 13] (783)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[33, 5] (775)"
                                            IterEnd: "[33, 13] (783)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[33, 14] (784)"
                                                        IterEnd: "[33, 17] (787)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(784, 787), match='Int'>"
                                                        Whitespace:
                                                          - 783
                                                          - 784
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 33
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 33
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 33
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 33
                                                    IterBegin: "[33, 14] (784)"
                                                    IterEnd: "[33, 17] (787)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[33, 14] (784)"
                                                IterEnd: "[33, 17] (787)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[33, 14] (784)"
                                            IterEnd: "[33, 17] (787)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[33, 18] (788)"
                                            IterEnd: "[33, 25] (795)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(788, 795), match='__Add__'>"
                                            Whitespace:
                                              - 787
                                              - 788
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[33, 25] (795)"
                                                IterEnd: "[33, 26] (796)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(795, 796), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[33, 26] (796)"
                                                IterEnd: "[33, 27] (797)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(796, 797), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[33, 25] (795)"
                                            IterEnd: "[33, 27] (797)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[33, 27] (797)"
                                                IterEnd: "[34, 1] (798)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 798
                                                  Start: 797
                                                Whitespace: None
                                            IterBegin: "[33, 27] (797)"
                                            IterEnd: "[34, 1] (798)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Add"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 33
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 34
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 33
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 33
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 33
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 25
                                                Line: 33
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 25
                                                Line: 33
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 33
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 33
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 34
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 33
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 34
                                        IterBegin: "[33, 5] (775)"
                                        IterEnd: "[34, 1] (798)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[33, 5] (775)"
                                    IterEnd: "[34, 1] (798)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[33, 5] (775)"
                                IterEnd: "[34, 1] (798)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[34, 5] (802)"
                                                    IterEnd: "[34, 13] (810)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(802, 810), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[34, 5] (802)"
                                                IterEnd: "[34, 13] (810)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[34, 5] (802)"
                                            IterEnd: "[34, 13] (810)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[34, 14] (811)"
                                                        IterEnd: "[34, 17] (814)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(811, 814), match='Int'>"
                                                        Whitespace:
                                                          - 810
                                                          - 811
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 34
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 34
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 34
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 34
                                                    IterBegin: "[34, 14] (811)"
                                                    IterEnd: "[34, 17] (814)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[34, 14] (811)"
                                                IterEnd: "[34, 17] (814)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[34, 14] (811)"
                                            IterEnd: "[34, 17] (814)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[34, 18] (815)"
                                            IterEnd: "[34, 30] (827)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(815, 827), match='__Subtract__'>"
                                            Whitespace:
                                              - 814
                                              - 815
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[34, 30] (827)"
                                                IterEnd: "[34, 31] (828)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(827, 828), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[34, 31] (828)"
                                                IterEnd: "[34, 32] (829)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(828, 829), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[34, 30] (827)"
                                            IterEnd: "[34, 32] (829)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[34, 32] (829)"
                                                IterEnd: "[35, 1] (830)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 830
                                                  Start: 829
                                                Whitespace: None
                                            IterBegin: "[34, 32] (829)"
                                            IterEnd: "[35, 1] (830)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Subtract"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 34
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 35
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 34
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 34
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 34
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 34
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 34
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 34
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 34
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 35
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 34
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 35
                                        IterBegin: "[34, 5] (802)"
                                        IterEnd: "[35, 1] (830)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[34, 5] (802)"
                                    IterEnd: "[35, 1] (830)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[34, 5] (802)"
                                IterEnd: "[35, 1] (830)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[35, 5] (834)"
                                                    IterEnd: "[35, 13] (842)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(834, 842), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[35, 5] (834)"
                                                IterEnd: "[35, 13] (842)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[35, 5] (834)"
                                            IterEnd: "[35, 13] (842)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[35, 14] (843)"
                                                        IterEnd: "[35, 17] (846)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(843, 846), match='Int'>"
                                                        Whitespace:
                                                          - 842
                                                          - 843
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 35
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 35
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 35
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 35
                                                    IterBegin: "[35, 14] (843)"
                                                    IterEnd: "[35, 17] (846)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[35, 14] (843)"
                                                IterEnd: "[35, 17] (846)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[35, 14] (843)"
                                            IterEnd: "[35, 17] (846)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[35, 18] (847)"
                                            IterEnd: "[35, 30] (859)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(847, 859), match='__Multiply__'>"
                                            Whitespace:
                                              - 846
                                              - 847
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[35, 30] (859)"
                                                IterEnd: "[35, 31] (860)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(859, 860), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[35, 31] (860)"
                                                IterEnd: "[35, 32] (861)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(860, 861), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[35, 30] (859)"
                                            IterEnd: "[35, 32] (861)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[35, 32] (861)"
                                                IterEnd: "[36, 1] (862)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 862
                                                  Start: 861
                                                Whitespace: None
                                            IterBegin: "[35, 32] (861)"
                                            IterEnd: "[36, 1] (862)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Multiply"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 35
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 36
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 35
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 35
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 35
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 35
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 35
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 35
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 35
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 36
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 35
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 36
                                        IterBegin: "[35, 5] (834)"
                                        IterEnd: "[36, 1] (862)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[35, 5] (834)"
                                    IterEnd: "[36, 1] (862)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[35, 5] (834)"
                                IterEnd: "[36, 1] (862)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[36, 5] (866)"
                                                    IterEnd: "[36, 13] (874)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(866, 874), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[36, 5] (866)"
                                                IterEnd: "[36, 13] (874)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[36, 5] (866)"
                                            IterEnd: "[36, 13] (874)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[36, 14] (875)"
                                                        IterEnd: "[36, 17] (878)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(875, 878), match='Int'>"
                                                        Whitespace:
                                                          - 874
                                                          - 875
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 36
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 36
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 36
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 36
                                                    IterBegin: "[36, 14] (875)"
                                                    IterEnd: "[36, 17] (878)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[36, 14] (875)"
                                                IterEnd: "[36, 17] (878)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[36, 14] (875)"
                                            IterEnd: "[36, 17] (878)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[36, 18] (879)"
                                            IterEnd: "[36, 28] (889)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(879, 889), match='__Divide__'>"
                                            Whitespace:
                                              - 878
                                              - 879
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[36, 28] (889)"
                                                IterEnd: "[36, 29] (890)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(889, 890), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[36, 29] (890)"
                                                IterEnd: "[36, 30] (891)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(890, 891), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[36, 28] (889)"
                                            IterEnd: "[36, 30] (891)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[36, 30] (891)"
                                                IterEnd: "[37, 1] (892)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 892
                                                  Start: 891
                                                Whitespace: None
                                            IterBegin: "[36, 30] (891)"
                                            IterEnd: "[37, 1] (892)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Divide"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 36
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 37
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 36
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 36
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 36
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 36
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 36
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 36
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 36
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 37
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 36
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 37
                                        IterBegin: "[36, 5] (866)"
                                        IterEnd: "[37, 1] (892)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[36, 5] (866)"
                                    IterEnd: "[37, 1] (892)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[36, 5] (866)"
                                IterEnd: "[37, 1] (892)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[37, 5] (896)"
                                                    IterEnd: "[37, 13] (904)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(896, 904), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[37, 5] (896)"
                                                IterEnd: "[37, 13] (904)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[37, 5] (896)"
                                            IterEnd: "[37, 13] (904)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[37, 14] (905)"
                                                        IterEnd: "[37, 17] (908)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(905, 908), match='Int'>"
                                                        Whitespace:
                                                          - 904
                                                          - 905
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 37
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 37
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 37
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 37
                                                    IterBegin: "[37, 14] (905)"
                                                    IterEnd: "[37, 17] (908)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[37, 14] (905)"
                                                IterEnd: "[37, 17] (908)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[37, 14] (905)"
                                            IterEnd: "[37, 17] (908)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[37, 18] (909)"
                                            IterEnd: "[37, 33] (924)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(909, 924), match='__DivideFloor__'>"
                                            Whitespace:
                                              - 908
                                              - 909
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[37, 33] (924)"
                                                IterEnd: "[37, 34] (925)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(924, 925), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[37, 34] (925)"
                                                IterEnd: "[37, 35] (926)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(925, 926), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[37, 33] (924)"
                                            IterEnd: "[37, 35] (926)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[37, 35] (926)"
                                                IterEnd: "[38, 1] (927)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 927
                                                  Start: 926
                                                Whitespace: None
                                            IterBegin: "[37, 35] (926)"
                                            IterEnd: "[38, 1] (927)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.DivideFloor"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 37
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 38
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 37
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 37
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 37
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 33
                                                Line: 37
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 33
                                                Line: 37
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 35
                                                Line: 37
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 37
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 38
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 37
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 38
                                        IterBegin: "[37, 5] (896)"
                                        IterEnd: "[38, 1] (927)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[37, 5] (896)"
                                    IterEnd: "[38, 1] (927)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[37, 5] (896)"
                                IterEnd: "[38, 1] (927)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[38, 5] (931)"
                                                    IterEnd: "[38, 13] (939)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(931, 939), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[38, 5] (931)"
                                                IterEnd: "[38, 13] (939)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[38, 5] (931)"
                                            IterEnd: "[38, 13] (939)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[38, 14] (940)"
                                                        IterEnd: "[38, 17] (943)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(940, 943), match='Int'>"
                                                        Whitespace:
                                                          - 939
                                                          - 940
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 38
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 38
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 38
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 38
                                                    IterBegin: "[38, 14] (940)"
                                                    IterEnd: "[38, 17] (943)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[38, 14] (940)"
                                                IterEnd: "[38, 17] (943)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[38, 14] (940)"
                                            IterEnd: "[38, 17] (943)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[38, 18] (944)"
                                            IterEnd: "[38, 27] (953)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(944, 953), match='__Power__'>"
                                            Whitespace:
                                              - 943
                                              - 944
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[38, 27] (953)"
                                                IterEnd: "[38, 28] (954)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(953, 954), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[38, 28] (954)"
                                                IterEnd: "[38, 29] (955)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(954, 955), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[38, 27] (953)"
                                            IterEnd: "[38, 29] (955)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[38, 29] (955)"
                                                IterEnd: "[39, 1] (956)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 956
                                                  Start: 955
                                                Whitespace: None
                                            IterBegin: "[38, 29] (955)"
                                            IterEnd: "[39, 1] (956)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Power"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 38
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 39
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 38
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 38
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 38
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 38
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 38
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 38
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 38
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 39
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 38
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 39
                                        IterBegin: "[38, 5] (931)"
                                        IterEnd: "[39, 1] (956)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[38, 5] (931)"
                                    IterEnd: "[39, 1] (956)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[38, 5] (931)"
                                IterEnd: "[39, 1] (956)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[39, 5] (960)"
                                                    IterEnd: "[39, 13] (968)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(960, 968), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[39, 5] (960)"
                                                IterEnd: "[39, 13] (968)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[39, 5] (960)"
                                            IterEnd: "[39, 13] (968)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[39, 14] (969)"
                                                        IterEnd: "[39, 17] (972)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(969, 972), match='Int'>"
                                                        Whitespace:
                                                          - 968
                                                          - 969
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 39
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 39
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 39
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 39
                                                    IterBegin: "[39, 14] (969)"
                                                    IterEnd: "[39, 17] (972)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[39, 14] (969)"
                                                IterEnd: "[39, 17] (972)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[39, 14] (969)"
                                            IterEnd: "[39, 17] (972)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[39, 18] (973)"
                                            IterEnd: "[39, 25] (980)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(973, 980), match='__Mod__'>"
                                            Whitespace:
                                              - 972
                                              - 973
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[39, 25] (980)"
                                                IterEnd: "[39, 26] (981)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(980, 981), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[39, 26] (981)"
                                                IterEnd: "[39, 27] (982)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(981, 982), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[39, 25] (980)"
                                            IterEnd: "[39, 27] (982)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[39, 27] (982)"
                                                IterEnd: "[40, 1] (983)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 983
                                                  Start: 982
                                                Whitespace: None
                                            IterBegin: "[39, 27] (982)"
                                            IterEnd: "[40, 1] (983)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Mod"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 39
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 40
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 39
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 39
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 39
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 25
                                                Line: 39
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 25
                                                Line: 39
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 39
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 39
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 40
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 39
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 40
                                        IterBegin: "[39, 5] (960)"
                                        IterEnd: "[40, 1] (983)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[39, 5] (960)"
                                    IterEnd: "[40, 1] (983)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[39, 5] (960)"
                                IterEnd: "[40, 1] (983)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[40, 5] (987)"
                                                    IterEnd: "[40, 13] (995)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(987, 995), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[40, 5] (987)"
                                                IterEnd: "[40, 13] (995)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[40, 5] (987)"
                                            IterEnd: "[40, 13] (995)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[40, 14] (996)"
                                                        IterEnd: "[40, 17] (999)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(996, 999), match='Int'>"
                                                        Whitespace:
                                                          - 995
                                                          - 996
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 40
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 40
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 40
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 40
                                                    IterBegin: "[40, 14] (996)"
                                                    IterEnd: "[40, 17] (999)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[40, 14] (996)"
                                                IterEnd: "[40, 17] (999)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[40, 14] (996)"
                                            IterEnd: "[40, 17] (999)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[40, 18] (1000)"
                                            IterEnd: "[40, 30] (1012)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1000, 1012), match='__Positive__'>"
                                            Whitespace:
                                              - 999
                                              - 1000
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[40, 30] (1012)"
                                                IterEnd: "[40, 31] (1013)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1012, 1013), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[40, 31] (1013)"
                                                IterEnd: "[40, 32] (1014)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1013, 1014), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[40, 30] (1012)"
                                            IterEnd: "[40, 32] (1014)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[40, 32] (1014)"
                                                IterEnd: "[41, 1] (1015)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1015
                                                  Start: 1014
                                                Whitespace: None
                                            IterBegin: "[40, 32] (1014)"
                                            IterEnd: "[41, 1] (1015)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Positive"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 40
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 41
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 40
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 40
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 40
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 40
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 40
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 40
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 40
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 41
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 40
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 41
                                        IterBegin: "[40, 5] (987)"
                                        IterEnd: "[41, 1] (1015)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[40, 5] (987)"
                                    IterEnd: "[41, 1] (1015)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[40, 5] (987)"
                                IterEnd: "[41, 1] (1015)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[41, 5] (1019)"
                                                    IterEnd: "[41, 13] (1027)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1019, 1027), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[41, 5] (1019)"
                                                IterEnd: "[41, 13] (1027)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[41, 5] (1019)"
                                            IterEnd: "[41, 13] (1027)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[41, 14] (1028)"
                                                        IterEnd: "[41, 17] (1031)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1028, 1031), match='Int'>"
                                                        Whitespace:
                                                          - 1027
                                                          - 1028
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 41
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 41
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 41
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 41
                                                    IterBegin: "[41, 14] (1028)"
                                                    IterEnd: "[41, 17] (1031)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[41, 14] (1028)"
                                                IterEnd: "[41, 17] (1031)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[41, 14] (1028)"
                                            IterEnd: "[41, 17] (1031)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[41, 18] (1032)"
                                            IterEnd: "[41, 30] (1044)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1032, 1044), match='__Negative__'>"
                                            Whitespace:
                                              - 1031
                                              - 1032
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[41, 30] (1044)"
                                                IterEnd: "[41, 31] (1045)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1044, 1045), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[41, 31] (1045)"
                                                IterEnd: "[41, 32] (1046)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1045, 1046), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[41, 30] (1044)"
                                            IterEnd: "[41, 32] (1046)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[41, 32] (1046)"
                                                IterEnd: "[43, 1] (1048)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1048
                                                  Start: 1046
                                                Whitespace: None
                                            IterBegin: "[41, 32] (1046)"
                                            IterEnd: "[43, 1] (1048)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.Negative"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 41
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 43
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 41
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 41
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 41
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 41
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 41
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 41
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 41
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 43
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 41
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 43
                                        IterBegin: "[41, 5] (1019)"
                                        IterEnd: "[43, 1] (1048)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[41, 5] (1019)"
                                    IterEnd: "[43, 1] (1048)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[41, 5] (1019)"
                                IterEnd: "[43, 1] (1048)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[43, 5] (1052)"
                                                    IterEnd: "[43, 13] (1060)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1052, 1060), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[43, 5] (1052)"
                                                IterEnd: "[43, 13] (1060)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[43, 5] (1052)"
                                            IterEnd: "[43, 13] (1060)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[43, 14] (1061)"
                                                        IterEnd: "[43, 17] (1064)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1061, 1064), match='Int'>"
                                                        Whitespace:
                                                          - 1060
                                                          - 1061
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 43
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 43
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 43
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 43
                                                    IterBegin: "[43, 14] (1061)"
                                                    IterEnd: "[43, 17] (1064)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[43, 14] (1061)"
                                                IterEnd: "[43, 17] (1064)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[43, 14] (1061)"
                                            IterEnd: "[43, 17] (1064)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[43, 18] (1065)"
                                            IterEnd: "[43, 32] (1079)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1065, 1079), match='__AddInplace__'>"
                                            Whitespace:
                                              - 1064
                                              - 1065
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[43, 32] (1079)"
                                                IterEnd: "[43, 33] (1080)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1079, 1080), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[43, 33] (1080)"
                                                IterEnd: "[43, 34] (1081)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1080, 1081), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[43, 32] (1079)"
                                            IterEnd: "[43, 34] (1081)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[43, 34] (1081)"
                                                IterEnd: "[44, 1] (1082)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1082
                                                  Start: 1081
                                                Whitespace: None
                                            IterBegin: "[43, 34] (1081)"
                                            IterEnd: "[44, 1] (1082)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.AddInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 43
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 44
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 43
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 43
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 43
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 43
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 43
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 43
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 43
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 44
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 43
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 44
                                        IterBegin: "[43, 5] (1052)"
                                        IterEnd: "[44, 1] (1082)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[43, 5] (1052)"
                                    IterEnd: "[44, 1] (1082)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[43, 5] (1052)"
                                IterEnd: "[44, 1] (1082)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[44, 5] (1086)"
                                                    IterEnd: "[44, 13] (1094)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1086, 1094), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[44, 5] (1086)"
                                                IterEnd: "[44, 13] (1094)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[44, 5] (1086)"
                                            IterEnd: "[44, 13] (1094)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[44, 14] (1095)"
                                                        IterEnd: "[44, 17] (1098)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1095, 1098), match='Int'>"
                                                        Whitespace:
                                                          - 1094
                                                          - 1095
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 44
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 44
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 44
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 44
                                                    IterBegin: "[44, 14] (1095)"
                                                    IterEnd: "[44, 17] (1098)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[44, 14] (1095)"
                                                IterEnd: "[44, 17] (1098)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[44, 14] (1095)"
                                            IterEnd: "[44, 17] (1098)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[44, 18] (1099)"
                                            IterEnd: "[44, 37] (1118)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1099, 1118), match='__SubtractInplace__'>"
                                            Whitespace:
                                              - 1098
                                              - 1099
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[44, 37] (1118)"
                                                IterEnd: "[44, 38] (1119)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1118, 1119), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[44, 38] (1119)"
                                                IterEnd: "[44, 39] (1120)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1119, 1120), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[44, 37] (1118)"
                                            IterEnd: "[44, 39] (1120)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[44, 39] (1120)"
                                                IterEnd: "[45, 1] (1121)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1121
                                                  Start: 1120
                                                Whitespace: None
                                            IterBegin: "[44, 39] (1120)"
                                            IterEnd: "[45, 1] (1121)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.SubtractInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 44
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 45
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 44
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 44
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 44
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 37
                                                Line: 44
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 37
                                                Line: 44
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 39
                                                Line: 44
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 44
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 45
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 44
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 45
                                        IterBegin: "[44, 5] (1086)"
                                        IterEnd: "[45, 1] (1121)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[44, 5] (1086)"
                                    IterEnd: "[45, 1] (1121)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[44, 5] (1086)"
                                IterEnd: "[45, 1] (1121)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[45, 5] (1125)"
                                                    IterEnd: "[45, 13] (1133)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1125, 1133), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[45, 5] (1125)"
                                                IterEnd: "[45, 13] (1133)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[45, 5] (1125)"
                                            IterEnd: "[45, 13] (1133)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[45, 14] (1134)"
                                                        IterEnd: "[45, 17] (1137)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1134, 1137), match='Int'>"
                                                        Whitespace:
                                                          - 1133
                                                          - 1134
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 45
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 45
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 45
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 45
                                                    IterBegin: "[45, 14] (1134)"
                                                    IterEnd: "[45, 17] (1137)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[45, 14] (1134)"
                                                IterEnd: "[45, 17] (1137)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[45, 14] (1134)"
                                            IterEnd: "[45, 17] (1137)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[45, 18] (1138)"
                                            IterEnd: "[45, 37] (1157)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1138, 1157), match='__MultiplyInplace__'>"
                                            Whitespace:
                                              - 1137
                                              - 1138
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[45, 37] (1157)"
                                                IterEnd: "[45, 38] (1158)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1157, 1158), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[45, 38] (1158)"
                                                IterEnd: "[45, 39] (1159)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1158, 1159), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[45, 37] (1157)"
                                            IterEnd: "[45, 39] (1159)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[45, 39] (1159)"
                                                IterEnd: "[46, 1] (1160)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1160
                                                  Start: 1159
                                                Whitespace: None
                                            IterBegin: "[45, 39] (1159)"
                                            IterEnd: "[46, 1] (1160)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.MultiplyInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 45
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 46
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 45
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 45
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 45
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 37
                                                Line: 45
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 37
                                                Line: 45
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 39
                                                Line: 45
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 45
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 46
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 45
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 46
                                        IterBegin: "[45, 5] (1125)"
                                        IterEnd: "[46, 1] (1160)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[45, 5] (1125)"
                                    IterEnd: "[46, 1] (1160)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[45, 5] (1125)"
                                IterEnd: "[46, 1] (1160)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[46, 5] (1164)"
                                                    IterEnd: "[46, 13] (1172)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1164, 1172), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[46, 5] (1164)"
                                                IterEnd: "[46, 13] (1172)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[46, 5] (1164)"
                                            IterEnd: "[46, 13] (1172)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[46, 14] (1173)"
                                                        IterEnd: "[46, 17] (1176)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1173, 1176), match='Int'>"
                                                        Whitespace:
                                                          - 1172
                                                          - 1173
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 46
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 46
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 46
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 46
                                                    IterBegin: "[46, 14] (1173)"
                                                    IterEnd: "[46, 17] (1176)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[46, 14] (1173)"
                                                IterEnd: "[46, 17] (1176)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[46, 14] (1173)"
                                            IterEnd: "[46, 17] (1176)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[46, 18] (1177)"
                                            IterEnd: "[46, 35] (1194)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1177, 1194), match='__DivideInplace__'>"
                                            Whitespace:
                                              - 1176
                                              - 1177
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[46, 35] (1194)"
                                                IterEnd: "[46, 36] (1195)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1194, 1195), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[46, 36] (1195)"
                                                IterEnd: "[46, 37] (1196)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1195, 1196), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[46, 35] (1194)"
                                            IterEnd: "[46, 37] (1196)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[46, 37] (1196)"
                                                IterEnd: "[47, 1] (1197)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1197
                                                  Start: 1196
                                                Whitespace: None
                                            IterBegin: "[46, 37] (1196)"
                                            IterEnd: "[47, 1] (1197)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.DivideInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 46
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 47
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 46
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 46
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 46
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 35
                                                Line: 46
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 35
                                                Line: 46
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 37
                                                Line: 46
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 46
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 47
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 46
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 47
                                        IterBegin: "[46, 5] (1164)"
                                        IterEnd: "[47, 1] (1197)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[46, 5] (1164)"
                                    IterEnd: "[47, 1] (1197)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[46, 5] (1164)"
                                IterEnd: "[47, 1] (1197)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[47, 5] (1201)"
                                                    IterEnd: "[47, 13] (1209)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1201, 1209), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[47, 5] (1201)"
                                                IterEnd: "[47, 13] (1209)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[47, 5] (1201)"
                                            IterEnd: "[47, 13] (1209)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[47, 14] (1210)"
                                                        IterEnd: "[47, 17] (1213)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1210, 1213), match='Int'>"
                                                        Whitespace:
                                                          - 1209
                                                          - 1210
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 47
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 47
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 47
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 47
                                                    IterBegin: "[47, 14] (1210)"
                                                    IterEnd: "[47, 17] (1213)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[47, 14] (1210)"
                                                IterEnd: "[47, 17] (1213)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[47, 14] (1210)"
                                            IterEnd: "[47, 17] (1213)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[47, 18] (1214)"
                                            IterEnd: "[47, 40] (1236)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1214, 1236), match='__DivideFloorInplace__'>"
                                            Whitespace:
                                              - 1213
                                              - 1214
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[47, 40] (1236)"
                                                IterEnd: "[47, 41] (1237)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1236, 1237), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[47, 41] (1237)"
                                                IterEnd: "[47, 42] (1238)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1237, 1238), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[47, 40] (1236)"
                                            IterEnd: "[47, 42] (1238)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[47, 42] (1238)"
                                                IterEnd: "[48, 1] (1239)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1239
                                                  Start: 1238
                                                Whitespace: None
                                            IterBegin: "[47, 42] (1238)"
                                            IterEnd: "[48, 1] (1239)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.DivideFloorInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 47
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 48
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 47
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 47
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 47
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 40
                                                Line: 47
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 40
                                                Line: 47
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 42
                                                Line: 47
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 47
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 48
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 47
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 48
                                        IterBegin: "[47, 5] (1201)"
                                        IterEnd: "[48, 1] (1239)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[47, 5] (1201)"
                                    IterEnd: "[48, 1] (1239)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[47, 5] (1201)"
                                IterEnd: "[48, 1] (1239)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[48, 5] (1243)"
                                                    IterEnd: "[48, 13] (1251)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1243, 1251), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[48, 5] (1243)"
                                                IterEnd: "[48, 13] (1251)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[48, 5] (1243)"
                                            IterEnd: "[48, 13] (1251)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[48, 14] (1252)"
                                                        IterEnd: "[48, 17] (1255)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1252, 1255), match='Int'>"
                                                        Whitespace:
                                                          - 1251
                                                          - 1252
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 48
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 48
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 48
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 48
                                                    IterBegin: "[48, 14] (1252)"
                                                    IterEnd: "[48, 17] (1255)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[48, 14] (1252)"
                                                IterEnd: "[48, 17] (1255)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[48, 14] (1252)"
                                            IterEnd: "[48, 17] (1255)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[48, 18] (1256)"
                                            IterEnd: "[48, 34] (1272)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1256, 1272), match='__PowerInplace__'>"
                                            Whitespace:
                                              - 1255
                                              - 1256
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[48, 34] (1272)"
                                                IterEnd: "[48, 35] (1273)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1272, 1273), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[48, 35] (1273)"
                                                IterEnd: "[48, 36] (1274)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1273, 1274), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[48, 34] (1272)"
                                            IterEnd: "[48, 36] (1274)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[48, 36] (1274)"
                                                IterEnd: "[49, 1] (1275)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1275
                                                  Start: 1274
                                                Whitespace: None
                                            IterBegin: "[48, 36] (1274)"
                                            IterEnd: "[49, 1] (1275)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.PowerInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 48
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 49
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 48
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 48
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 48
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 48
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 48
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 36
                                                Line: 48
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 48
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 49
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 48
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 49
                                        IterBegin: "[48, 5] (1243)"
                                        IterEnd: "[49, 1] (1275)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[48, 5] (1243)"
                                    IterEnd: "[49, 1] (1275)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[48, 5] (1243)"
                                IterEnd: "[49, 1] (1275)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[49, 5] (1279)"
                                                    IterEnd: "[49, 13] (1287)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1279, 1287), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[49, 5] (1279)"
                                                IterEnd: "[49, 13] (1287)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[49, 5] (1279)"
                                            IterEnd: "[49, 13] (1287)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[49, 14] (1288)"
                                                        IterEnd: "[49, 17] (1291)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1288, 1291), match='Int'>"
                                                        Whitespace:
                                                          - 1287
                                                          - 1288
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 49
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 49
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 49
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 49
                                                    IterBegin: "[49, 14] (1288)"
                                                    IterEnd: "[49, 17] (1291)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[49, 14] (1288)"
                                                IterEnd: "[49, 17] (1291)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[49, 14] (1288)"
                                            IterEnd: "[49, 17] (1291)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[49, 18] (1292)"
                                            IterEnd: "[49, 32] (1306)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1292, 1306), match='__ModInplace__'>"
                                            Whitespace:
                                              - 1291
                                              - 1292
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[49, 32] (1306)"
                                                IterEnd: "[49, 33] (1307)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1306, 1307), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[49, 33] (1307)"
                                                IterEnd: "[49, 34] (1308)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1307, 1308), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[49, 32] (1306)"
                                            IterEnd: "[49, 34] (1308)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[49, 34] (1308)"
                                                IterEnd: "[51, 1] (1310)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1310
                                                  Start: 1308
                                                Whitespace: None
                                            IterBegin: "[49, 34] (1308)"
                                            IterEnd: "[51, 1] (1310)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.ModInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 49
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 51
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 49
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 49
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 49
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 49
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 49
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 49
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 49
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 51
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 49
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 51
                                        IterBegin: "[49, 5] (1279)"
                                        IterEnd: "[51, 1] (1310)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[49, 5] (1279)"
                                    IterEnd: "[51, 1] (1310)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[49, 5] (1279)"
                                IterEnd: "[51, 1] (1310)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[51, 5] (1314)"
                                                    IterEnd: "[51, 13] (1322)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1314, 1322), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[51, 5] (1314)"
                                                IterEnd: "[51, 13] (1322)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[51, 5] (1314)"
                                            IterEnd: "[51, 13] (1322)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[51, 14] (1323)"
                                                        IterEnd: "[51, 17] (1326)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1323, 1326), match='Int'>"
                                                        Whitespace:
                                                          - 1322
                                                          - 1323
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 51
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 51
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 51
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 51
                                                    IterBegin: "[51, 14] (1323)"
                                                    IterEnd: "[51, 17] (1326)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[51, 14] (1323)"
                                                IterEnd: "[51, 17] (1326)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[51, 14] (1323)"
                                            IterEnd: "[51, 17] (1326)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[51, 18] (1327)"
                                            IterEnd: "[51, 31] (1340)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1327, 1340), match='__ShiftLeft__'>"
                                            Whitespace:
                                              - 1326
                                              - 1327
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[51, 31] (1340)"
                                                IterEnd: "[51, 32] (1341)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1340, 1341), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[51, 32] (1341)"
                                                IterEnd: "[51, 33] (1342)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1341, 1342), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[51, 31] (1340)"
                                            IterEnd: "[51, 33] (1342)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[51, 33] (1342)"
                                                IterEnd: "[52, 1] (1343)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1343
                                                  Start: 1342
                                                Whitespace: None
                                            IterBegin: "[51, 33] (1342)"
                                            IterEnd: "[52, 1] (1343)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.ShiftLeft"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 51
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 52
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 51
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 51
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 51
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 51
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 51
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 33
                                                Line: 51
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 51
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 52
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 51
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 52
                                        IterBegin: "[51, 5] (1314)"
                                        IterEnd: "[52, 1] (1343)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[51, 5] (1314)"
                                    IterEnd: "[52, 1] (1343)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[51, 5] (1314)"
                                IterEnd: "[52, 1] (1343)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[52, 5] (1347)"
                                                    IterEnd: "[52, 13] (1355)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1347, 1355), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[52, 5] (1347)"
                                                IterEnd: "[52, 13] (1355)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[52, 5] (1347)"
                                            IterEnd: "[52, 13] (1355)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[52, 14] (1356)"
                                                        IterEnd: "[52, 17] (1359)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1356, 1359), match='Int'>"
                                                        Whitespace:
                                                          - 1355
                                                          - 1356
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 52
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 52
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 52
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 52
                                                    IterBegin: "[52, 14] (1356)"
                                                    IterEnd: "[52, 17] (1359)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[52, 14] (1356)"
                                                IterEnd: "[52, 17] (1359)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[52, 14] (1356)"
                                            IterEnd: "[52, 17] (1359)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[52, 18] (1360)"
                                            IterEnd: "[52, 32] (1374)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1360, 1374), match='__ShiftRight__'>"
                                            Whitespace:
                                              - 1359
                                              - 1360
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[52, 32] (1374)"
                                                IterEnd: "[52, 33] (1375)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1374, 1375), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[52, 33] (1375)"
                                                IterEnd: "[52, 34] (1376)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1375, 1376), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[52, 32] (1374)"
                                            IterEnd: "[52, 34] (1376)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[52, 34] (1376)"
                                                IterEnd: "[53, 1] (1377)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1377
                                                  Start: 1376
                                                Whitespace: None
                                            IterBegin: "[52, 34] (1376)"
                                            IterEnd: "[53, 1] (1377)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.ShiftRight"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 52
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 53
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 52
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 52
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 52
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 52
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 32
                                                Line: 52
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 52
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 52
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 53
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 52
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 53
                                        IterBegin: "[52, 5] (1347)"
                                        IterEnd: "[53, 1] (1377)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[52, 5] (1347)"
                                    IterEnd: "[53, 1] (1377)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[52, 5] (1347)"
                                IterEnd: "[53, 1] (1377)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[53, 5] (1381)"
                                                    IterEnd: "[53, 13] (1389)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1381, 1389), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[53, 5] (1381)"
                                                IterEnd: "[53, 13] (1389)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[53, 5] (1381)"
                                            IterEnd: "[53, 13] (1389)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[53, 14] (1390)"
                                                        IterEnd: "[53, 17] (1393)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1390, 1393), match='Int'>"
                                                        Whitespace:
                                                          - 1389
                                                          - 1390
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 53
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 53
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 53
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 53
                                                    IterBegin: "[53, 14] (1390)"
                                                    IterEnd: "[53, 17] (1393)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[53, 14] (1390)"
                                                IterEnd: "[53, 17] (1393)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[53, 14] (1390)"
                                            IterEnd: "[53, 17] (1393)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[53, 18] (1394)"
                                            IterEnd: "[53, 28] (1404)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1394, 1404), match='__BitAnd__'>"
                                            Whitespace:
                                              - 1393
                                              - 1394
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[53, 28] (1404)"
                                                IterEnd: "[53, 29] (1405)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1404, 1405), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[53, 29] (1405)"
                                                IterEnd: "[53, 30] (1406)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1405, 1406), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[53, 28] (1404)"
                                            IterEnd: "[53, 30] (1406)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[53, 30] (1406)"
                                                IterEnd: "[54, 1] (1407)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1407
                                                  Start: 1406
                                                Whitespace: None
                                            IterBegin: "[53, 30] (1406)"
                                            IterEnd: "[54, 1] (1407)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.BitAnd"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 53
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 54
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 53
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 53
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 53
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 53
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 53
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 53
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 53
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 54
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 53
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 54
                                        IterBegin: "[53, 5] (1381)"
                                        IterEnd: "[54, 1] (1407)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[53, 5] (1381)"
                                    IterEnd: "[54, 1] (1407)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[53, 5] (1381)"
                                IterEnd: "[54, 1] (1407)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[54, 5] (1411)"
                                                    IterEnd: "[54, 13] (1419)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1411, 1419), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[54, 5] (1411)"
                                                IterEnd: "[54, 13] (1419)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[54, 5] (1411)"
                                            IterEnd: "[54, 13] (1419)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[54, 14] (1420)"
                                                        IterEnd: "[54, 17] (1423)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1420, 1423), match='Int'>"
                                                        Whitespace:
                                                          - 1419
                                                          - 1420
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 54
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 54
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 54
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 54
                                                    IterBegin: "[54, 14] (1420)"
                                                    IterEnd: "[54, 17] (1423)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[54, 14] (1420)"
                                                IterEnd: "[54, 17] (1423)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[54, 14] (1420)"
                                            IterEnd: "[54, 17] (1423)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[54, 18] (1424)"
                                            IterEnd: "[54, 27] (1433)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1424, 1433), match='__BitOr__'>"
                                            Whitespace:
                                              - 1423
                                              - 1424
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[54, 27] (1433)"
                                                IterEnd: "[54, 28] (1434)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1433, 1434), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[54, 28] (1434)"
                                                IterEnd: "[54, 29] (1435)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1434, 1435), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[54, 27] (1433)"
                                            IterEnd: "[54, 29] (1435)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[54, 29] (1435)"
                                                IterEnd: "[55, 1] (1436)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1436
                                                  Start: 1435
                                                Whitespace: None
                                            IterBegin: "[54, 29] (1435)"
                                            IterEnd: "[55, 1] (1436)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.BitOr"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 54
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 55
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 54
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 54
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 54
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 54
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 27
                                                Line: 54
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 54
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 54
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 55
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 54
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 55
                                        IterBegin: "[54, 5] (1411)"
                                        IterEnd: "[55, 1] (1436)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[54, 5] (1411)"
                                    IterEnd: "[55, 1] (1436)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[54, 5] (1411)"
                                IterEnd: "[55, 1] (1436)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[55, 5] (1440)"
                                                    IterEnd: "[55, 13] (1448)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1440, 1448), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[55, 5] (1440)"
                                                IterEnd: "[55, 13] (1448)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[55, 5] (1440)"
                                            IterEnd: "[55, 13] (1448)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[55, 14] (1449)"
                                                        IterEnd: "[55, 17] (1452)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1449, 1452), match='Int'>"
                                                        Whitespace:
                                                          - 1448
                                                          - 1449
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 55
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 55
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 55
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 55
                                                    IterBegin: "[55, 14] (1449)"
                                                    IterEnd: "[55, 17] (1452)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[55, 14] (1449)"
                                                IterEnd: "[55, 17] (1452)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[55, 14] (1449)"
                                            IterEnd: "[55, 17] (1452)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[55, 18] (1453)"
                                            IterEnd: "[55, 28] (1463)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1453, 1463), match='__BitXor__'>"
                                            Whitespace:
                                              - 1452
                                              - 1453
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[55, 28] (1463)"
                                                IterEnd: "[55, 29] (1464)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1463, 1464), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[55, 29] (1464)"
                                                IterEnd: "[55, 30] (1465)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1464, 1465), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[55, 28] (1463)"
                                            IterEnd: "[55, 30] (1465)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[55, 30] (1465)"
                                                IterEnd: "[56, 1] (1466)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1466
                                                  Start: 1465
                                                Whitespace: None
                                            IterBegin: "[55, 30] (1465)"
                                            IterEnd: "[56, 1] (1466)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.BitXor"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 55
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 56
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 55
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 55
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 55
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 55
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 28
                                                Line: 55
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 30
                                                Line: 55
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 55
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 56
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 55
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 56
                                        IterBegin: "[55, 5] (1440)"
                                        IterEnd: "[56, 1] (1466)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[55, 5] (1440)"
                                    IterEnd: "[56, 1] (1466)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[55, 5] (1440)"
                                IterEnd: "[56, 1] (1466)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[56, 5] (1470)"
                                                    IterEnd: "[56, 13] (1478)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1470, 1478), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[56, 5] (1470)"
                                                IterEnd: "[56, 13] (1478)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[56, 5] (1470)"
                                            IterEnd: "[56, 13] (1478)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[56, 14] (1479)"
                                                        IterEnd: "[56, 17] (1482)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1479, 1482), match='Int'>"
                                                        Whitespace:
                                                          - 1478
                                                          - 1479
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 56
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 56
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 56
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 56
                                                    IterBegin: "[56, 14] (1479)"
                                                    IterEnd: "[56, 17] (1482)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[56, 14] (1479)"
                                                IterEnd: "[56, 17] (1482)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[56, 14] (1479)"
                                            IterEnd: "[56, 17] (1482)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[56, 18] (1483)"
                                            IterEnd: "[56, 29] (1494)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1483, 1494), match='__BitFlip__'>"
                                            Whitespace:
                                              - 1482
                                              - 1483
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[56, 29] (1494)"
                                                IterEnd: "[56, 30] (1495)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1494, 1495), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[56, 30] (1495)"
                                                IterEnd: "[56, 31] (1496)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1495, 1496), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[56, 29] (1494)"
                                            IterEnd: "[56, 31] (1496)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[56, 31] (1496)"
                                                IterEnd: "[58, 1] (1498)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1498
                                                  Start: 1496
                                                Whitespace: None
                                            IterBegin: "[56, 31] (1496)"
                                            IterEnd: "[58, 1] (1498)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.BitFlip"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 56
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 58
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 56
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 56
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 56
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 56
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 29
                                                Line: 56
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 31
                                                Line: 56
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 56
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 58
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 56
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 58
                                        IterBegin: "[56, 5] (1470)"
                                        IterEnd: "[58, 1] (1498)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[56, 5] (1470)"
                                    IterEnd: "[58, 1] (1498)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[56, 5] (1470)"
                                IterEnd: "[58, 1] (1498)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[58, 5] (1502)"
                                                    IterEnd: "[58, 13] (1510)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1502, 1510), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[58, 5] (1502)"
                                                IterEnd: "[58, 13] (1510)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[58, 5] (1502)"
                                            IterEnd: "[58, 13] (1510)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[58, 14] (1511)"
                                                        IterEnd: "[58, 17] (1514)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1511, 1514), match='Int'>"
                                                        Whitespace:
                                                          - 1510
                                                          - 1511
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 58
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 58
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 58
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 58
                                                    IterBegin: "[58, 14] (1511)"
                                                    IterEnd: "[58, 17] (1514)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[58, 14] (1511)"
                                                IterEnd: "[58, 17] (1514)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[58, 14] (1511)"
                                            IterEnd: "[58, 17] (1514)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[58, 18] (1515)"
                                            IterEnd: "[58, 38] (1535)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1515, 1535), match='__ShiftLeftInplace__'>"
                                            Whitespace:
                                              - 1514
                                              - 1515
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[58, 38] (1535)"
                                                IterEnd: "[58, 39] (1536)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1535, 1536), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[58, 39] (1536)"
                                                IterEnd: "[58, 40] (1537)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1536, 1537), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[58, 38] (1535)"
                                            IterEnd: "[58, 40] (1537)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[58, 40] (1537)"
                                                IterEnd: "[59, 1] (1538)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1538
                                                  Start: 1537
                                                Whitespace: None
                                            IterBegin: "[58, 40] (1537)"
                                            IterEnd: "[59, 1] (1538)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.ShiftLeftInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 58
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 59
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 58
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 58
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 58
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 38
                                                Line: 58
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 38
                                                Line: 58
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 40
                                                Line: 58
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 58
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 59
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 58
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 59
                                        IterBegin: "[58, 5] (1502)"
                                        IterEnd: "[59, 1] (1538)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[58, 5] (1502)"
                                    IterEnd: "[59, 1] (1538)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[58, 5] (1502)"
                                IterEnd: "[59, 1] (1538)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[59, 5] (1542)"
                                                    IterEnd: "[59, 13] (1550)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1542, 1550), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[59, 5] (1542)"
                                                IterEnd: "[59, 13] (1550)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[59, 5] (1542)"
                                            IterEnd: "[59, 13] (1550)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[59, 14] (1551)"
                                                        IterEnd: "[59, 17] (1554)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1551, 1554), match='Int'>"
                                                        Whitespace:
                                                          - 1550
                                                          - 1551
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 59
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 59
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 59
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 59
                                                    IterBegin: "[59, 14] (1551)"
                                                    IterEnd: "[59, 17] (1554)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[59, 14] (1551)"
                                                IterEnd: "[59, 17] (1554)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[59, 14] (1551)"
                                            IterEnd: "[59, 17] (1554)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[59, 18] (1555)"
                                            IterEnd: "[59, 39] (1576)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1555, 1576), match='__ShiftRightInplace__'>"
                                            Whitespace:
                                              - 1554
                                              - 1555
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[59, 39] (1576)"
                                                IterEnd: "[59, 40] (1577)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1576, 1577), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[59, 40] (1577)"
                                                IterEnd: "[59, 41] (1578)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1577, 1578), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[59, 39] (1576)"
                                            IterEnd: "[59, 41] (1578)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[59, 41] (1578)"
                                                IterEnd: "[60, 1] (1579)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1579
                                                  Start: 1578
                                                Whitespace: None
                                            IterBegin: "[59, 41] (1578)"
                                            IterEnd: "[60, 1] (1579)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.ShiftRightInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 59
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 60
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 59
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 59
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 59
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 39
                                                Line: 59
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 39
                                                Line: 59
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 41
                                                Line: 59
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 59
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 60
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 59
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 60
                                        IterBegin: "[59, 5] (1542)"
                                        IterEnd: "[60, 1] (1579)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[59, 5] (1542)"
                                    IterEnd: "[60, 1] (1579)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[59, 5] (1542)"
                                IterEnd: "[60, 1] (1579)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[60, 5] (1583)"
                                                    IterEnd: "[60, 13] (1591)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1583, 1591), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[60, 5] (1583)"
                                                IterEnd: "[60, 13] (1591)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[60, 5] (1583)"
                                            IterEnd: "[60, 13] (1591)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[60, 14] (1592)"
                                                        IterEnd: "[60, 17] (1595)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1592, 1595), match='Int'>"
                                                        Whitespace:
                                                          - 1591
                                                          - 1592
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 60
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 60
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 60
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 60
                                                    IterBegin: "[60, 14] (1592)"
                                                    IterEnd: "[60, 17] (1595)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[60, 14] (1592)"
                                                IterEnd: "[60, 17] (1595)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[60, 14] (1592)"
                                            IterEnd: "[60, 17] (1595)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[60, 18] (1596)"
                                            IterEnd: "[60, 35] (1613)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1596, 1613), match='__BitAndInplace__'>"
                                            Whitespace:
                                              - 1595
                                              - 1596
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[60, 35] (1613)"
                                                IterEnd: "[60, 36] (1614)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1613, 1614), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[60, 36] (1614)"
                                                IterEnd: "[60, 37] (1615)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1614, 1615), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[60, 35] (1613)"
                                            IterEnd: "[60, 37] (1615)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[60, 37] (1615)"
                                                IterEnd: "[61, 1] (1616)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1616
                                                  Start: 1615
                                                Whitespace: None
                                            IterBegin: "[60, 37] (1615)"
                                            IterEnd: "[61, 1] (1616)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.BitAndInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 60
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 61
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 60
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 60
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 60
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 35
                                                Line: 60
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 35
                                                Line: 60
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 37
                                                Line: 60
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 60
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 61
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 60
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 61
                                        IterBegin: "[60, 5] (1583)"
                                        IterEnd: "[61, 1] (1616)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[60, 5] (1583)"
                                    IterEnd: "[61, 1] (1616)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[60, 5] (1583)"
                                IterEnd: "[61, 1] (1616)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[61, 5] (1620)"
                                                    IterEnd: "[61, 13] (1628)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1620, 1628), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[61, 5] (1620)"
                                                IterEnd: "[61, 13] (1628)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[61, 5] (1620)"
                                            IterEnd: "[61, 13] (1628)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[61, 14] (1629)"
                                                        IterEnd: "[61, 17] (1632)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1629, 1632), match='Int'>"
                                                        Whitespace:
                                                          - 1628
                                                          - 1629
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 61
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 61
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 61
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 61
                                                    IterBegin: "[61, 14] (1629)"
                                                    IterEnd: "[61, 17] (1632)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[61, 14] (1629)"
                                                IterEnd: "[61, 17] (1632)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[61, 14] (1629)"
                                            IterEnd: "[61, 17] (1632)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[61, 18] (1633)"
                                            IterEnd: "[61, 34] (1649)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1633, 1649), match='__BitOrInplace__'>"
                                            Whitespace:
                                              - 1632
                                              - 1633
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[61, 34] (1649)"
                                                IterEnd: "[61, 35] (1650)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1649, 1650), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[61, 35] (1650)"
                                                IterEnd: "[61, 36] (1651)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1650, 1651), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[61, 34] (1649)"
                                            IterEnd: "[61, 36] (1651)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[61, 36] (1651)"
                                                IterEnd: "[62, 1] (1652)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1652
                                                  Start: 1651
                                                Whitespace: None
                                            IterBegin: "[61, 36] (1651)"
                                            IterEnd: "[62, 1] (1652)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.BitOrInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 61
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 62
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 61
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 61
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 61
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 61
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 34
                                                Line: 61
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 36
                                                Line: 61
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 61
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 62
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 61
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 62
                                        IterBegin: "[61, 5] (1620)"
                                        IterEnd: "[62, 1] (1652)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[61, 5] (1620)"
                                    IterEnd: "[62, 1] (1652)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[61, 5] (1620)"
                                IterEnd: "[62, 1] (1652)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[62, 5] (1656)"
                                                    IterEnd: "[62, 13] (1664)"
                                                    Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(1656, 1664), match='abstract'>"
                                                    Whitespace: None
                                                IterBegin: "[62, 5] (1656)"
                                                IterEnd: "[62, 13] (1664)"
                                                Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[62, 5] (1656)"
                                            IterEnd: "[62, 13] (1664)"
                                            Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[62, 14] (1665)"
                                                        IterEnd: "[62, 17] (1668)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(1665, 1668), match='Int'>"
                                                        Whitespace:
                                                          - 1664
                                                          - 1665
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 62
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 62
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 14
                                                            Line: 62
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 62
                                                    IterBegin: "[62, 14] (1665)"
                                                    IterEnd: "[62, 17] (1668)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[62, 14] (1665)"
                                                IterEnd: "[62, 17] (1668)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[62, 14] (1665)"
                                            IterEnd: "[62, 17] (1668)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[62, 18] (1669)"
                                            IterEnd: "[62, 35] (1686)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(1669, 1686), match='__BitXorInplace__'>"
                                            Whitespace:
                                              - 1668
                                              - 1669
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[62, 35] (1686)"
                                                IterEnd: "[62, 36] (1687)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1686, 1687), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[62, 36] (1687)"
                                                IterEnd: "[62, 37] (1688)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(1687, 1688), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[62, 35] (1686)"
                                            IterEnd: "[62, 37] (1688)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[62, 37] (1688)"
                                                IterEnd: "[63, 1] (1689)"
                                                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                  End: 1689
                                                  Start: 1688
                                                Whitespace: None
                                            IterBegin: "[62, 37] (1688)"
                                            IterEnd: "[63, 1] (1689)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.abstract"
                                            Name: "OperatorType.BitXorInplace"
                                            Parameters: {}
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 62
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 63
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 62
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 62
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 18
                                                Line: 62
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 35
                                                Line: 62
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 35
                                                Line: 62
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 37
                                                Line: 62
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 62
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 63
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 62
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 63
                                        IterBegin: "[62, 5] (1656)"
                                        IterEnd: "[63, 1] (1689)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[62, 5] (1656)"
                                    IterEnd: "[63, 1] (1689)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[62, 5] (1656)"
                                IterEnd: "[63, 1] (1689)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                            IterBegin: "[2, 5] (17)"
                            IterEnd: "[63, 1] (1689)"
                            Type: "Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[63, 1] (1689)"
                            IterEnd: "[63, 1] (1689)"
                            Type: "Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                              {}
                            Whitespace: None
                        IterBegin: "[1, 13] (12)"
                        IterEnd: "[63, 1] (1689)"
                        Type: "Multi-line <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 13] (12)"
                    IterEnd: "[63, 1] (1689)"
                    Type: "Or: (Multi-line, DynamicPhrasesType.Statements) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 12] (11)"
                IterEnd: "[63, 1] (1689)"
                Type: "Statements <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassStatementLexerInfo.ClassStatementLexerInfo'>
              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassStatementLexerInfo.ClassStatementLexerData'>
                Base: None
                ClassModifier: "ClassModifier.immutable"
                ClassType: "ClassType.Class"
                Interfaces: []
                Mixins: []
                Name: "Foo"
                Visibility: "VisibilityModifier.private"
              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassStatementLexerInfo.ClassStatementLexerRegions'>
                Base: None
                ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 63
                ClassType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 6
                    Line: 1
                Interfaces: None
                Mixins: None
                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 7
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 10
                    Line: 1
                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 63
                Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 63
            IterBegin: "[1, 1] (0)"
            IterEnd: "[63, 1] (1689)"
            Type: "Class Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[63, 1] (1689)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[63, 1] (1689)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[63, 1] (1689)"
Type: "<None>"
