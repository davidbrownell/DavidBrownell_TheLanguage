# ----------------------------------------------------------------------
# This code was automatically generated by the PythonTarget. Any changes made to this
# file will be overwritten during the next generation!
# ----------------------------------------------------------------------

from v1.Lexer.Location import Location
from v1.Parser.ParserInfos.Common.ClassModifier import ClassModifier
from v1.Parser.ParserInfos.Common.ConstraintArgumentsParserInfo import ConstraintArgumentParserInfo
from v1.Parser.ParserInfos.Common.ConstraintArgumentsParserInfo import ConstraintArgumentsParserInfo
from v1.Parser.ParserInfos.Common.ConstraintParametersParserInfo import ConstraintParameterParserInfo
from v1.Parser.ParserInfos.Common.ConstraintParametersParserInfo import ConstraintParametersParserInfo
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParameterParserInfo
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParametersParserInfo
from v1.Parser.ParserInfos.Common.MethodModifier import MethodModifier
from v1.Parser.ParserInfos.Common.MutabilityModifier import MutabilityModifier
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateParametersParserInfo
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateTypeParameterParserInfo
from v1.Parser.ParserInfos.Common.VisibilityModifier import VisibilityModifier
from v1.Parser.ParserInfos.Expressions.BooleanExpressionParserInfo import BooleanExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.CharacterExpressionParserInfo import CharacterExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.NoneExpressionParserInfo import NoneExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.VariableExpressionParserInfo import VariableExpressionParserInfo
from v1.Parser.ParserInfos.ParserInfo import ParserInfoType
from v1.Parser.ParserInfos.Statements.ClassCapabilities.ConceptCapabilities import ConceptCapabilities
from v1.Parser.ParserInfos.Statements.ClassCapabilities.ExceptionCapabilities import ExceptionCapabilities
from v1.Parser.ParserInfos.Statements.ClassCapabilities.ImmutablePODCapabilities import ImmutablePODCapabilities
from v1.Parser.ParserInfos.Statements.ClassCapabilities.InterfaceCapabilities import InterfaceCapabilities
from v1.Parser.ParserInfos.Statements.ClassCapabilities.MixinCapabilities import MixinCapabilities
from v1.Parser.ParserInfos.Statements.ClassCapabilities.MutablePODCapabilities import MutablePODCapabilities
from v1.Parser.ParserInfos.Statements.ClassCapabilities.StandardCapabilities import StandardCapabilities
from v1.Parser.ParserInfos.Statements.ClassStatementParserInfo import ClassStatementDependencyParserInfo
from v1.Parser.ParserInfos.Statements.ClassStatementParserInfo import ClassStatementParserInfo
from v1.Parser.ParserInfos.Statements.FuncDefinitionStatementParserInfo import FuncDefinitionStatementParserInfo, OperatorType as FuncDefinitionStatementParserInfoOperatorType
from v1.Parser.ParserInfos.Statements.ImportStatementParserInfo import ImportStatementItemParserInfo
from v1.Parser.ParserInfos.Statements.ImportStatementParserInfo import ImportStatementParserInfo, ImportType as ImportStatementParserInfoImportType
from v1.Parser.ParserInfos.Types.StandardTypeParserInfo import StandardTypeParserInfo, StandardTypeItemParserInfo
from v1.Parser.ParserInfos.Types.VariantTypeParserInfo import VariantTypeParserInfo
from v1.Parser.Region import Region


# ----------------------------------------------------------------------
statement00160018_00160021 = ImportStatementItemParserInfo.Create(
    regions=[Region(begin=Location(line=16, column=18), end=Location(line=16, column=21)), Region(begin=Location(line=16, column=18), end=Location(line=16, column=21)), None],
    name="Str",
    alias=None,
)

statement00160001_00190001 = ImportStatementParserInfo.Create(
    regions=[Region(begin=Location(line=16, column=1), end=Location(line=19, column=1)), Region(begin=Location(line=16, column=1), end=Location(line=19, column=1)), Region(begin=Location(line=16, column=6), end=Location(line=16, column=10))],
    visibility_param=VisibilityModifier.private,
    source_filename=".Str",
    import_items=[statement00160018_00160021, ],
    import_type=ImportStatementParserInfoImportType.source_is_module,
)

statement00210005_00210009 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=21, column=5), end=Location(line=21, column=9)), Region(begin=Location(line=21, column=5), end=Location(line=21, column=9))],
    name="Bool",
    templates=None,
    constraints=None,
)

statement00210005_00210009 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=21, column=5), end=Location(line=21, column=9)), None, Region(begin=Location(line=21, column=5), end=Location(line=21, column=9))],
    mutability_modifier=None,
    items=[statement00210005_00210009, ],
)

statement00210025_00210030 = BooleanExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=21, column=25), end=Location(line=21, column=30))],
    value=False,
)

statement00210005_00220001 = ConstraintParameterParserInfo.Create(
    regions=[Region(begin=Location(line=21, column=5), end=Location(line=22, column=1)), Region(begin=Location(line=21, column=10), end=Location(line=21, column=22))],
    type=statement00210005_00210009,
    name="allow_empty!",
    default_value=statement00210025_00210030,
)

statement00200040_00220002 = ConstraintParametersParserInfo.Create(
    regions=[Region(begin=Location(line=20, column=40), end=Location(line=22, column=2)), None, Region(begin=Location(line=21, column=5), end=Location(line=22, column=1)), None],
    positional=None,
    any=[statement00210005_00220001, ],
    keyword=None,
)

statement00230034_00230046 = VariableExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=23, column=34), end=Location(line=23, column=46)), Region(begin=Location(line=23, column=45), end=Location(line=23, column=46)), Region(begin=Location(line=23, column=34), end=Location(line=23, column=46))],
    is_compile_time=True,
    name="allow_empty!",
)

statement00230019_00230046 = ConstraintArgumentParserInfo.Create(
    regions=[Region(begin=Location(line=23, column=19), end=Location(line=23, column=46)), Region(begin=Location(line=23, column=19), end=Location(line=23, column=31))],
    expression=statement00230034_00230046,
    keyword="allow_empty!",
)

statement00230017_00230048 = ConstraintArgumentsParserInfo.Create(
    regions=[Region(begin=Location(line=23, column=17), end=Location(line=23, column=48)), Region(begin=Location(line=23, column=17), end=Location(line=23, column=48))],
    arguments=[statement00230019_00230046, ],
)

statement00230013_00230048 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=23, column=13), end=Location(line=23, column=48)), Region(begin=Location(line=23, column=13), end=Location(line=23, column=16))],
    name="Str",
    templates=None,
    constraints=statement00230017_00230048,
)

statement00230013_00230048 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=23, column=13), end=Location(line=23, column=48)), None, Region(begin=Location(line=23, column=13), end=Location(line=23, column=48))],
    mutability_modifier=None,
    items=[statement00230013_00230048, ],
)

statement00230013_00230048 = ClassStatementDependencyParserInfo.Create(
    regions=[Region(begin=Location(line=23, column=13), end=Location(line=23, column=48)), Region(begin=Location(line=23, column=13), end=Location(line=23, column=48))],
    visibility=VisibilityModifier.public,
    type=statement00230013_00230048,
)

statement00290032_00290040 = TemplateTypeParameterParserInfo.Create(
    regions=[Region(begin=Location(line=29, column=32), end=Location(line=29, column=40)), Region(begin=Location(line=29, column=32), end=Location(line=29, column=40)), None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement00290031_00290041 = TemplateParametersParserInfo.Create(
    regions=[Region(begin=Location(line=29, column=31), end=Location(line=29, column=41)), None, Region(begin=Location(line=29, column=32), end=Location(line=29, column=40)), None],
    positional=None,
    any=[statement00290032_00290040, ],
    keyword=None,
)

statement00290042_00290050 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=29, column=42), end=Location(line=29, column=50)), Region(begin=Location(line=29, column=42), end=Location(line=29, column=50))],
    name="ArchiveT",
    templates=None,
    constraints=None,
)

statement00290042_00290054 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=29, column=42), end=Location(line=29, column=54)), Region(begin=Location(line=29, column=51), end=Location(line=29, column=54)), Region(begin=Location(line=29, column=42), end=Location(line=29, column=50))],
    mutability_modifier=MutabilityModifier.ref,
    items=[statement00290042_00290050, ],
)

statement00290042_00290062 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=29, column=42), end=Location(line=29, column=62)), None, None, Region(begin=Location(line=29, column=55), end=Location(line=29, column=62))],  # type: ignore
    is_compile_time=False,
    type=statement00290042_00290054,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement00290041_00290063 = FuncParametersParserInfo.Create(
    regions=[Region(begin=Location(line=29, column=41), end=Location(line=29, column=63)), None, Region(begin=Location(line=29, column=42), end=Location(line=29, column=62)), None],
    positional=None,
    any_args=[statement00290042_00290062, ],
    keyword=None,
)

statement00290005_00300001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=29, column=5), end=Location(line=30, column=1)), Region(begin=Location(line=29, column=5), end=Location(line=29, column=11)), Region(begin=Location(line=29, column=64), end=Location(line=29, column=67)), Region(begin=Location(line=29, column=5), end=Location(line=30, column=1)), Region(begin=Location(line=29, column=17), end=Location(line=29, column=31)), None, None, Region(begin=Location(line=29, column=41), end=Location(line=29, column=63)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Serialize,
    documentation=None,
    templates=statement00290031_00290041,
    captured_variables=None,
    parameters=statement00290041_00290063,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00300029_00300037 = TemplateTypeParameterParserInfo.Create(
    regions=[Region(begin=Location(line=30, column=29), end=Location(line=30, column=37)), Region(begin=Location(line=30, column=29), end=Location(line=30, column=37)), None],
    name="VisitorT",
    is_variadic=None,
    default_type=None,
)

statement00300028_00300038 = TemplateParametersParserInfo.Create(
    regions=[Region(begin=Location(line=30, column=28), end=Location(line=30, column=38)), None, Region(begin=Location(line=30, column=29), end=Location(line=30, column=37)), None],
    positional=None,
    any=[statement00300029_00300037, ],
    keyword=None,
)

statement00300039_00300047 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=30, column=39), end=Location(line=30, column=47)), Region(begin=Location(line=30, column=39), end=Location(line=30, column=47))],
    name="VisitorT",
    templates=None,
    constraints=None,
)

statement00300039_00300051 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=30, column=39), end=Location(line=30, column=51)), Region(begin=Location(line=30, column=48), end=Location(line=30, column=51)), Region(begin=Location(line=30, column=39), end=Location(line=30, column=47))],
    mutability_modifier=MutabilityModifier.ref,
    items=[statement00300039_00300047, ],
)

statement00300039_00300059 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=30, column=39), end=Location(line=30, column=59)), None, None, Region(begin=Location(line=30, column=52), end=Location(line=30, column=59))],  # type: ignore
    is_compile_time=False,
    type=statement00300039_00300051,
    is_variadic=None,
    name="visitor",
    default_value=None,
)

statement00300038_00300060 = FuncParametersParserInfo.Create(
    regions=[Region(begin=Location(line=30, column=38), end=Location(line=30, column=60)), None, Region(begin=Location(line=30, column=39), end=Location(line=30, column=59)), None],
    positional=None,
    any_args=[statement00300039_00300059, ],
    keyword=None,
)

statement00300005_00320001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=30, column=5), end=Location(line=32, column=1)), Region(begin=Location(line=30, column=5), end=Location(line=30, column=11)), Region(begin=Location(line=30, column=61), end=Location(line=30, column=64)), Region(begin=Location(line=30, column=5), end=Location(line=32, column=1)), Region(begin=Location(line=30, column=17), end=Location(line=30, column=28)), None, None, Region(begin=Location(line=30, column=38), end=Location(line=30, column=60)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Accept,
    documentation=None,
    templates=statement00300028_00300038,
    captured_variables=None,
    parameters=statement00300038_00300060,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00320001_00350001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=32, column=1), end=Location(line=35, column=1)), Region(begin=Location(line=34, column=5), end=Location(line=34, column=11)), Region(begin=Location(line=34, column=35), end=Location(line=34, column=38)), Region(begin=Location(line=32, column=1), end=Location(line=35, column=1)), Region(begin=Location(line=34, column=17), end=Location(line=34, column=32)), None, None, Region(begin=Location(line=34, column=32), end=Location(line=34, column=34)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="ToLowerInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00350005_00360001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=35, column=5), end=Location(line=36, column=1)), Region(begin=Location(line=35, column=5), end=Location(line=35, column=11)), Region(begin=Location(line=35, column=39), end=Location(line=35, column=42)), Region(begin=Location(line=35, column=5), end=Location(line=36, column=1)), Region(begin=Location(line=35, column=17), end=Location(line=35, column=36)), None, None, Region(begin=Location(line=35, column=36), end=Location(line=35, column=38)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="ToCamelCaseInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00360005_00370001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=36, column=5), end=Location(line=37, column=1)), Region(begin=Location(line=36, column=5), end=Location(line=36, column=11)), Region(begin=Location(line=36, column=40), end=Location(line=36, column=43)), Region(begin=Location(line=36, column=5), end=Location(line=37, column=1)), Region(begin=Location(line=36, column=17), end=Location(line=36, column=37)), None, None, Region(begin=Location(line=36, column=37), end=Location(line=36, column=39)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="ToPascalCaseInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00370005_00380001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=37, column=5), end=Location(line=38, column=1)), Region(begin=Location(line=37, column=5), end=Location(line=37, column=11)), Region(begin=Location(line=37, column=39), end=Location(line=37, column=42)), Region(begin=Location(line=37, column=5), end=Location(line=38, column=1)), Region(begin=Location(line=37, column=17), end=Location(line=37, column=36)), None, None, Region(begin=Location(line=37, column=36), end=Location(line=37, column=38)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="ToSnakeCaseInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00380005_00390001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=38, column=5), end=Location(line=39, column=1)), Region(begin=Location(line=38, column=5), end=Location(line=38, column=11)), Region(begin=Location(line=38, column=35), end=Location(line=38, column=38)), Region(begin=Location(line=38, column=5), end=Location(line=39, column=1)), Region(begin=Location(line=38, column=17), end=Location(line=38, column=32)), None, None, Region(begin=Location(line=38, column=32), end=Location(line=38, column=34)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="ToTitleInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00390005_00410001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=39, column=5), end=Location(line=41, column=1)), Region(begin=Location(line=39, column=5), end=Location(line=39, column=11)), Region(begin=Location(line=39, column=35), end=Location(line=39, column=38)), Region(begin=Location(line=39, column=5), end=Location(line=41, column=1)), Region(begin=Location(line=39, column=17), end=Location(line=39, column=32)), None, None, Region(begin=Location(line=39, column=32), end=Location(line=39, column=34)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="ToUpperInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00410001_00430001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=41, column=1), end=Location(line=43, column=1)), Region(begin=Location(line=42, column=5), end=Location(line=42, column=11)), Region(begin=Location(line=42, column=37), end=Location(line=42, column=40)), Region(begin=Location(line=41, column=1), end=Location(line=43, column=1)), Region(begin=Location(line=42, column=17), end=Location(line=42, column=34)), None, None, Region(begin=Location(line=42, column=34), end=Location(line=42, column=36)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="LeftStripInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00430005_00440001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=43, column=5), end=Location(line=44, column=1)), Region(begin=Location(line=43, column=5), end=Location(line=43, column=11)), Region(begin=Location(line=43, column=38), end=Location(line=43, column=41)), Region(begin=Location(line=43, column=5), end=Location(line=44, column=1)), Region(begin=Location(line=43, column=17), end=Location(line=43, column=35)), None, None, Region(begin=Location(line=43, column=35), end=Location(line=43, column=37)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="RightStripInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00440005_00470001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=44, column=5), end=Location(line=47, column=1)), Region(begin=Location(line=44, column=5), end=Location(line=44, column=11)), Region(begin=Location(line=44, column=33), end=Location(line=44, column=36)), Region(begin=Location(line=44, column=5), end=Location(line=47, column=1)), Region(begin=Location(line=44, column=17), end=Location(line=44, column=30)), None, None, Region(begin=Location(line=44, column=30), end=Location(line=44, column=32)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="StripInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=True,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00200001_00480001 = ClassStatementParserInfo.Create(
    regions=[Region(begin=Location(line=20, column=1), end=Location(line=48, column=1)), Region(begin=Location(line=20, column=1), end=Location(line=20, column=7)), Region(begin=Location(line=20, column=8), end=Location(line=20, column=15)), Region(begin=Location(line=20, column=24), end=Location(line=20, column=39)), None, Region(begin=Location(line=23, column=13), end=Location(line=23, column=48)), None, None, Region(begin=Location(line=24, column=1), end=Location(line=48, column=1)), Region(begin=Location(line=20, column=1), end=Location(line=48, column=1)), None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    class_modifier_param=ClassModifier.mutable,
    name="FixedMutableStr",
    documentation=None,
    templates=None,
    constraints=statement00200040_00220002,
    extends=[statement00230013_00230048, ],
    implements=None,
    uses=None,
    statements=[statement00290005_00300001, statement00300005_00320001, statement00320001_00350001, statement00350005_00360001, statement00360005_00370001, statement00370005_00380001, statement00380005_00390001, statement00390005_00410001, statement00410001_00430001, statement00430005_00440001, statement00440005_00470001, ],
    constructor_visibility_param=VisibilityModifier.public,
    is_abstract=None,
    is_final=None,
)

statement00490005_00490009 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=49, column=5), end=Location(line=49, column=9)), Region(begin=Location(line=49, column=5), end=Location(line=49, column=9))],
    name="Bool",
    templates=None,
    constraints=None,
)

statement00490005_00490009 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=49, column=5), end=Location(line=49, column=9)), None, Region(begin=Location(line=49, column=5), end=Location(line=49, column=9))],
    mutability_modifier=None,
    items=[statement00490005_00490009, ],
)

statement00490025_00490030 = BooleanExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=49, column=25), end=Location(line=49, column=30))],
    value=False,
)

statement00490005_00500001 = ConstraintParameterParserInfo.Create(
    regions=[Region(begin=Location(line=49, column=5), end=Location(line=50, column=1)), Region(begin=Location(line=49, column=10), end=Location(line=49, column=22))],
    type=statement00490005_00490009,
    name="allow_empty!",
    default_value=statement00490025_00490030,
)

statement00480035_00500002 = ConstraintParametersParserInfo.Create(
    regions=[Region(begin=Location(line=48, column=35), end=Location(line=50, column=2)), None, Region(begin=Location(line=49, column=5), end=Location(line=50, column=1)), None],
    positional=None,
    any=[statement00490005_00500001, ],
    keyword=None,
)

statement00510046_00510058 = VariableExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=51, column=46), end=Location(line=51, column=58)), Region(begin=Location(line=51, column=57), end=Location(line=51, column=58)), Region(begin=Location(line=51, column=46), end=Location(line=51, column=58))],
    is_compile_time=True,
    name="allow_empty!",
)

statement00510031_00510058 = ConstraintArgumentParserInfo.Create(
    regions=[Region(begin=Location(line=51, column=31), end=Location(line=51, column=58)), Region(begin=Location(line=51, column=31), end=Location(line=51, column=43))],
    expression=statement00510046_00510058,
    keyword="allow_empty!",
)

statement00510029_00510060 = ConstraintArgumentsParserInfo.Create(
    regions=[Region(begin=Location(line=51, column=29), end=Location(line=51, column=60)), Region(begin=Location(line=51, column=29), end=Location(line=51, column=60))],
    arguments=[statement00510031_00510058, ],
)

statement00510013_00510060 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=51, column=13), end=Location(line=51, column=60)), Region(begin=Location(line=51, column=13), end=Location(line=51, column=28))],
    name="FixedMutableStr",
    templates=None,
    constraints=statement00510029_00510060,
)

statement00510013_00510060 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=51, column=13), end=Location(line=51, column=60)), None, Region(begin=Location(line=51, column=13), end=Location(line=51, column=60))],
    mutability_modifier=None,
    items=[statement00510013_00510060, ],
)

statement00510013_00510060 = ClassStatementDependencyParserInfo.Create(
    regions=[Region(begin=Location(line=51, column=13), end=Location(line=51, column=60)), Region(begin=Location(line=51, column=13), end=Location(line=51, column=60))],
    visibility=VisibilityModifier.public,
    type=statement00510013_00510060,
)

statement00580009_00580019 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=58, column=9), end=Location(line=58, column=19)), Region(begin=Location(line=58, column=9), end=Location(line=58, column=19))],
    name="NonZeroInt",
    templates=None,
    constraints=None,
)

statement00580009_00580029 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=58, column=9), end=Location(line=58, column=29)), Region(begin=Location(line=58, column=20), end=Location(line=58, column=29)), Region(begin=Location(line=58, column=9), end=Location(line=58, column=19))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00580009_00580019, ],
)

statement00580009_00580036 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=58, column=9), end=Location(line=58, column=36)), None, None, Region(begin=Location(line=58, column=30), end=Location(line=58, column=36))],  # type: ignore
    is_compile_time=False,
    type=statement00580009_00580029,
    is_variadic=None,
    name="length",
    default_value=None,
)

statement00590009_00590013 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=59, column=9), end=Location(line=59, column=13)), Region(begin=Location(line=59, column=9), end=Location(line=59, column=13))],
    name="Char",
    templates=None,
    constraints=None,
)

statement00590009_00590023 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=59, column=9), end=Location(line=59, column=23)), Region(begin=Location(line=59, column=14), end=Location(line=59, column=23)), Region(begin=Location(line=59, column=9), end=Location(line=59, column=13))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00590009_00590013, ],
)

statement00590036_00590039 = CharacterExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=59, column=36), end=Location(line=59, column=39))],
    value=' ',
)

statement00590009_00590039 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=59, column=9), end=Location(line=59, column=39)), None, None, Region(begin=Location(line=59, column=24), end=Location(line=59, column=33))],  # type: ignore
    is_compile_time=False,
    type=statement00590009_00590023,
    is_variadic=None,
    name="fill_char",
    default_value=statement00590036_00590039,
)

statement00570031_00600006 = FuncParametersParserInfo.Create(
    regions=[Region(begin=Location(line=57, column=31), end=Location(line=60, column=6)), None, Region(begin=Location(line=58, column=9), end=Location(line=59, column=40)), None],
    positional=None,
    any_args=[statement00580009_00580036, statement00590009_00590039, ],
    keyword=None,
)

statement00570005_00620001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=57, column=5), end=Location(line=62, column=1)), Region(begin=Location(line=57, column=5), end=Location(line=57, column=11)), Region(begin=Location(line=60, column=7), end=Location(line=60, column=10)), Region(begin=Location(line=57, column=5), end=Location(line=62, column=1)), Region(begin=Location(line=57, column=17), end=Location(line=57, column=31)), None, None, Region(begin=Location(line=57, column=31), end=Location(line=60, column=6)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="CenterInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=statement00570031_00600006,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00630009_00630019 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=63, column=9), end=Location(line=63, column=19)), Region(begin=Location(line=63, column=9), end=Location(line=63, column=19))],
    name="NonZeroInt",
    templates=None,
    constraints=None,
)

statement00630009_00630029 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=63, column=9), end=Location(line=63, column=29)), Region(begin=Location(line=63, column=20), end=Location(line=63, column=29)), Region(begin=Location(line=63, column=9), end=Location(line=63, column=19))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00630009_00630019, ],
)

statement00630009_00630036 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=63, column=9), end=Location(line=63, column=36)), None, None, Region(begin=Location(line=63, column=30), end=Location(line=63, column=36))],  # type: ignore
    is_compile_time=False,
    type=statement00630009_00630029,
    is_variadic=None,
    name="length",
    default_value=None,
)

statement00640009_00640013 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=64, column=9), end=Location(line=64, column=13)), Region(begin=Location(line=64, column=9), end=Location(line=64, column=13))],
    name="Char",
    templates=None,
    constraints=None,
)

statement00640009_00640023 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=64, column=9), end=Location(line=64, column=23)), Region(begin=Location(line=64, column=14), end=Location(line=64, column=23)), Region(begin=Location(line=64, column=9), end=Location(line=64, column=13))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00640009_00640013, ],
)

statement00640036_00640039 = CharacterExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=64, column=36), end=Location(line=64, column=39))],
    value=' ',
)

statement00640009_00640039 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=64, column=9), end=Location(line=64, column=39)), None, None, Region(begin=Location(line=64, column=24), end=Location(line=64, column=33))],  # type: ignore
    is_compile_time=False,
    type=statement00640009_00640023,
    is_variadic=None,
    name="fill_char",
    default_value=statement00640036_00640039,
)

statement00620036_00650006 = FuncParametersParserInfo.Create(
    regions=[Region(begin=Location(line=62, column=36), end=Location(line=65, column=6)), None, Region(begin=Location(line=63, column=9), end=Location(line=64, column=40)), None],
    positional=None,
    any_args=[statement00630009_00630036, statement00640009_00640039, ],
    keyword=None,
)

statement00620005_00670001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=62, column=5), end=Location(line=67, column=1)), Region(begin=Location(line=62, column=5), end=Location(line=62, column=11)), Region(begin=Location(line=65, column=7), end=Location(line=65, column=10)), Region(begin=Location(line=62, column=5), end=Location(line=67, column=1)), Region(begin=Location(line=62, column=17), end=Location(line=62, column=36)), None, None, Region(begin=Location(line=62, column=36), end=Location(line=65, column=6)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="LeftJustifyInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=statement00620036_00650006,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00680009_00680019 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=68, column=9), end=Location(line=68, column=19)), Region(begin=Location(line=68, column=9), end=Location(line=68, column=19))],
    name="NonZeroInt",
    templates=None,
    constraints=None,
)

statement00680009_00680029 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=68, column=9), end=Location(line=68, column=29)), Region(begin=Location(line=68, column=20), end=Location(line=68, column=29)), Region(begin=Location(line=68, column=9), end=Location(line=68, column=19))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00680009_00680019, ],
)

statement00680009_00680036 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=68, column=9), end=Location(line=68, column=36)), None, None, Region(begin=Location(line=68, column=30), end=Location(line=68, column=36))],  # type: ignore
    is_compile_time=False,
    type=statement00680009_00680029,
    is_variadic=None,
    name="length",
    default_value=None,
)

statement00690009_00690013 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=69, column=9), end=Location(line=69, column=13)), Region(begin=Location(line=69, column=9), end=Location(line=69, column=13))],
    name="Char",
    templates=None,
    constraints=None,
)

statement00690009_00690023 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=69, column=9), end=Location(line=69, column=23)), Region(begin=Location(line=69, column=14), end=Location(line=69, column=23)), Region(begin=Location(line=69, column=9), end=Location(line=69, column=13))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00690009_00690013, ],
)

statement00690036_00690039 = CharacterExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=69, column=36), end=Location(line=69, column=39))],
    value=' ',
)

statement00690009_00690039 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=69, column=9), end=Location(line=69, column=39)), None, None, Region(begin=Location(line=69, column=24), end=Location(line=69, column=33))],  # type: ignore
    is_compile_time=False,
    type=statement00690009_00690023,
    is_variadic=None,
    name="fill_char",
    default_value=statement00690036_00690039,
)

statement00670037_00700006 = FuncParametersParserInfo.Create(
    regions=[Region(begin=Location(line=67, column=37), end=Location(line=70, column=6)), None, Region(begin=Location(line=68, column=9), end=Location(line=69, column=40)), None],
    positional=None,
    any_args=[statement00680009_00680036, statement00690009_00690039, ],
    keyword=None,
)

statement00670005_00730001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=67, column=5), end=Location(line=73, column=1)), Region(begin=Location(line=67, column=5), end=Location(line=67, column=11)), Region(begin=Location(line=70, column=7), end=Location(line=70, column=10)), Region(begin=Location(line=67, column=5), end=Location(line=73, column=1)), Region(begin=Location(line=67, column=17), end=Location(line=67, column=37)), None, None, Region(begin=Location(line=67, column=37), end=Location(line=70, column=6)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="RightJustifyInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=statement00670037_00700006,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00740009_00740013 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=74, column=9), end=Location(line=74, column=13)), Region(begin=Location(line=74, column=9), end=Location(line=74, column=13))],
    name="Char",
    templates=None,
    constraints=None,
)

statement00740009_00740023 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=74, column=9), end=Location(line=74, column=23)), Region(begin=Location(line=74, column=14), end=Location(line=74, column=23)), Region(begin=Location(line=74, column=9), end=Location(line=74, column=13))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00740009_00740013, ],
)

statement00740009_00740030 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=74, column=9), end=Location(line=74, column=30)), None, None, Region(begin=Location(line=74, column=24), end=Location(line=74, column=30))],  # type: ignore
    is_compile_time=False,
    type=statement00740009_00740023,
    is_variadic=None,
    name="source",
    default_value=None,
)

statement00750009_00750013 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=75, column=9), end=Location(line=75, column=13)), Region(begin=Location(line=75, column=9), end=Location(line=75, column=13))],
    name="Char",
    templates=None,
    constraints=None,
)

statement00750009_00750023 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=75, column=9), end=Location(line=75, column=23)), Region(begin=Location(line=75, column=14), end=Location(line=75, column=23)), Region(begin=Location(line=75, column=9), end=Location(line=75, column=13))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00750009_00750013, ],
)

statement00750009_00750028 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=75, column=9), end=Location(line=75, column=28)), None, None, Region(begin=Location(line=75, column=24), end=Location(line=75, column=28))],  # type: ignore
    is_compile_time=False,
    type=statement00750009_00750023,
    is_variadic=None,
    name="dest",
    default_value=None,
)

statement00760010_00760020 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=76, column=10), end=Location(line=76, column=20)), Region(begin=Location(line=76, column=10), end=Location(line=76, column=20))],
    name="NonZeroInt",
    templates=None,
    constraints=None,
)

statement00760010_00760020 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=76, column=10), end=Location(line=76, column=20)), None, Region(begin=Location(line=76, column=10), end=Location(line=76, column=20))],
    mutability_modifier=None,
    items=[statement00760010_00760020, ],
)

statement00760023_00760027 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=76, column=23), end=Location(line=76, column=27)), Region(begin=Location(line=76, column=23), end=Location(line=76, column=27))],
    name="None",
    templates=None,
    constraints=None,
)

statement00760023_00760027 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=76, column=23), end=Location(line=76, column=27)), None, Region(begin=Location(line=76, column=23), end=Location(line=76, column=27))],
    mutability_modifier=None,
    items=[statement00760023_00760027, ],
)

statement00760009_00760038 = VariantTypeParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=76, column=9), end=Location(line=76, column=38)), Region(begin=Location(line=76, column=29), end=Location(line=76, column=38)), Region(begin=Location(line=76, column=9), end=Location(line=76, column=28))],
    mutability_modifier=MutabilityModifier.immutable,
    types=[statement00760010_00760020, statement00760023_00760027, ],
)

statement00760047_00760051 = NoneExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=76, column=47), end=Location(line=76, column=51))],
)

statement00760009_00760051 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=76, column=9), end=Location(line=76, column=51)), None, None, Region(begin=Location(line=76, column=39), end=Location(line=76, column=44))],  # type: ignore
    is_compile_time=False,
    type=statement00760009_00760038,
    is_variadic=None,
    name="count",
    default_value=statement00760047_00760051,
)

statement00730032_00770006 = FuncParametersParserInfo.Create(
    regions=[Region(begin=Location(line=73, column=32), end=Location(line=77, column=6)), None, Region(begin=Location(line=74, column=9), end=Location(line=76, column=52)), None],
    positional=None,
    any_args=[statement00740009_00740030, statement00750009_00750028, statement00760009_00760051, ],
    keyword=None,
)

statement00730005_00790001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=73, column=5), end=Location(line=79, column=1)), Region(begin=Location(line=73, column=5), end=Location(line=73, column=11)), Region(begin=Location(line=77, column=7), end=Location(line=77, column=10)), Region(begin=Location(line=73, column=5), end=Location(line=79, column=1)), Region(begin=Location(line=73, column=17), end=Location(line=73, column=32)), None, None, Region(begin=Location(line=73, column=32), end=Location(line=77, column=6)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="ReplaceInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=statement00730032_00770006,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00800009_00800020 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=80, column=9), end=Location(line=80, column=20)), Region(begin=Location(line=80, column=9), end=Location(line=80, column=20))],
    name="NonEmptyStr",
    templates=None,
    constraints=None,
)

statement00800009_00800030 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=80, column=9), end=Location(line=80, column=30)), Region(begin=Location(line=80, column=21), end=Location(line=80, column=30)), Region(begin=Location(line=80, column=9), end=Location(line=80, column=20))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00800009_00800020, ],
)

statement00800009_00800037 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=80, column=9), end=Location(line=80, column=37)), None, None, Region(begin=Location(line=80, column=31), end=Location(line=80, column=37))],  # type: ignore
    is_compile_time=False,
    type=statement00800009_00800030,
    is_variadic=None,
    name="source",
    default_value=None,
)

statement00810009_00810012 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=81, column=9), end=Location(line=81, column=12)), Region(begin=Location(line=81, column=9), end=Location(line=81, column=12))],
    name="Str",
    templates=None,
    constraints=None,
)

statement00810009_00810022 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=81, column=9), end=Location(line=81, column=22)), Region(begin=Location(line=81, column=13), end=Location(line=81, column=22)), Region(begin=Location(line=81, column=9), end=Location(line=81, column=12))],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement00810009_00810012, ],
)

statement00810009_00810027 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=81, column=9), end=Location(line=81, column=27)), None, None, Region(begin=Location(line=81, column=23), end=Location(line=81, column=27))],  # type: ignore
    is_compile_time=False,
    type=statement00810009_00810022,
    is_variadic=None,
    name="dest",
    default_value=None,
)

statement00820010_00820020 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=82, column=10), end=Location(line=82, column=20)), Region(begin=Location(line=82, column=10), end=Location(line=82, column=20))],
    name="NonZeroInt",
    templates=None,
    constraints=None,
)

statement00820010_00820020 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=82, column=10), end=Location(line=82, column=20)), None, Region(begin=Location(line=82, column=10), end=Location(line=82, column=20))],
    mutability_modifier=None,
    items=[statement00820010_00820020, ],
)

statement00820023_00820027 = StandardTypeItemParserInfo.Create(
    regions=[Region(begin=Location(line=82, column=23), end=Location(line=82, column=27)), Region(begin=Location(line=82, column=23), end=Location(line=82, column=27))],
    name="None",
    templates=None,
    constraints=None,
)

statement00820023_00820027 = StandardTypeParserInfo.Create(
    regions=[Region(begin=Location(line=82, column=23), end=Location(line=82, column=27)), None, Region(begin=Location(line=82, column=23), end=Location(line=82, column=27))],
    mutability_modifier=None,
    items=[statement00820023_00820027, ],
)

statement00820009_00820038 = VariantTypeParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=82, column=9), end=Location(line=82, column=38)), Region(begin=Location(line=82, column=29), end=Location(line=82, column=38)), Region(begin=Location(line=82, column=9), end=Location(line=82, column=28))],
    mutability_modifier=MutabilityModifier.immutable,
    types=[statement00820010_00820020, statement00820023_00820027, ],
)

statement00820047_00820051 = NoneExpressionParserInfo.Create(
    regions=[Region(begin=Location(line=82, column=47), end=Location(line=82, column=51))],
)

statement00820009_00820051 = FuncParameterParserInfo.Create(
    regions=[Region(begin=Location(line=82, column=9), end=Location(line=82, column=51)), None, None, Region(begin=Location(line=82, column=39), end=Location(line=82, column=44))],  # type: ignore
    is_compile_time=False,
    type=statement00820009_00820038,
    is_variadic=None,
    name="count",
    default_value=statement00820047_00820051,
)

statement00790032_00830006 = FuncParametersParserInfo.Create(
    regions=[Region(begin=Location(line=79, column=32), end=Location(line=83, column=6)), None, Region(begin=Location(line=80, column=9), end=Location(line=82, column=52)), None],
    positional=None,
    any_args=[statement00800009_00800037, statement00810009_00810027, statement00820009_00820051, ],
    keyword=None,
)

statement00790005_00850001 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[Region(begin=Location(line=79, column=5), end=Location(line=85, column=1)), Region(begin=Location(line=79, column=5), end=Location(line=79, column=11)), Region(begin=Location(line=83, column=7), end=Location(line=83, column=10)), Region(begin=Location(line=79, column=5), end=Location(line=85, column=1)), Region(begin=Location(line=79, column=17), end=Location(line=79, column=32)), None, None, Region(begin=Location(line=79, column=32), end=Location(line=83, column=6)), None, None, None, None, None, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name="ReplaceInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    parameters=statement00790032_00830006,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement00480001_00860001 = ClassStatementParserInfo.Create(
    regions=[Region(begin=Location(line=48, column=1), end=Location(line=86, column=1)), Region(begin=Location(line=48, column=1), end=Location(line=48, column=7)), Region(begin=Location(line=48, column=8), end=Location(line=48, column=15)), Region(begin=Location(line=48, column=24), end=Location(line=48, column=34)), None, Region(begin=Location(line=51, column=13), end=Location(line=51, column=60)), None, None, Region(begin=Location(line=52, column=1), end=Location(line=86, column=1)), Region(begin=Location(line=48, column=1), end=Location(line=86, column=1)), None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    class_modifier_param=ClassModifier.mutable,
    name="MutableStr",
    documentation=None,
    templates=None,
    constraints=statement00480035_00500002,
    extends=[statement00510013_00510060, ],
    implements=None,
    uses=None,
    statements=[statement00570005_00620001, statement00620005_00670001, statement00670005_00730001, statement00730005_00790001, statement00790005_00850001, ],
    constructor_visibility_param=VisibilityModifier.public,
    is_abstract=None,
    is_final=None,
)

public_exports = [
    statement00200001_00480001,
    statement00480001_00860001,
]
