# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 6] (5)"
                    Type: "'class' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(0, 5), match='class'>"
                    Whitespace: None
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 6] (5)"
                Type: "Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 7] (6)"
                IterEnd: "[1, 10] (9)"
                Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(6, 9), match='Foo'>"
                Whitespace:
                  - 5
                  - 6
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 10] (9)"
                IterEnd: "[1, 11] (10)"
                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(9, 10), match='('>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 11] (10)"
                IterEnd: "[1, 12] (11)"
                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(10, 11), match=')'>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 12] (11)"
                    IterEnd: "[1, 13] (12)"
                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(11, 12), match=':'>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 13] (12)"
                            IterEnd: "[2, 1] (13)"
                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                              End: 13
                              Start: 12
                            Whitespace: None
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 1] (13)"
                            IterEnd: "[2, 5] (17)"
                            Type: "Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                              End: 17
                              Start: 13
                              Value: 4
                            Whitespace: None
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[2, 5] (17)"
                                                    IterEnd: "[2, 6] (18)"
                                                    Type: "'@' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(17, 18), match='@'>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[2, 6] (18)"
                                                    IterEnd: "[2, 12] (24)"
                                                    Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(18, 24), match='Member'>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[2, 12] (24)"
                                                            IterEnd: "[2, 13] (25)"
                                                            Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(24, 25), match='('>"
                                                            Whitespace: None
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                            IsIgnored: False
                                                                                            IterBegin: "[3, 9] (34)"
                                                                                            IterEnd: "[3, 13] (38)"
                                                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                              Match: "<_sre.SRE_Match object; span=(34, 38), match='init'>"
                                                                                            Whitespace: None
                                                                                        Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                            Name: "init"
                                                                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 9
                                                                                                Line: 3
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 13
                                                                                                Line: 3
                                                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 9
                                                                                                Line: 3
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 13
                                                                                                Line: 3
                                                                                        IterBegin: "[3, 9] (34)"
                                                                                        IterEnd: "[3, 13] (38)"
                                                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                    IterBegin: "[3, 9] (34)"
                                                                                    IterEnd: "[3, 13] (38)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[3, 9] (34)"
                                                                                IterEnd: "[3, 13] (38)"
                                                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                IsIgnored: False
                                                                                IterBegin: "[3, 13] (38)"
                                                                                IterEnd: "[3, 14] (39)"
                                                                                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                  Match: "<_sre.SRE_Match object; span=(38, 39), match='='>"
                                                                                Whitespace: None
                                                                            IterBegin: "[3, 9] (34)"
                                                                            IterEnd: "[3, 14] (39)"
                                                                            Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                        IterBegin: "[3, 9] (34)"
                                                                        IterEnd: "[3, 14] (39)"
                                                                        Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                            IsIgnored: False
                                                                                            IterBegin: "[3, 14] (39)"
                                                                                            IterEnd: "[3, 18] (43)"
                                                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                              Match: "<_sre.SRE_Match object; span=(39, 43), match='true'>"
                                                                                            Whitespace: None
                                                                                        Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                            Name: "true"
                                                                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 14
                                                                                                Line: 3
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 18
                                                                                                Line: 3
                                                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 14
                                                                                                Line: 3
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 18
                                                                                                Line: 3
                                                                                        IterBegin: "[3, 14] (39)"
                                                                                        IterEnd: "[3, 18] (43)"
                                                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                    IterBegin: "[3, 14] (39)"
                                                                                    IterEnd: "[3, 18] (43)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[3, 14] (39)"
                                                                                IterEnd: "[3, 18] (43)"
                                                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                            IterBegin: "[3, 14] (39)"
                                                                            IterEnd: "[3, 18] (43)"
                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                        IterBegin: "[3, 14] (39)"
                                                                        IterEnd: "[3, 18] (43)"
                                                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                    IterBegin: "[3, 9] (34)"
                                                                    IterEnd: "[3, 18] (43)"
                                                                    Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[3, 18] (43)"
                                                                            IterEnd: "[3, 19] (44)"
                                                                            Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                              Match: "<_sre.SRE_Match object; span=(43, 44), match=','>"
                                                                            Whitespace: None
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                            Children:
                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                Children:
                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                    IsIgnored: False
                                                                                                    IterBegin: "[4, 9] (53)"
                                                                                                    IterEnd: "[4, 19] (63)"
                                                                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                      Match: "<_sre.SRE_Match object; span=(53, 63), match='comparison'>"
                                                                                                    Whitespace: None
                                                                                                Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                    Name: "comparison"
                                                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 9
                                                                                                        Line: 4
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 19
                                                                                                        Line: 4
                                                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 9
                                                                                                        Line: 4
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 19
                                                                                                        Line: 4
                                                                                                IterBegin: "[4, 9] (53)"
                                                                                                IterEnd: "[4, 19] (63)"
                                                                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                            IterBegin: "[4, 9] (53)"
                                                                                            IterEnd: "[4, 19] (63)"
                                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                        IterBegin: "[4, 9] (53)"
                                                                                        IterEnd: "[4, 19] (63)"
                                                                                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[4, 19] (63)"
                                                                                        IterEnd: "[4, 20] (64)"
                                                                                        Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(63, 64), match='='>"
                                                                                        Whitespace: None
                                                                                    IterBegin: "[4, 9] (53)"
                                                                                    IterEnd: "[4, 20] (64)"
                                                                                    Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[4, 9] (53)"
                                                                                IterEnd: "[4, 20] (64)"
                                                                                Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                            Children:
                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                Children:
                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                    IsIgnored: False
                                                                                                    IterBegin: "[4, 20] (64)"
                                                                                                    IterEnd: "[4, 25] (69)"
                                                                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                      Match: "<_sre.SRE_Match object; span=(64, 69), match='false'>"
                                                                                                    Whitespace: None
                                                                                                Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                    Name: "false"
                                                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 20
                                                                                                        Line: 4
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 25
                                                                                                        Line: 4
                                                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 20
                                                                                                        Line: 4
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 25
                                                                                                        Line: 4
                                                                                                IterBegin: "[4, 20] (64)"
                                                                                                IterEnd: "[4, 25] (69)"
                                                                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                            IterBegin: "[4, 20] (64)"
                                                                                            IterEnd: "[4, 25] (69)"
                                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                        IterBegin: "[4, 20] (64)"
                                                                                        IterEnd: "[4, 25] (69)"
                                                                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                    IterBegin: "[4, 20] (64)"
                                                                                    IterEnd: "[4, 25] (69)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[4, 20] (64)"
                                                                                IterEnd: "[4, 25] (69)"
                                                                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                            IterBegin: "[4, 9] (53)"
                                                                            IterEnd: "[4, 25] (69)"
                                                                            Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                        IterBegin: "[3, 18] (43)"
                                                                        IterEnd: "[4, 25] (69)"
                                                                        Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[3, 18] (43)"
                                                                    IterEnd: "[4, 25] (69)"
                                                                    Type: "Repeat: {Comma and Argument, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[4, 25] (69)"
                                                                        IterEnd: "[4, 26] (70)"
                                                                        Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(69, 70), match=','>"
                                                                        Whitespace: None
                                                                    IterBegin: "[4, 25] (69)"
                                                                    IterEnd: "[4, 26] (70)"
                                                                    Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                IterBegin: "[3, 9] (34)"
                                                                IterEnd: "[4, 26] (70)"
                                                                Type: "Argument Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            IterBegin: "[3, 9] (34)"
                                                            IterEnd: "[4, 26] (70)"
                                                            Type: "Repeat: {Argument Items, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[5, 5] (75)"
                                                            IterEnd: "[5, 6] (76)"
                                                            Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(75, 76), match=')'>"
                                                            Whitespace: None
                                                        IterBegin: "[2, 12] (24)"
                                                        IterEnd: "[5, 6] (76)"
                                                        Type: "Arguments <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[2, 12] (24)"
                                                    IterEnd: "[5, 6] (76)"
                                                    Type: "Repeat: {Arguments, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 6] (76)"
                                                        IterEnd: "[6, 1] (77)"
                                                        Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                          End: 77
                                                          Start: 76
                                                        Whitespace: None
                                                    IterBegin: "[5, 6] (76)"
                                                    IterEnd: "[6, 1] (77)"
                                                    Type: "Repeat: {Newline+, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                IterBegin: "[2, 5] (17)"
                                                IterEnd: "[6, 1] (77)"
                                                Type: "Attribute <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[2, 5] (17)"
                                            IterEnd: "[6, 1] (77)"
                                            Type: "Repeat: {Attribute, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[6, 5] (81)"
                                                        IterEnd: "[6, 9] (85)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(81, 85), match='Char'>"
                                                        Whitespace: None
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[6, 10] (86)"
                                                                IterEnd: "[6, 13] (89)"
                                                                Type: "'var' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(86, 89), match='var'>"
                                                                Whitespace:
                                                                  - 85
                                                                  - 86
                                                            IterBegin: "[6, 10] (86)"
                                                            IterEnd: "[6, 13] (89)"
                                                            Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[6, 10] (86)"
                                                        IterEnd: "[6, 13] (89)"
                                                        Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: TypeModifier.var
                                                        TypeName: "Char"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 10
                                                            Line: 6
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 13
                                                            Line: 6
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 6
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 13
                                                            Line: 6
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 6
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 9
                                                            Line: 6
                                                    IterBegin: "[6, 5] (81)"
                                                    IterEnd: "[6, 13] (89)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[6, 5] (81)"
                                                IterEnd: "[6, 13] (89)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[6, 5] (81)"
                                            IterEnd: "[6, 13] (89)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[6, 14] (90)"
                                            IterEnd: "[6, 20] (96)"
                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(90, 96), match='value3'>"
                                            Whitespace:
                                              - 89
                                              - 90
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[6, 20] (96)"
                                            IterEnd: "[8, 1] (98)"
                                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                              End: 98
                                              Start: 96
                                            Whitespace: None
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassMemberStatementLexerInfo.ClassMemberStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassMemberStatementLexerInfo.ClassMemberStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            DefaultValue: None
                                            Name: "value3"
                                            Type: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                Modifier: TypeModifier.var
                                                TypeName: "Char"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 10
                                                    Line: 6
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 13
                                                    Line: 6
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 5
                                                    Line: 6
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 13
                                                    Line: 6
                                                TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 5
                                                    Line: 6
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 9
                                                    Line: 6
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassMemberStatementLexerInfo.ClassMemberStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 8
                                            DefaultValue: None
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 14
                                                Line: 6
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 20
                                                Line: 6
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 8
                                            Type: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 6
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 6
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 8
                                        IterBegin: "[2, 5] (17)"
                                        IterEnd: "[8, 1] (98)"
                                        Type: "Class Member Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[2, 5] (17)"
                                    IterEnd: "[8, 1] (98)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[2, 5] (17)"
                                IterEnd: "[8, 1] (98)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[8, 5] (102)"
                                                    IterEnd: "[8, 6] (103)"
                                                    Type: "'@' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(102, 103), match='@'>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[8, 6] (103)"
                                                    IterEnd: "[8, 12] (109)"
                                                    Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(103, 109), match='Member'>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[8, 12] (109)"
                                                            IterEnd: "[8, 13] (110)"
                                                            Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(109, 110), match='('>"
                                                            Whitespace: None
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                            IsIgnored: False
                                                                                            IterBegin: "[9, 9] (119)"
                                                                                            IterEnd: "[9, 13] (123)"
                                                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                              Match: "<_sre.SRE_Match object; span=(119, 123), match='init'>"
                                                                                            Whitespace: None
                                                                                        Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                            Name: "init"
                                                                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 9
                                                                                                Line: 9
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 13
                                                                                                Line: 9
                                                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 9
                                                                                                Line: 9
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 13
                                                                                                Line: 9
                                                                                        IterBegin: "[9, 9] (119)"
                                                                                        IterEnd: "[9, 13] (123)"
                                                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                    IterBegin: "[9, 9] (119)"
                                                                                    IterEnd: "[9, 13] (123)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[9, 9] (119)"
                                                                                IterEnd: "[9, 13] (123)"
                                                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                IsIgnored: False
                                                                                IterBegin: "[9, 13] (123)"
                                                                                IterEnd: "[9, 14] (124)"
                                                                                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                  Match: "<_sre.SRE_Match object; span=(123, 124), match='='>"
                                                                                Whitespace: None
                                                                            IterBegin: "[9, 9] (119)"
                                                                            IterEnd: "[9, 14] (124)"
                                                                            Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                        IterBegin: "[9, 9] (119)"
                                                                        IterEnd: "[9, 14] (124)"
                                                                        Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                            IsIgnored: False
                                                                                            IterBegin: "[9, 14] (124)"
                                                                                            IterEnd: "[9, 18] (128)"
                                                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                              Match: "<_sre.SRE_Match object; span=(124, 128), match='true'>"
                                                                                            Whitespace: None
                                                                                        Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                            Name: "true"
                                                                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 14
                                                                                                Line: 9
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 18
                                                                                                Line: 9
                                                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 14
                                                                                                Line: 9
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 18
                                                                                                Line: 9
                                                                                        IterBegin: "[9, 14] (124)"
                                                                                        IterEnd: "[9, 18] (128)"
                                                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                    IterBegin: "[9, 14] (124)"
                                                                                    IterEnd: "[9, 18] (128)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[9, 14] (124)"
                                                                                IterEnd: "[9, 18] (128)"
                                                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                            IterBegin: "[9, 14] (124)"
                                                                            IterEnd: "[9, 18] (128)"
                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                        IterBegin: "[9, 14] (124)"
                                                                        IterEnd: "[9, 18] (128)"
                                                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                    IterBegin: "[9, 9] (119)"
                                                                    IterEnd: "[9, 18] (128)"
                                                                    Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[9, 18] (128)"
                                                                            IterEnd: "[9, 19] (129)"
                                                                            Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                              Match: "<_sre.SRE_Match object; span=(128, 129), match=','>"
                                                                            Whitespace: None
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                            Children:
                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                Children:
                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                    IsIgnored: False
                                                                                                    IterBegin: "[10, 13] (142)"
                                                                                                    IterEnd: "[10, 23] (152)"
                                                                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                      Match: "<_sre.SRE_Match object; span=(142, 152), match='comparison'>"
                                                                                                    Whitespace: None
                                                                                                Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                    Name: "comparison"
                                                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 13
                                                                                                        Line: 10
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 23
                                                                                                        Line: 10
                                                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 13
                                                                                                        Line: 10
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 23
                                                                                                        Line: 10
                                                                                                IterBegin: "[10, 13] (142)"
                                                                                                IterEnd: "[10, 23] (152)"
                                                                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                            IterBegin: "[10, 13] (142)"
                                                                                            IterEnd: "[10, 23] (152)"
                                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                        IterBegin: "[10, 13] (142)"
                                                                                        IterEnd: "[10, 23] (152)"
                                                                                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[10, 23] (152)"
                                                                                        IterEnd: "[10, 24] (153)"
                                                                                        Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(152, 153), match='='>"
                                                                                        Whitespace: None
                                                                                    IterBegin: "[10, 13] (142)"
                                                                                    IterEnd: "[10, 24] (153)"
                                                                                    Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[10, 13] (142)"
                                                                                IterEnd: "[10, 24] (153)"
                                                                                Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                            Children:
                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                Children:
                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                    IsIgnored: False
                                                                                                    IterBegin: "[10, 24] (153)"
                                                                                                    IterEnd: "[10, 29] (158)"
                                                                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                      Match: "<_sre.SRE_Match object; span=(153, 158), match='false'>"
                                                                                                    Whitespace: None
                                                                                                Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                    Name: "false"
                                                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 24
                                                                                                        Line: 10
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 29
                                                                                                        Line: 10
                                                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 24
                                                                                                        Line: 10
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 29
                                                                                                        Line: 10
                                                                                                IterBegin: "[10, 24] (153)"
                                                                                                IterEnd: "[10, 29] (158)"
                                                                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                            IterBegin: "[10, 24] (153)"
                                                                                            IterEnd: "[10, 29] (158)"
                                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                        IterBegin: "[10, 24] (153)"
                                                                                        IterEnd: "[10, 29] (158)"
                                                                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                    IterBegin: "[10, 24] (153)"
                                                                                    IterEnd: "[10, 29] (158)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[10, 24] (153)"
                                                                                IterEnd: "[10, 29] (158)"
                                                                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                            IterBegin: "[10, 13] (142)"
                                                                            IterEnd: "[10, 29] (158)"
                                                                            Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                        IterBegin: "[9, 18] (128)"
                                                                        IterEnd: "[10, 29] (158)"
                                                                        Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[9, 18] (128)"
                                                                    IterEnd: "[10, 29] (158)"
                                                                    Type: "Repeat: {Comma and Argument, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[10, 29] (158)"
                                                                        IterEnd: "[10, 30] (159)"
                                                                        Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(158, 159), match=','>"
                                                                        Whitespace: None
                                                                    IterBegin: "[10, 29] (158)"
                                                                    IterEnd: "[10, 30] (159)"
                                                                    Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                IterBegin: "[9, 9] (119)"
                                                                IterEnd: "[10, 30] (159)"
                                                                Type: "Argument Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            IterBegin: "[9, 9] (119)"
                                                            IterEnd: "[10, 30] (159)"
                                                            Type: "Repeat: {Argument Items, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[11, 5] (164)"
                                                            IterEnd: "[11, 6] (165)"
                                                            Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(164, 165), match=')'>"
                                                            Whitespace: None
                                                        IterBegin: "[8, 12] (109)"
                                                        IterEnd: "[11, 6] (165)"
                                                        Type: "Arguments <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[8, 12] (109)"
                                                    IterEnd: "[11, 6] (165)"
                                                    Type: "Repeat: {Arguments, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[11, 6] (165)"
                                                        IterEnd: "[12, 1] (166)"
                                                        Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                          End: 166
                                                          Start: 165
                                                        Whitespace: None
                                                    IterBegin: "[11, 6] (165)"
                                                    IterEnd: "[12, 1] (166)"
                                                    Type: "Repeat: {Newline+, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                IterBegin: "[8, 5] (102)"
                                                IterEnd: "[12, 1] (166)"
                                                Type: "Attribute <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[8, 5] (102)"
                                            IterEnd: "[12, 1] (166)"
                                            Type: "Repeat: {Attribute, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[12, 5] (170)"
                                                        IterEnd: "[12, 9] (174)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(170, 174), match='Char'>"
                                                        Whitespace: None
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[12, 10] (175)"
                                                                IterEnd: "[12, 13] (178)"
                                                                Type: "'var' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(175, 178), match='var'>"
                                                                Whitespace:
                                                                  - 174
                                                                  - 175
                                                            IterBegin: "[12, 10] (175)"
                                                            IterEnd: "[12, 13] (178)"
                                                            Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[12, 10] (175)"
                                                        IterEnd: "[12, 13] (178)"
                                                        Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: TypeModifier.var
                                                        TypeName: "Char"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 10
                                                            Line: 12
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 13
                                                            Line: 12
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 12
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 13
                                                            Line: 12
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 12
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 9
                                                            Line: 12
                                                    IterBegin: "[12, 5] (170)"
                                                    IterEnd: "[12, 13] (178)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[12, 5] (170)"
                                                IterEnd: "[12, 13] (178)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[12, 5] (170)"
                                            IterEnd: "[12, 13] (178)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[12, 14] (179)"
                                            IterEnd: "[12, 20] (185)"
                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(179, 185), match='value4'>"
                                            Whitespace:
                                              - 178
                                              - 179
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[12, 20] (185)"
                                            IterEnd: "[13, 1] (186)"
                                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                              End: 186
                                              Start: 185
                                            Whitespace: None
                                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassMemberStatementLexerInfo.ClassMemberStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassMemberStatementLexerInfo.ClassMemberStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            DefaultValue: None
                                            Name: "value4"
                                            Type: # <class 'TheLanguage.Lexer.LexerInfo.LexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                Modifier: TypeModifier.var
                                                TypeName: "Char"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 10
                                                    Line: 12
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 13
                                                    Line: 12
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 5
                                                    Line: 12
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 13
                                                    Line: 12
                                                TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 5
                                                    Line: 12
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 9
                                                    Line: 12
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassMemberStatementLexerInfo.ClassMemberStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 13
                                            DefaultValue: None
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 14
                                                Line: 12
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 20
                                                Line: 12
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 13
                                            Type: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 12
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 12
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 8
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 13
                                        IterBegin: "[8, 5] (102)"
                                        IterEnd: "[13, 1] (186)"
                                        Type: "Class Member Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[8, 5] (102)"
                                    IterEnd: "[13, 1] (186)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[8, 5] (102)"
                                IterEnd: "[13, 1] (186)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                            IterBegin: "[2, 5] (17)"
                            IterEnd: "[13, 1] (186)"
                            Type: "Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[13, 1] (186)"
                            IterEnd: "[13, 1] (186)"
                            Type: "Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                              {}
                            Whitespace: None
                        IterBegin: "[1, 13] (12)"
                        IterEnd: "[13, 1] (186)"
                        Type: "Multi-line <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 13] (12)"
                    IterEnd: "[13, 1] (186)"
                    Type: "Or: (Multi-line, DynamicPhrasesType.Statements) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 12] (11)"
                IterEnd: "[13, 1] (186)"
                Type: "Statements <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassStatementLexerInfo.ClassStatementLexerInfo'>
              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassStatementLexerInfo.ClassStatementLexerData'>
                Base: None
                ClassModifier: "ClassModifier.immutable"
                ClassType: "ClassType.Class"
                Interfaces: []
                Mixins: []
                Name: "Foo"
                Visibility: "VisibilityModifier.private"
              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Statements.ClassStatementLexerInfo.ClassStatementLexerRegions'>
                Base: None
                ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 13
                ClassType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 6
                    Line: 1
                Interfaces: None
                Mixins: None
                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 7
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 10
                    Line: 1
                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 13
                Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 13
            IterBegin: "[1, 1] (0)"
            IterEnd: "[13, 1] (186)"
            Type: "Class Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[13, 1] (186)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[13, 1] (186)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[13, 1] (186)"
Type: "<None>"
