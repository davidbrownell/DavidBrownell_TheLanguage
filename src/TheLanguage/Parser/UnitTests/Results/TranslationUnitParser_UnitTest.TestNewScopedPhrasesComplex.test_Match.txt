<class 'TheLanguage.Parser.Components.AST.RootNode'>
Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 9] (8)
                                                                        IterBefore : [1, 1] (0)
                                                                        Type       : Upper <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(0, 8), match='NEWSCOPE'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 10] (9)
                                                                        IterBefore : [1, 9] (8)
                                                                        Type       : Colon <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(8, 9), match=':'>
                                                                        Whitespace : None
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 1] (10)
                                                                        IterBefore : [1, 10] (9)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 10
                                                                                     Start : 9
                                                                        Whitespace : None
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 5] (14)
                                                                        IterBefore : [2, 1] (10)
                                                                        Type       : Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                                                                                     End   : 14
                                                                                     Start : 10
                                                                                     Value : 4
                                                                        Whitespace : None
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                            IsIgnored  : False
                                                                                                            IterAfter  : [2, 10] (19)
                                                                                                            IterBefore : [2, 5] (14)
                                                                                                            Type       : Upper <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                         Match : <_sre.SRE_Match object; span=(14, 19), match='UPPER'>
                                                                                                            Whitespace : None
                                                                                          IterAfter  : [2, 10] (19)
                                                                                          IterBefore : [2, 5] (14)
                                                                                          Type       : (Newline Phrase, New Scope) / (Upper Phrase, Lower Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                        IterAfter  : [2, 10] (19)
                                                                        IterBefore : [2, 5] (14)
                                                                        Type       : DynamicPhrasesType.Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                   5)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                            IsIgnored  : False
                                                                                                            IterAfter  : [4, 1] (21)
                                                                                                            IterBefore : [2, 10] (19)
                                                                                                            Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                                                            Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                         End   : 21
                                                                                                                         Start : 19
                                                                                                            Whitespace : None
                                                                                          IterAfter  : [4, 1] (21)
                                                                                          IterBefore : [2, 10] (19)
                                                                                          Type       : (Newline Phrase, New Scope) / (Upper Phrase, Lower Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                        IterAfter  : [4, 1] (21)
                                                                        IterBefore : [2, 10] (19)
                                                                        Type       : DynamicPhrasesType.Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                   6)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                            IsIgnored  : False
                                                                                                            IterAfter  : [4, 10] (30)
                                                                                                            IterBefore : [4, 5] (25)
                                                                                                            Type       : Lower <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                         Match : <_sre.SRE_Match object; span=(25, 30), match='lower'>
                                                                                                            Whitespace : None
                                                                                          IterAfter  : [4, 10] (30)
                                                                                          IterBefore : [4, 5] (25)
                                                                                          Type       : (Newline Phrase, New Scope) / (Upper Phrase, Lower Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                        IterAfter  : [4, 10] (30)
                                                                        IterBefore : [4, 5] (25)
                                                                        Type       : DynamicPhrasesType.Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                   7)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                            IsIgnored  : False
                                                                                                            IterAfter  : [5, 1] (31)
                                                                                                            IterBefore : [4, 10] (30)
                                                                                                            Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                                                            Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                         End   : 31
                                                                                                                         Start : 30
                                                                                                            Whitespace : None
                                                                                          IterAfter  : [5, 1] (31)
                                                                                          IterBefore : [4, 10] (30)
                                                                                          Type       : (Newline Phrase, New Scope) / (Upper Phrase, Lower Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                        IterAfter  : [5, 1] (31)
                                                                        IterBefore : [4, 10] (30)
                                                                        Type       : DynamicPhrasesType.Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                   8)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [5, 1] (31)
                                                                        IterBefore : [5, 1] (31)
                                                                        Type       : Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                                                                                     -- empty dict --
                                                                        Whitespace : None
                                                      IterAfter  : [5, 1] (31)
                                                      IterBefore : [1, 1] (0)
                                                      Type       : New Scope <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [5, 1] (31)
                                    IterBefore : [1, 1] (0)
                                    Type       : (Newline Phrase, New Scope) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [5, 1] (31)
                  IterBefore : [1, 1] (0)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
IterAfter  : [5, 1] (31)
IterBefore : [1, 1] (0)
Type       : <None>
