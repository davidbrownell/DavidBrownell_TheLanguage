<class 'TheLanguage.Parser.Components.AST.RootNode'>
Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 5] (4)
                                                                        IterBefore : [1, 1] (0)
                                                                        Type       : 'from' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(0, 4), match='from'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 7] (6)
                                                                        IterBefore : [1, 6] (5)
                                                                        Type       : <dotted_generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(5, 6), match='.'>
                                                                        Whitespace : 0)   4
                                                                                     1)   5
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 14] (13)
                                                                        IterBefore : [1, 8] (7)
                                                                        Type       : 'import' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(7, 13), match='import'>
                                                                        Whitespace : 0)   6
                                                                                     1)   7
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                              IsIgnored  : False
                                                                                                                              IterAfter  : [1, 20] (19)
                                                                                                                              IterBefore : [1, 15] (14)
                                                                                                                              Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                           Match : <_sre.SRE_Match object; span=(14, 19), match='File1'>
                                                                                                                              Whitespace : 0)   13
                                                                                                                                           1)   14
                                                                                                            IterAfter  : [1, 20] (19)
                                                                                                            IterBefore : [1, 15] (14)
                                                                                                            Type       : Content Item <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Comma and Content, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                       2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                          IterAfter  : None
                                                                                          IterBefore : [1, 15] (14)
                                                                                          Type       : Content Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : None
                                                                        IterBefore : [1, 15] (14)
                                                                        Type       : Or: (Grouped, Content Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 1] (20)
                                                                        IterBefore : [1, 20] (19)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 20
                                                                                     Start : 19
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ImportStatement.ImportStatement.NodeInfo'>
                                                                   ImportItems       : File1 : File1
                                                                   ImportType        : ImportType.SourceIsDirectory
                                                                   SourceFilename    : <generic_root>/Statements/IntegrationTests/File1.TheLanguage
                                                      IterAfter  : [2, 1] (20)
                                                      IterBefore : [1, 1] (0)
                                                      Type       : Import Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [2, 1] (20)
                                    IterBefore : [1, 1] (0)
                                    Type       : 1.0.0 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [2, 1] (20)
                  IterBefore : [1, 1] (0)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 5] (24)
                                                                        IterBefore : [2, 1] (20)
                                                                        Type       : 'from' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(20, 24), match='from'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 7] (26)
                                                                        IterBefore : [2, 6] (25)
                                                                        Type       : <dotted_generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(25, 26), match='.'>
                                                                        Whitespace : 0)   24
                                                                                     1)   25
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 14] (33)
                                                                        IterBefore : [2, 8] (27)
                                                                        Type       : 'import' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(27, 33), match='import'>
                                                                        Whitespace : 0)   26
                                                                                     1)   27
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [2, 20] (39)
                                                                                                                                                IterBefore : [2, 15] (34)
                                                                                                                                                Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(34, 39), match='File1'>
                                                                                                                                                Whitespace : 0)   33
                                                                                                                                                             1)   34
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [2, 23] (42)
                                                                                                                                                IterBefore : [2, 21] (40)
                                                                                                                                                Type       : 'as' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(40, 42), match='as'>
                                                                                                                                                Whitespace : 0)   39
                                                                                                                                                             1)   40
                                                                                                                                           2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [2, 38] (57)
                                                                                                                                                IterBefore : [2, 24] (43)
                                                                                                                                                Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(43, 57), match='File1Decorated'>
                                                                                                                                                Whitespace : 0)   42
                                                                                                                                                             1)   43
                                                                                                                              IterAfter  : [2, 38] (57)
                                                                                                                              IterBefore : [2, 15] (34)
                                                                                                                              Type       : Sequence: [<generic_name>, 'as', <generic_name>] <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [2, 38] (57)
                                                                                                            IterBefore : [2, 15] (34)
                                                                                                            Type       : Content Item <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Comma and Content, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                       2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                          IterAfter  : None
                                                                                          IterBefore : [2, 15] (34)
                                                                                          Type       : Content Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : None
                                                                        IterBefore : [2, 15] (34)
                                                                        Type       : Or: (Grouped, Content Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 1] (59)
                                                                        IterBefore : [2, 38] (57)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 59
                                                                                     Start : 57
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ImportStatement.ImportStatement.NodeInfo'>
                                                                   ImportItems       : File1 : File1Decorated
                                                                   ImportType        : ImportType.SourceIsDirectory
                                                                   SourceFilename    : <generic_root>/Statements/IntegrationTests/File1.TheLanguage
                                                      IterAfter  : [4, 1] (59)
                                                      IterBefore : [2, 1] (20)
                                                      Type       : Import Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [4, 1] (59)
                                    IterBefore : [2, 1] (20)
                                    Type       : 1.0.0 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [4, 1] (59)
                  IterBefore : [2, 1] (20)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 5] (63)
                                                                        IterBefore : [4, 1] (59)
                                                                        Type       : 'from' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(59, 63), match='from'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 9] (67)
                                                                        IterBefore : [4, 6] (64)
                                                                        Type       : <dotted_generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(64, 67), match='...'>
                                                                        Whitespace : 0)   63
                                                                                     1)   64
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 16] (74)
                                                                        IterBefore : [4, 10] (68)
                                                                        Type       : 'import' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(68, 74), match='import'>
                                                                        Whitespace : 0)   67
                                                                                     1)   68
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                              IsIgnored  : False
                                                                                                                              IterAfter  : [4, 22] (80)
                                                                                                                              IterBefore : [4, 17] (75)
                                                                                                                              Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                           Match : <_sre.SRE_Match object; span=(75, 80), match='File2'>
                                                                                                                              Whitespace : 0)   74
                                                                                                                                           1)   75
                                                                                                            IterAfter  : [4, 22] (80)
                                                                                                            IterBefore : [4, 17] (75)
                                                                                                            Type       : Content Item <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Comma and Content, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                       2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                          IterAfter  : None
                                                                                          IterBefore : [4, 17] (75)
                                                                                          Type       : Content Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : None
                                                                        IterBefore : [4, 17] (75)
                                                                        Type       : Or: (Grouped, Content Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [5, 1] (81)
                                                                        IterBefore : [4, 22] (80)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 81
                                                                                     Start : 80
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ImportStatement.ImportStatement.NodeInfo'>
                                                                   ImportItems       : File2 : File2
                                                                   ImportType        : ImportType.SourceIsDirectory
                                                                   SourceFilename    : <generic_root>/File2.TheLanguage
                                                      IterAfter  : [5, 1] (81)
                                                      IterBefore : [4, 1] (59)
                                                      Type       : Import Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [5, 1] (81)
                                    IterBefore : [4, 1] (59)
                                    Type       : 1.0.0 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [5, 1] (81)
                  IterBefore : [4, 1] (59)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [5, 5] (85)
                                                                        IterBefore : [5, 1] (81)
                                                                        Type       : 'from' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(81, 85), match='from'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [5, 9] (89)
                                                                        IterBefore : [5, 6] (86)
                                                                        Type       : <dotted_generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(86, 89), match='...'>
                                                                        Whitespace : 0)   85
                                                                                     1)   86
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [5, 16] (96)
                                                                        IterBefore : [5, 10] (90)
                                                                        Type       : 'import' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(90, 96), match='import'>
                                                                        Whitespace : 0)   89
                                                                                     1)   90
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [5, 22] (102)
                                                                                                                                                IterBefore : [5, 17] (97)
                                                                                                                                                Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(97, 102), match='File2'>
                                                                                                                                                Whitespace : 0)   96
                                                                                                                                                             1)   97
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [5, 25] (105)
                                                                                                                                                IterBefore : [5, 23] (103)
                                                                                                                                                Type       : 'as' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(103, 105), match='as'>
                                                                                                                                                Whitespace : 0)   102
                                                                                                                                                             1)   103
                                                                                                                                           2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [5, 40] (120)
                                                                                                                                                IterBefore : [5, 26] (106)
                                                                                                                                                Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(106, 120), match='File2Decorated'>
                                                                                                                                                Whitespace : 0)   105
                                                                                                                                                             1)   106
                                                                                                                              IterAfter  : [5, 40] (120)
                                                                                                                              IterBefore : [5, 17] (97)
                                                                                                                              Type       : Sequence: [<generic_name>, 'as', <generic_name>] <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [5, 40] (120)
                                                                                                            IterBefore : [5, 17] (97)
                                                                                                            Type       : Content Item <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Comma and Content, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                       2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                          IterAfter  : None
                                                                                          IterBefore : [5, 17] (97)
                                                                                          Type       : Content Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : None
                                                                        IterBefore : [5, 17] (97)
                                                                        Type       : Or: (Grouped, Content Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [7, 1] (122)
                                                                        IterBefore : [5, 40] (120)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 122
                                                                                     Start : 120
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ImportStatement.ImportStatement.NodeInfo'>
                                                                   ImportItems       : File2 : File2Decorated
                                                                   ImportType        : ImportType.SourceIsDirectory
                                                                   SourceFilename    : <generic_root>/File2.TheLanguage
                                                      IterAfter  : [7, 1] (122)
                                                      IterBefore : [5, 1] (81)
                                                      Type       : Import Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [7, 1] (122)
                                    IterBefore : [5, 1] (81)
                                    Type       : 1.0.0 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [7, 1] (122)
                  IterBefore : [5, 1] (81)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             4)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [7, 5] (126)
                                                                        IterBefore : [7, 1] (122)
                                                                        Type       : 'from' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(122, 126), match='from'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [7, 13] (134)
                                                                        IterBefore : [7, 6] (127)
                                                                        Type       : <dotted_generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(127, 134), match='...Dir1'>
                                                                        Whitespace : 0)   126
                                                                                     1)   127
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [7, 20] (141)
                                                                        IterBefore : [7, 14] (135)
                                                                        Type       : 'import' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(135, 141), match='import'>
                                                                        Whitespace : 0)   134
                                                                                     1)   135
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                              IsIgnored  : False
                                                                                                                              IterAfter  : [7, 26] (147)
                                                                                                                              IterBefore : [7, 21] (142)
                                                                                                                              Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                           Match : <_sre.SRE_Match object; span=(142, 147), match='File3'>
                                                                                                                              Whitespace : 0)   141
                                                                                                                                           1)   142
                                                                                                            IterAfter  : [7, 26] (147)
                                                                                                            IterBefore : [7, 21] (142)
                                                                                                            Type       : Content Item <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Comma and Content, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                       2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                          IterAfter  : None
                                                                                          IterBefore : [7, 21] (142)
                                                                                          Type       : Content Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : None
                                                                        IterBefore : [7, 21] (142)
                                                                        Type       : Or: (Grouped, Content Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [8, 1] (148)
                                                                        IterBefore : [7, 26] (147)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 148
                                                                                     Start : 147
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ImportStatement.ImportStatement.NodeInfo'>
                                                                   ImportItems       : File3 : File3
                                                                   ImportType        : ImportType.SourceIsDirectory
                                                                   SourceFilename    : <generic_root>/Dir1/File3.TheLanguage
                                                      IterAfter  : [8, 1] (148)
                                                      IterBefore : [7, 1] (122)
                                                      Type       : Import Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [8, 1] (148)
                                    IterBefore : [7, 1] (122)
                                    Type       : 1.0.0 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [8, 1] (148)
                  IterBefore : [7, 1] (122)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             5)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [8, 5] (152)
                                                                        IterBefore : [8, 1] (148)
                                                                        Type       : 'from' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(148, 152), match='from'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [8, 13] (160)
                                                                        IterBefore : [8, 6] (153)
                                                                        Type       : <dotted_generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(153, 160), match='...Dir1'>
                                                                        Whitespace : 0)   152
                                                                                     1)   153
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [8, 20] (167)
                                                                        IterBefore : [8, 14] (161)
                                                                        Type       : 'import' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(161, 167), match='import'>
                                                                        Whitespace : 0)   160
                                                                                     1)   161
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [8, 26] (173)
                                                                                                                                                IterBefore : [8, 21] (168)
                                                                                                                                                Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(168, 173), match='File3'>
                                                                                                                                                Whitespace : 0)   167
                                                                                                                                                             1)   168
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [8, 29] (176)
                                                                                                                                                IterBefore : [8, 27] (174)
                                                                                                                                                Type       : 'as' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(174, 176), match='as'>
                                                                                                                                                Whitespace : 0)   173
                                                                                                                                                             1)   174
                                                                                                                                           2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [8, 44] (191)
                                                                                                                                                IterBefore : [8, 30] (177)
                                                                                                                                                Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(177, 191), match='File3Decorated'>
                                                                                                                                                Whitespace : 0)   176
                                                                                                                                                             1)   177
                                                                                                                              IterAfter  : [8, 44] (191)
                                                                                                                              IterBefore : [8, 21] (168)
                                                                                                                              Type       : Sequence: [<generic_name>, 'as', <generic_name>] <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [8, 44] (191)
                                                                                                            IterBefore : [8, 21] (168)
                                                                                                            Type       : Content Item <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Comma and Content, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                       2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                          IterAfter  : None
                                                                                          IterBefore : [8, 21] (168)
                                                                                          Type       : Content Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : None
                                                                        IterBefore : [8, 21] (168)
                                                                        Type       : Or: (Grouped, Content Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [10, 1] (193)
                                                                        IterBefore : [8, 44] (191)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 193
                                                                                     Start : 191
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ImportStatement.ImportStatement.NodeInfo'>
                                                                   ImportItems       : File3 : File3Decorated
                                                                   ImportType        : ImportType.SourceIsDirectory
                                                                   SourceFilename    : <generic_root>/Dir1/File3.TheLanguage
                                                      IterAfter  : [10, 1] (193)
                                                      IterBefore : [8, 1] (148)
                                                      Type       : Import Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [10, 1] (193)
                                    IterBefore : [8, 1] (148)
                                    Type       : 1.0.0 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [10, 1] (193)
                  IterBefore : [8, 1] (148)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             6)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [10, 5] (197)
                                                                        IterBefore : [10, 1] (193)
                                                                        Type       : 'from' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(193, 197), match='from'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [10, 16] (208)
                                                                        IterBefore : [10, 6] (198)
                                                                        Type       : <dotted_generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(198, 208), match='.Dir2.Dir3'>
                                                                        Whitespace : 0)   197
                                                                                     1)   198
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [10, 23] (215)
                                                                        IterBefore : [10, 17] (209)
                                                                        Type       : 'import' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(209, 215), match='import'>
                                                                        Whitespace : 0)   208
                                                                                     1)   209
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                              IsIgnored  : False
                                                                                                                              IterAfter  : [10, 29] (221)
                                                                                                                              IterBefore : [10, 24] (216)
                                                                                                                              Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                           Match : <_sre.SRE_Match object; span=(216, 221), match='File4'>
                                                                                                                              Whitespace : 0)   215
                                                                                                                                           1)   216
                                                                                                            IterAfter  : [10, 29] (221)
                                                                                                            IterBefore : [10, 24] (216)
                                                                                                            Type       : Content Item <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Comma and Content, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                       2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                          IterAfter  : None
                                                                                          IterBefore : [10, 24] (216)
                                                                                          Type       : Content Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : None
                                                                        IterBefore : [10, 24] (216)
                                                                        Type       : Or: (Grouped, Content Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [11, 1] (222)
                                                                        IterBefore : [10, 29] (221)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 222
                                                                                     Start : 221
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ImportStatement.ImportStatement.NodeInfo'>
                                                                   ImportItems       : File4 : File4
                                                                   ImportType        : ImportType.SourceIsDirectory
                                                                   SourceFilename    : <generic_root>/Statements/IntegrationTests/Dir2/Dir3/File4.TheLanguage
                                                      IterAfter  : [11, 1] (222)
                                                      IterBefore : [10, 1] (193)
                                                      Type       : Import Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [11, 1] (222)
                                    IterBefore : [10, 1] (193)
                                    Type       : 1.0.0 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [11, 1] (222)
                  IterBefore : [10, 1] (193)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             7)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [11, 5] (226)
                                                                        IterBefore : [11, 1] (222)
                                                                        Type       : 'from' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(222, 226), match='from'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [11, 16] (237)
                                                                        IterBefore : [11, 6] (227)
                                                                        Type       : <dotted_generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(227, 237), match='.Dir2.Dir3'>
                                                                        Whitespace : 0)   226
                                                                                     1)   227
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [11, 23] (244)
                                                                        IterBefore : [11, 17] (238)
                                                                        Type       : 'import' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(238, 244), match='import'>
                                                                        Whitespace : 0)   237
                                                                                     1)   238
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [11, 29] (250)
                                                                                                                                                IterBefore : [11, 24] (245)
                                                                                                                                                Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(245, 250), match='File4'>
                                                                                                                                                Whitespace : 0)   244
                                                                                                                                                             1)   245
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [11, 32] (253)
                                                                                                                                                IterBefore : [11, 30] (251)
                                                                                                                                                Type       : 'as' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(251, 253), match='as'>
                                                                                                                                                Whitespace : 0)   250
                                                                                                                                                             1)   251
                                                                                                                                           2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [11, 47] (268)
                                                                                                                                                IterBefore : [11, 33] (254)
                                                                                                                                                Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(254, 268), match='File4Decorated'>
                                                                                                                                                Whitespace : 0)   253
                                                                                                                                                             1)   254
                                                                                                                              IterAfter  : [11, 47] (268)
                                                                                                                              IterBefore : [11, 24] (245)
                                                                                                                              Type       : Sequence: [<generic_name>, 'as', <generic_name>] <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [11, 47] (268)
                                                                                                            IterBefore : [11, 24] (245)
                                                                                                            Type       : Content Item <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Comma and Content, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                       2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : -- empty list --
                                                                                                            IterAfter  : None
                                                                                                            IterBefore : None
                                                                                                            Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                          IterAfter  : None
                                                                                          IterBefore : [11, 24] (245)
                                                                                          Type       : Content Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : None
                                                                        IterBefore : [11, 24] (245)
                                                                        Type       : Or: (Grouped, Content Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [12, 1] (269)
                                                                        IterBefore : [11, 47] (268)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 269
                                                                                     Start : 268
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ImportStatement.ImportStatement.NodeInfo'>
                                                                   ImportItems       : File4 : File4Decorated
                                                                   ImportType        : ImportType.SourceIsDirectory
                                                                   SourceFilename    : <generic_root>/Statements/IntegrationTests/Dir2/Dir3/File4.TheLanguage
                                                      IterAfter  : [12, 1] (269)
                                                      IterBefore : [11, 1] (222)
                                                      Type       : Import Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [12, 1] (269)
                                    IterBefore : [11, 1] (222)
                                    Type       : 1.0.0 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [12, 1] (269)
                  IterBefore : [11, 1] (222)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
IterAfter  : [12, 1] (269)
IterBefore : [1, 1] (0)
Type       : <None>
