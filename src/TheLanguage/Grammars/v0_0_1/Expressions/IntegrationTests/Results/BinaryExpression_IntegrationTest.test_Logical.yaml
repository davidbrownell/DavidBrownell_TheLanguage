# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 1] (0)"
                            IterEnd: "[1, 5] (4)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(0, 4), match='var1'>"
                            Whitespace: None
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                            Name: "var1"
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 5
                                Line: 1
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 5
                                Line: 1
                        IterBegin: "[1, 1] (0)"
                        IterEnd: "[1, 5] (4)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 5] (4)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 5] (4)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 6] (5)"
                IterEnd: "[1, 7] (6)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(5, 6), match='='>"
                Whitespace:
                  - 4
                  - 5
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[1, 8] (7)"
                                                IterEnd: "[1, 11] (10)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(7, 10), match='one'>"
                                                Whitespace:
                                                  - 6
                                                  - 7
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                Name: "one"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 1
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 11
                                                    Line: 1
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 1
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 11
                                                    Line: 1
                                            IterBegin: "[1, 8] (7)"
                                            IterEnd: "[1, 11] (10)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[1, 8] (7)"
                                        IterEnd: "[1, 11] (10)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                            Name: "one"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 8
                                                Line: 1
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 11
                                                Line: 1
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 8
                                                Line: 1
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 11
                                                Line: 1
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 8
                                            Line: 1
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 11
                                            Line: 1
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 8
                                            Line: 1
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 11
                                            Line: 1
                                    IterBegin: "[1, 8] (7)"
                                    IterEnd: "[1, 11] (10)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[1, 8] (7)"
                                IterEnd: "[1, 11] (10)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[1, 8] (7)"
                            IterEnd: "[1, 11] (10)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 12] (11)"
                                IterEnd: "[1, 15] (14)"
                                Type: "'and' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(11, 14), match='and'>"
                                Whitespace:
                                  - 10
                                  - 11
                            IterBegin: "[1, 12] (11)"
                            IterEnd: "[1, 15] (14)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[1, 16] (15)"
                                                IterEnd: "[1, 19] (18)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(15, 18), match='two'>"
                                                Whitespace:
                                                  - 14
                                                  - 15
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                Name: "two"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 16
                                                    Line: 1
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 19
                                                    Line: 1
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 16
                                                    Line: 1
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 19
                                                    Line: 1
                                            IterBegin: "[1, 16] (15)"
                                            IterEnd: "[1, 19] (18)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[1, 16] (15)"
                                        IterEnd: "[1, 19] (18)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                            Name: "two"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 16
                                                Line: 1
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 19
                                                Line: 1
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 16
                                                Line: 1
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 19
                                                Line: 1
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 16
                                            Line: 1
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 19
                                            Line: 1
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 16
                                            Line: 1
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 19
                                            Line: 1
                                    IterBegin: "[1, 16] (15)"
                                    IterEnd: "[1, 19] (18)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[1, 16] (15)"
                                IterEnd: "[1, 19] (18)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[1, 16] (15)"
                            IterEnd: "[1, 19] (18)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerData'>
                            Left: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "one"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 8
                                        Line: 1
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 11
                                        Line: 1
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 8
                                        Line: 1
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 11
                                        Line: 1
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 8
                                    Line: 1
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 11
                                    Line: 1
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 8
                                    Line: 1
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 11
                                    Line: 1
                            Operator: "OperatorType.LogicalAnd"
                            Right: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "two"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 16
                                        Line: 1
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 19
                                        Line: 1
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 16
                                        Line: 1
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 19
                                        Line: 1
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 16
                                    Line: 1
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 19
                                    Line: 1
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 16
                                    Line: 1
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 19
                                    Line: 1
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerRegions'>
                            Left: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 8
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 11
                                Line: 1
                            Operator: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 12
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 15
                                Line: 1
                            Right: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 16
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 19
                                Line: 1
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 8
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 19
                                Line: 1
                        IterBegin: "[1, 8] (7)"
                        IterEnd: "[1, 19] (18)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 8] (7)"
                    IterEnd: "[1, 19] (18)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 8] (7)"
                IterEnd: "[1, 19] (18)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 19] (18)"
                IterEnd: "[2, 1] (19)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 19
                  Start: 18
                Whitespace: None
            IterBegin: "[1, 1] (0)"
            IterEnd: "[2, 1] (19)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[2, 1] (19)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[2, 1] (19)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 1] (19)"
                            IterEnd: "[2, 5] (23)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(19, 23), match='var2'>"
                            Whitespace: None
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                            Name: "var2"
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 2
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 5
                                Line: 2
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 2
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 5
                                Line: 2
                        IterBegin: "[2, 1] (19)"
                        IterEnd: "[2, 5] (23)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[2, 1] (19)"
                    IterEnd: "[2, 5] (23)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 1] (19)"
                IterEnd: "[2, 5] (23)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 6] (24)"
                IterEnd: "[2, 7] (25)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(24, 25), match='='>"
                Whitespace:
                  - 23
                  - 24
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 8] (26)"
                                                IterEnd: "[2, 13] (31)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(26, 31), match='three'>"
                                                Whitespace:
                                                  - 25
                                                  - 26
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                Name: "three"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 2
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 13
                                                    Line: 2
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 2
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 13
                                                    Line: 2
                                            IterBegin: "[2, 8] (26)"
                                            IterEnd: "[2, 13] (31)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[2, 8] (26)"
                                        IterEnd: "[2, 13] (31)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                            Name: "three"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 8
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 2
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 8
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 2
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 8
                                            Line: 2
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 13
                                            Line: 2
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 8
                                            Line: 2
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 13
                                            Line: 2
                                    IterBegin: "[2, 8] (26)"
                                    IterEnd: "[2, 13] (31)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[2, 8] (26)"
                                IterEnd: "[2, 13] (31)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[2, 8] (26)"
                            IterEnd: "[2, 13] (31)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[2, 14] (32)"
                                IterEnd: "[2, 16] (34)"
                                Type: "'or' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(32, 34), match='or'>"
                                Whitespace:
                                  - 31
                                  - 32
                            IterBegin: "[2, 14] (32)"
                            IterEnd: "[2, 16] (34)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 17] (35)"
                                                IterEnd: "[2, 21] (39)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(35, 39), match='four'>"
                                                Whitespace:
                                                  - 34
                                                  - 35
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                Name: "four"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 17
                                                    Line: 2
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 21
                                                    Line: 2
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 17
                                                    Line: 2
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 21
                                                    Line: 2
                                            IterBegin: "[2, 17] (35)"
                                            IterEnd: "[2, 21] (39)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[2, 17] (35)"
                                        IterEnd: "[2, 21] (39)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                            Name: "four"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 17
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 21
                                                Line: 2
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 17
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 21
                                                Line: 2
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 17
                                            Line: 2
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 21
                                            Line: 2
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 17
                                            Line: 2
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 21
                                            Line: 2
                                    IterBegin: "[2, 17] (35)"
                                    IterEnd: "[2, 21] (39)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[2, 17] (35)"
                                IterEnd: "[2, 21] (39)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[2, 17] (35)"
                            IterEnd: "[2, 21] (39)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerData'>
                            Left: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "three"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 8
                                        Line: 2
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 13
                                        Line: 2
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 8
                                        Line: 2
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 13
                                        Line: 2
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 8
                                    Line: 2
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 13
                                    Line: 2
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 8
                                    Line: 2
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 13
                                    Line: 2
                            Operator: "OperatorType.LogicalOr"
                            Right: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "four"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 17
                                        Line: 2
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 21
                                        Line: 2
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 17
                                        Line: 2
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 21
                                        Line: 2
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 17
                                    Line: 2
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 21
                                    Line: 2
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 17
                                    Line: 2
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 21
                                    Line: 2
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerRegions'>
                            Left: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 8
                                Line: 2
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 13
                                Line: 2
                            Operator: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 14
                                Line: 2
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 16
                                Line: 2
                            Right: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 17
                                Line: 2
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 21
                                Line: 2
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 8
                                Line: 2
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 21
                                Line: 2
                        IterBegin: "[2, 8] (26)"
                        IterEnd: "[2, 21] (39)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[2, 8] (26)"
                    IterEnd: "[2, 21] (39)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 8] (26)"
                IterEnd: "[2, 21] (39)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 21] (39)"
                IterEnd: "[3, 1] (40)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 40
                  Start: 39
                Whitespace: None
            IterBegin: "[2, 1] (19)"
            IterEnd: "[3, 1] (40)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[2, 1] (19)"
        IterEnd: "[3, 1] (40)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 1] (19)"
    IterEnd: "[3, 1] (40)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[3, 1] (40)"
                            IterEnd: "[3, 5] (44)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(40, 44), match='var3'>"
                            Whitespace: None
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                            Name: "var3"
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 3
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 5
                                Line: 3
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 3
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 5
                                Line: 3
                        IterBegin: "[3, 1] (40)"
                        IterEnd: "[3, 5] (44)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[3, 1] (40)"
                    IterEnd: "[3, 5] (44)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[3, 1] (40)"
                IterEnd: "[3, 5] (44)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[3, 6] (45)"
                IterEnd: "[3, 7] (46)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(45, 46), match='='>"
                Whitespace:
                  - 44
                  - 45
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[3, 8] (47)"
                                                IterEnd: "[3, 12] (51)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(47, 51), match='five'>"
                                                Whitespace:
                                                  - 46
                                                  - 47
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                Name: "five"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 3
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 12
                                                    Line: 3
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 3
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 12
                                                    Line: 3
                                            IterBegin: "[3, 8] (47)"
                                            IterEnd: "[3, 12] (51)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[3, 8] (47)"
                                        IterEnd: "[3, 12] (51)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                            Name: "five"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 8
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 12
                                                Line: 3
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 8
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 12
                                                Line: 3
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 8
                                            Line: 3
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 12
                                            Line: 3
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 8
                                            Line: 3
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 12
                                            Line: 3
                                    IterBegin: "[3, 8] (47)"
                                    IterEnd: "[3, 12] (51)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[3, 8] (47)"
                                IterEnd: "[3, 12] (51)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[3, 8] (47)"
                            IterEnd: "[3, 12] (51)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[3, 13] (52)"
                                IterEnd: "[3, 15] (54)"
                                Type: "'in' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(52, 54), match='in'>"
                                Whitespace:
                                  - 51
                                  - 52
                            IterBegin: "[3, 13] (52)"
                            IterEnd: "[3, 15] (54)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[3, 16] (55)"
                                                IterEnd: "[3, 19] (58)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(55, 58), match='six'>"
                                                Whitespace:
                                                  - 54
                                                  - 55
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                Name: "six"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 16
                                                    Line: 3
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 19
                                                    Line: 3
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 16
                                                    Line: 3
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 19
                                                    Line: 3
                                            IterBegin: "[3, 16] (55)"
                                            IterEnd: "[3, 19] (58)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[3, 16] (55)"
                                        IterEnd: "[3, 19] (58)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                            Name: "six"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 16
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 19
                                                Line: 3
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 16
                                                Line: 3
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 19
                                                Line: 3
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 16
                                            Line: 3
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 19
                                            Line: 3
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 16
                                            Line: 3
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 19
                                            Line: 3
                                    IterBegin: "[3, 16] (55)"
                                    IterEnd: "[3, 19] (58)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[3, 16] (55)"
                                IterEnd: "[3, 19] (58)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[3, 16] (55)"
                            IterEnd: "[3, 19] (58)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerData'>
                            Left: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "five"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 8
                                        Line: 3
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 12
                                        Line: 3
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 8
                                        Line: 3
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 12
                                        Line: 3
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 8
                                    Line: 3
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 12
                                    Line: 3
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 8
                                    Line: 3
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 12
                                    Line: 3
                            Operator: "OperatorType.LogicalIn"
                            Right: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "six"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 16
                                        Line: 3
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 19
                                        Line: 3
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 16
                                        Line: 3
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 19
                                        Line: 3
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 16
                                    Line: 3
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 19
                                    Line: 3
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 16
                                    Line: 3
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 19
                                    Line: 3
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerRegions'>
                            Left: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 8
                                Line: 3
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 12
                                Line: 3
                            Operator: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 13
                                Line: 3
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 15
                                Line: 3
                            Right: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 16
                                Line: 3
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 19
                                Line: 3
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 8
                                Line: 3
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 19
                                Line: 3
                        IterBegin: "[3, 8] (47)"
                        IterEnd: "[3, 19] (58)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[3, 8] (47)"
                    IterEnd: "[3, 19] (58)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[3, 8] (47)"
                IterEnd: "[3, 19] (58)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[3, 19] (58)"
                IterEnd: "[4, 1] (59)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 59
                  Start: 58
                Whitespace: None
            IterBegin: "[3, 1] (40)"
            IterEnd: "[4, 1] (59)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[3, 1] (40)"
        IterEnd: "[4, 1] (59)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[3, 1] (40)"
    IterEnd: "[4, 1] (59)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[4, 1] (59)"
                            IterEnd: "[4, 5] (63)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(59, 63), match='var4'>"
                            Whitespace: None
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                            Name: "var4"
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 4
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 5
                                Line: 4
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 4
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 5
                                Line: 4
                        IterBegin: "[4, 1] (59)"
                        IterEnd: "[4, 5] (63)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[4, 1] (59)"
                    IterEnd: "[4, 5] (63)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 1] (59)"
                IterEnd: "[4, 5] (63)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 6] (64)"
                IterEnd: "[4, 7] (65)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(64, 65), match='='>"
                Whitespace:
                  - 63
                  - 64
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[4, 8] (66)"
                                                IterEnd: "[4, 13] (71)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(66, 71), match='seven'>"
                                                Whitespace:
                                                  - 65
                                                  - 66
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                Name: "seven"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 4
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 13
                                                    Line: 4
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 4
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 13
                                                    Line: 4
                                            IterBegin: "[4, 8] (66)"
                                            IterEnd: "[4, 13] (71)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[4, 8] (66)"
                                        IterEnd: "[4, 13] (71)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                            Name: "seven"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 8
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 4
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 8
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 4
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 8
                                            Line: 4
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 13
                                            Line: 4
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 8
                                            Line: 4
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 13
                                            Line: 4
                                    IterBegin: "[4, 8] (66)"
                                    IterEnd: "[4, 13] (71)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[4, 8] (66)"
                                IterEnd: "[4, 13] (71)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[4, 8] (66)"
                            IterEnd: "[4, 13] (71)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[4, 14] (72)"
                                IterEnd: "[4, 16] (74)"
                                Type: "'is' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(72, 74), match='is'>"
                                Whitespace:
                                  - 71
                                  - 72
                            IterBegin: "[4, 14] (72)"
                            IterEnd: "[4, 16] (74)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[4, 17] (75)"
                                                IterEnd: "[4, 22] (80)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(75, 80), match='eight'>"
                                                Whitespace:
                                                  - 74
                                                  - 75
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                Name: "eight"
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 17
                                                    Line: 4
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 22
                                                    Line: 4
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 17
                                                    Line: 4
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 22
                                                    Line: 4
                                            IterBegin: "[4, 17] (75)"
                                            IterEnd: "[4, 22] (80)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[4, 17] (75)"
                                        IterEnd: "[4, 22] (80)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                            Name: "eight"
                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 17
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 22
                                                Line: 4
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 17
                                                Line: 4
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 22
                                                Line: 4
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 17
                                            Line: 4
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 22
                                            Line: 4
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 17
                                            Line: 4
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 22
                                            Line: 4
                                    IterBegin: "[4, 17] (75)"
                                    IterEnd: "[4, 22] (80)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[4, 17] (75)"
                                IterEnd: "[4, 22] (80)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[4, 17] (75)"
                            IterEnd: "[4, 22] (80)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerData'>
                            Left: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "seven"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 8
                                        Line: 4
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 13
                                        Line: 4
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 8
                                        Line: 4
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 13
                                        Line: 4
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 8
                                    Line: 4
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 13
                                    Line: 4
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 8
                                    Line: 4
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 13
                                    Line: 4
                            Operator: "OperatorType.LogicalIs"
                            Right: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "eight"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 17
                                        Line: 4
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 22
                                        Line: 4
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 17
                                        Line: 4
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 22
                                        Line: 4
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 17
                                    Line: 4
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 22
                                    Line: 4
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 17
                                    Line: 4
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 22
                                    Line: 4
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.BinaryExpressionLexerInfo.BinaryExpressionLexerRegions'>
                            Left: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 8
                                Line: 4
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 13
                                Line: 4
                            Operator: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 14
                                Line: 4
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 16
                                Line: 4
                            Right: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 17
                                Line: 4
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 22
                                Line: 4
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 8
                                Line: 4
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 22
                                Line: 4
                        IterBegin: "[4, 8] (66)"
                        IterEnd: "[4, 22] (80)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[4, 8] (66)"
                    IterEnd: "[4, 22] (80)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 8] (66)"
                IterEnd: "[4, 22] (80)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 22] (80)"
                IterEnd: "[5, 1] (81)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 81
                  Start: 80
                Whitespace: None
            IterBegin: "[4, 1] (59)"
            IterEnd: "[5, 1] (81)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[4, 1] (59)"
        IterEnd: "[5, 1] (81)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[4, 1] (59)"
    IterEnd: "[5, 1] (81)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[5, 1] (81)"
Type: "<None>"
