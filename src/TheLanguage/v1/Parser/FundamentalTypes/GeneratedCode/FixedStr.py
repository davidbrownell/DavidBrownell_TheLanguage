# ----------------------------------------------------------------------
# This code was automatically generated by the PythonTarget. Any changes made to this
# file will be overwritten during the next generation!
# ----------------------------------------------------------------------

from v1.Lexer.Location import Location
from v1.Parser.MiniLanguage.Types.BooleanType import BooleanType
from v1.Parser.MiniLanguage.Types.CharacterType import CharacterType
from v1.Parser.MiniLanguage.Types.CustomType import CustomType
from v1.Parser.MiniLanguage.Types.StringType import StringType
from v1.Parser.ParserInfos.Common.ClassModifier import ClassModifier
from v1.Parser.ParserInfos.Common.ConstraintArgumentsParserInfo import ConstraintArgumentParserInfo
from v1.Parser.ParserInfos.Common.ConstraintArgumentsParserInfo import ConstraintArgumentsParserInfo
from v1.Parser.ParserInfos.Common.ConstraintParametersParserInfo import ConstraintParameterParserInfo
from v1.Parser.ParserInfos.Common.ConstraintParametersParserInfo import ConstraintParametersParserInfo
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParameterParserInfo
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParametersParserInfo
from v1.Parser.ParserInfos.Common.MethodModifier import MethodModifier
from v1.Parser.ParserInfos.Common.MutabilityModifier import MutabilityModifier
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateParametersParserInfo
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateTypeParameterParserInfo
from v1.Parser.ParserInfos.Common.VisibilityModifier import VisibilityModifier
from v1.Parser.ParserInfos.Expressions.BooleanExpressionParserInfo import BooleanExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.CharacterExpressionParserInfo import CharacterExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.FuncOrTypeExpressionParserInfo import FuncOrTypeExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.NoneExpressionParserInfo import NoneExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.VariableExpressionParserInfo import VariableExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.VariantExpressionParserInfo import VariantExpressionParserInfo
from v1.Parser.ParserInfos.ParserInfo import ParserInfoType
from v1.Parser.ParserInfos.Statements.ClassCapabilities.StandardCapabilities import StandardCapabilities
from v1.Parser.ParserInfos.Statements.ClassStatementParserInfo import ClassStatementDependencyParserInfo
from v1.Parser.ParserInfos.Statements.ClassStatementParserInfo import ClassStatementParserInfo
from v1.Parser.ParserInfos.Statements.FuncDefinitionStatementParserInfo import FuncDefinitionStatementParserInfo, OperatorType as FuncDefinitionStatementParserInfoOperatorType
from v1.Parser.ParserInfos.Statements.ImportStatementParserInfo import ImportStatementItemParserInfo
from v1.Parser.ParserInfos.Statements.ImportStatementParserInfo import ImportStatementParserInfo, ImportType as ImportStatementParserInfoImportType
from v1.Parser.Region import Region


# ----------------------------------------------------------------------
region_000000 = Region(begin=Location(line=16, column=34), end=Location(line=16, column=75))
region_000001 = Region(begin=Location(line=16, column=34), end=Location(line=16, column=49))
region_000002 = Region(begin=Location(line=16, column=53), end=Location(line=16, column=75))
region_000003 = Region(begin=Location(line=16, column=1), end=Location(line=19, column=1))
region_000004 = Region(begin=Location(line=16, column=6), end=Location(line=16, column=26))
region_000005 = Region(begin=Location(line=23, column=5), end=Location(line=23, column=9))
region_000006 = Region(begin=Location(line=23, column=25), end=Location(line=23, column=30))
region_000007 = Region(begin=Location(line=23, column=5), end=Location(line=24, column=1))
region_000008 = Region(begin=Location(line=23, column=10), end=Location(line=23, column=22))
region_000009 = Region(begin=Location(line=22, column=38), end=Location(line=24, column=2))
region_000010 = Region(begin=Location(line=25, column=53), end=Location(line=25, column=65))
region_000011 = Region(begin=Location(line=25, column=38), end=Location(line=25, column=65))
region_000012 = Region(begin=Location(line=25, column=38), end=Location(line=25, column=50))
region_000013 = Region(begin=Location(line=25, column=36), end=Location(line=25, column=67))
region_000014 = Region(begin=Location(line=25, column=13), end=Location(line=25, column=67))
region_000015 = Region(begin=Location(line=25, column=13), end=Location(line=25, column=35))
region_000016 = Region(begin=Location(line=27, column=40), end=Location(line=27, column=52))
region_000017 = Region(begin=Location(line=27, column=40), end=Location(line=27, column=48))
region_000018 = Region(begin=Location(line=27, column=49), end=Location(line=27, column=52))
region_000019 = Region(begin=Location(line=27, column=70), end=Location(line=27, column=78))
region_000020 = Region(begin=Location(line=27, column=69), end=Location(line=27, column=79))
region_000021 = Region(begin=Location(line=27, column=80), end=Location(line=27, column=92))
region_000022 = Region(begin=Location(line=27, column=80), end=Location(line=27, column=88))
region_000023 = Region(begin=Location(line=27, column=89), end=Location(line=27, column=92))
region_000024 = Region(begin=Location(line=27, column=80), end=Location(line=27, column=100))
region_000025 = Region(begin=Location(line=27, column=93), end=Location(line=27, column=100))
region_000026 = Region(begin=Location(line=27, column=79), end=Location(line=27, column=101))
region_000027 = Region(begin=Location(line=27, column=5), end=Location(line=28, column=1))
region_000028 = Region(begin=Location(line=27, column=24), end=Location(line=27, column=30))
region_000029 = Region(begin=Location(line=27, column=31), end=Location(line=27, column=39))
region_000030 = Region(begin=Location(line=27, column=53), end=Location(line=27, column=69))
region_000031 = Region(begin=Location(line=27, column=6), end=Location(line=27, column=14))
region_000032 = Region(begin=Location(line=27, column=16), end=Location(line=27, column=22))
region_000033 = Region(begin=Location(line=28, column=52), end=Location(line=28, column=60))
region_000034 = Region(begin=Location(line=28, column=51), end=Location(line=28, column=61))
region_000035 = Region(begin=Location(line=28, column=62), end=Location(line=28, column=74))
region_000036 = Region(begin=Location(line=28, column=62), end=Location(line=28, column=70))
region_000037 = Region(begin=Location(line=28, column=71), end=Location(line=28, column=74))
region_000038 = Region(begin=Location(line=28, column=62), end=Location(line=28, column=82))
region_000039 = Region(begin=Location(line=28, column=75), end=Location(line=28, column=82))
region_000040 = Region(begin=Location(line=28, column=61), end=Location(line=28, column=83))
region_000041 = Region(begin=Location(line=28, column=5), end=Location(line=29, column=1))
region_000042 = Region(begin=Location(line=28, column=16), end=Location(line=28, column=22))
region_000043 = Region(begin=Location(line=28, column=84), end=Location(line=28, column=93))
region_000044 = Region(begin=Location(line=28, column=23), end=Location(line=28, column=31))
region_000045 = Region(begin=Location(line=28, column=37), end=Location(line=28, column=51))
region_000046 = Region(begin=Location(line=28, column=6), end=Location(line=28, column=14))
region_000047 = Region(begin=Location(line=29, column=52), end=Location(line=29, column=60))
region_000048 = Region(begin=Location(line=29, column=51), end=Location(line=29, column=61))
region_000049 = Region(begin=Location(line=29, column=62), end=Location(line=29, column=74))
region_000050 = Region(begin=Location(line=29, column=62), end=Location(line=29, column=70))
region_000051 = Region(begin=Location(line=29, column=71), end=Location(line=29, column=74))
region_000052 = Region(begin=Location(line=29, column=62), end=Location(line=29, column=82))
region_000053 = Region(begin=Location(line=29, column=75), end=Location(line=29, column=82))
region_000054 = Region(begin=Location(line=29, column=61), end=Location(line=29, column=83))
region_000055 = Region(begin=Location(line=29, column=5), end=Location(line=31, column=1))
region_000056 = Region(begin=Location(line=29, column=16), end=Location(line=29, column=22))
region_000057 = Region(begin=Location(line=29, column=84), end=Location(line=29, column=87))
region_000058 = Region(begin=Location(line=29, column=23), end=Location(line=29, column=31))
region_000059 = Region(begin=Location(line=29, column=37), end=Location(line=29, column=51))
region_000060 = Region(begin=Location(line=29, column=6), end=Location(line=29, column=14))
region_000061 = Region(begin=Location(line=31, column=49), end=Location(line=31, column=57))
region_000062 = Region(begin=Location(line=31, column=48), end=Location(line=31, column=58))
region_000063 = Region(begin=Location(line=31, column=59), end=Location(line=31, column=71))
region_000064 = Region(begin=Location(line=31, column=59), end=Location(line=31, column=67))
region_000065 = Region(begin=Location(line=31, column=68), end=Location(line=31, column=71))
region_000066 = Region(begin=Location(line=31, column=59), end=Location(line=31, column=79))
region_000067 = Region(begin=Location(line=31, column=72), end=Location(line=31, column=79))
region_000068 = Region(begin=Location(line=31, column=58), end=Location(line=31, column=80))
region_000069 = Region(begin=Location(line=31, column=5), end=Location(line=32, column=1))
region_000070 = Region(begin=Location(line=31, column=16), end=Location(line=31, column=22))
region_000071 = Region(begin=Location(line=31, column=81), end=Location(line=31, column=90))
region_000072 = Region(begin=Location(line=31, column=23), end=Location(line=31, column=31))
region_000073 = Region(begin=Location(line=31, column=37), end=Location(line=31, column=48))
region_000074 = Region(begin=Location(line=31, column=6), end=Location(line=31, column=14))
region_000075 = Region(begin=Location(line=32, column=49), end=Location(line=32, column=57))
region_000076 = Region(begin=Location(line=32, column=48), end=Location(line=32, column=58))
region_000077 = Region(begin=Location(line=32, column=59), end=Location(line=32, column=71))
region_000078 = Region(begin=Location(line=32, column=59), end=Location(line=32, column=67))
region_000079 = Region(begin=Location(line=32, column=68), end=Location(line=32, column=71))
region_000080 = Region(begin=Location(line=32, column=59), end=Location(line=32, column=79))
region_000081 = Region(begin=Location(line=32, column=72), end=Location(line=32, column=79))
region_000082 = Region(begin=Location(line=32, column=58), end=Location(line=32, column=80))
region_000083 = Region(begin=Location(line=32, column=5), end=Location(line=34, column=1))
region_000084 = Region(begin=Location(line=32, column=16), end=Location(line=32, column=22))
region_000085 = Region(begin=Location(line=32, column=81), end=Location(line=32, column=84))
region_000086 = Region(begin=Location(line=32, column=23), end=Location(line=32, column=31))
region_000087 = Region(begin=Location(line=32, column=37), end=Location(line=32, column=48))
region_000088 = Region(begin=Location(line=32, column=6), end=Location(line=32, column=14))
region_000089 = Region(begin=Location(line=34, column=32), end=Location(line=34, column=44))
region_000090 = Region(begin=Location(line=34, column=32), end=Location(line=34, column=40))
region_000091 = Region(begin=Location(line=34, column=41), end=Location(line=34, column=44))
region_000092 = Region(begin=Location(line=34, column=5), end=Location(line=36, column=1))
region_000093 = Region(begin=Location(line=34, column=16), end=Location(line=34, column=22))
region_000094 = Region(begin=Location(line=34, column=58), end=Location(line=34, column=67))
region_000095 = Region(begin=Location(line=34, column=23), end=Location(line=34, column=31))
region_000096 = Region(begin=Location(line=34, column=45), end=Location(line=34, column=55))
region_000097 = Region(begin=Location(line=34, column=55), end=Location(line=34, column=57))
region_000098 = Region(begin=Location(line=34, column=6), end=Location(line=34, column=14))
region_000099 = Region(begin=Location(line=36, column=32), end=Location(line=36, column=40))
region_000100 = Region(begin=Location(line=36, column=32), end=Location(line=36, column=36))
region_000101 = Region(begin=Location(line=36, column=37), end=Location(line=36, column=40))
region_000102 = Region(begin=Location(line=36, column=5), end=Location(line=37, column=1))
region_000103 = Region(begin=Location(line=36, column=16), end=Location(line=36, column=22))
region_000104 = Region(begin=Location(line=36, column=54), end=Location(line=36, column=63))
region_000105 = Region(begin=Location(line=36, column=23), end=Location(line=36, column=31))
region_000106 = Region(begin=Location(line=36, column=41), end=Location(line=36, column=51))
region_000107 = Region(begin=Location(line=36, column=51), end=Location(line=36, column=53))
region_000108 = Region(begin=Location(line=36, column=6), end=Location(line=36, column=14))
region_000109 = Region(begin=Location(line=37, column=32), end=Location(line=37, column=39))
region_000110 = Region(begin=Location(line=37, column=32), end=Location(line=37, column=35))
region_000111 = Region(begin=Location(line=37, column=36), end=Location(line=37, column=39))
region_000112 = Region(begin=Location(line=37, column=5), end=Location(line=39, column=1))
region_000113 = Region(begin=Location(line=37, column=16), end=Location(line=37, column=22))
region_000114 = Region(begin=Location(line=37, column=56), end=Location(line=37, column=65))
region_000115 = Region(begin=Location(line=37, column=23), end=Location(line=37, column=31))
region_000116 = Region(begin=Location(line=37, column=40), end=Location(line=37, column=53))
region_000117 = Region(begin=Location(line=37, column=53), end=Location(line=37, column=55))
region_000118 = Region(begin=Location(line=37, column=6), end=Location(line=37, column=14))
region_000119 = Region(begin=Location(line=39, column=40), end=Location(line=39, column=57))
region_000120 = Region(begin=Location(line=39, column=40), end=Location(line=39, column=53))
region_000121 = Region(begin=Location(line=39, column=54), end=Location(line=39, column=57))
region_000122 = Region(begin=Location(line=39, column=70), end=Location(line=39, column=88))
region_000123 = Region(begin=Location(line=39, column=70), end=Location(line=39, column=78))
region_000124 = Region(begin=Location(line=39, column=79), end=Location(line=39, column=88))
region_000125 = Region(begin=Location(line=39, column=70), end=Location(line=39, column=93))
region_000126 = Region(begin=Location(line=39, column=89), end=Location(line=39, column=93))
region_000127 = Region(begin=Location(line=39, column=95), end=Location(line=39, column=108))
region_000128 = Region(begin=Location(line=39, column=95), end=Location(line=39, column=98))
region_000129 = Region(begin=Location(line=39, column=99), end=Location(line=39, column=108))
region_000130 = Region(begin=Location(line=39, column=95), end=Location(line=39, column=113))
region_000131 = Region(begin=Location(line=39, column=109), end=Location(line=39, column=113))
region_000132 = Region(begin=Location(line=39, column=69), end=Location(line=39, column=114))
region_000133 = Region(begin=Location(line=39, column=70), end=Location(line=39, column=113))
region_000134 = Region(begin=Location(line=39, column=5), end=Location(line=41, column=1))
region_000135 = Region(begin=Location(line=39, column=24), end=Location(line=39, column=30))
region_000136 = Region(begin=Location(line=39, column=31), end=Location(line=39, column=39))
region_000137 = Region(begin=Location(line=39, column=58), end=Location(line=39, column=69))
region_000138 = Region(begin=Location(line=39, column=6), end=Location(line=39, column=14))
region_000139 = Region(begin=Location(line=39, column=16), end=Location(line=39, column=22))
region_000140 = Region(begin=Location(line=41, column=32), end=Location(line=41, column=40))
region_000141 = Region(begin=Location(line=41, column=32), end=Location(line=41, column=36))
region_000142 = Region(begin=Location(line=41, column=37), end=Location(line=41, column=40))
region_000143 = Region(begin=Location(line=41, column=51), end=Location(line=41, column=64))
region_000144 = Region(begin=Location(line=41, column=51), end=Location(line=41, column=54))
region_000145 = Region(begin=Location(line=41, column=55), end=Location(line=41, column=64))
region_000146 = Region(begin=Location(line=41, column=51), end=Location(line=41, column=69))
region_000147 = Region(begin=Location(line=41, column=65), end=Location(line=41, column=69))
region_000148 = Region(begin=Location(line=41, column=50), end=Location(line=41, column=70))
region_000149 = Region(begin=Location(line=41, column=5), end=Location(line=42, column=1))
region_000150 = Region(begin=Location(line=41, column=16), end=Location(line=41, column=22))
region_000151 = Region(begin=Location(line=41, column=71), end=Location(line=41, column=80))
region_000152 = Region(begin=Location(line=41, column=23), end=Location(line=41, column=31))
region_000153 = Region(begin=Location(line=41, column=41), end=Location(line=41, column=50))
region_000154 = Region(begin=Location(line=41, column=6), end=Location(line=41, column=14))
region_000155 = Region(begin=Location(line=42, column=32), end=Location(line=42, column=40))
region_000156 = Region(begin=Location(line=42, column=32), end=Location(line=42, column=36))
region_000157 = Region(begin=Location(line=42, column=37), end=Location(line=42, column=40))
region_000158 = Region(begin=Location(line=42, column=54), end=Location(line=42, column=67))
region_000159 = Region(begin=Location(line=42, column=54), end=Location(line=42, column=57))
region_000160 = Region(begin=Location(line=42, column=58), end=Location(line=42, column=67))
region_000161 = Region(begin=Location(line=42, column=54), end=Location(line=42, column=72))
region_000162 = Region(begin=Location(line=42, column=68), end=Location(line=42, column=72))
region_000163 = Region(begin=Location(line=42, column=53), end=Location(line=42, column=73))
region_000164 = Region(begin=Location(line=42, column=5), end=Location(line=43, column=1))
region_000165 = Region(begin=Location(line=42, column=16), end=Location(line=42, column=22))
region_000166 = Region(begin=Location(line=42, column=74), end=Location(line=42, column=83))
region_000167 = Region(begin=Location(line=42, column=23), end=Location(line=42, column=31))
region_000168 = Region(begin=Location(line=42, column=41), end=Location(line=42, column=53))
region_000169 = Region(begin=Location(line=42, column=6), end=Location(line=42, column=14))
region_000170 = Region(begin=Location(line=43, column=32), end=Location(line=43, column=40))
region_000171 = Region(begin=Location(line=43, column=32), end=Location(line=43, column=36))
region_000172 = Region(begin=Location(line=43, column=37), end=Location(line=43, column=40))
region_000173 = Region(begin=Location(line=43, column=50), end=Location(line=43, column=63))
region_000174 = Region(begin=Location(line=43, column=50), end=Location(line=43, column=53))
region_000175 = Region(begin=Location(line=43, column=54), end=Location(line=43, column=63))
region_000176 = Region(begin=Location(line=43, column=50), end=Location(line=43, column=68))
region_000177 = Region(begin=Location(line=43, column=64), end=Location(line=43, column=68))
region_000178 = Region(begin=Location(line=43, column=49), end=Location(line=43, column=69))
region_000179 = Region(begin=Location(line=43, column=5), end=Location(line=44, column=1))
region_000180 = Region(begin=Location(line=43, column=16), end=Location(line=43, column=22))
region_000181 = Region(begin=Location(line=43, column=70), end=Location(line=43, column=79))
region_000182 = Region(begin=Location(line=43, column=23), end=Location(line=43, column=31))
region_000183 = Region(begin=Location(line=43, column=41), end=Location(line=43, column=49))
region_000184 = Region(begin=Location(line=43, column=6), end=Location(line=43, column=14))
region_000185 = Region(begin=Location(line=44, column=32), end=Location(line=44, column=40))
region_000186 = Region(begin=Location(line=44, column=32), end=Location(line=44, column=36))
region_000187 = Region(begin=Location(line=44, column=37), end=Location(line=44, column=40))
region_000188 = Region(begin=Location(line=44, column=55), end=Location(line=44, column=68))
region_000189 = Region(begin=Location(line=44, column=55), end=Location(line=44, column=58))
region_000190 = Region(begin=Location(line=44, column=59), end=Location(line=44, column=68))
region_000191 = Region(begin=Location(line=44, column=55), end=Location(line=44, column=73))
region_000192 = Region(begin=Location(line=44, column=69), end=Location(line=44, column=73))
region_000193 = Region(begin=Location(line=44, column=54), end=Location(line=44, column=74))
region_000194 = Region(begin=Location(line=44, column=5), end=Location(line=45, column=1))
region_000195 = Region(begin=Location(line=44, column=16), end=Location(line=44, column=22))
region_000196 = Region(begin=Location(line=44, column=75), end=Location(line=44, column=84))
region_000197 = Region(begin=Location(line=44, column=23), end=Location(line=44, column=31))
region_000198 = Region(begin=Location(line=44, column=41), end=Location(line=44, column=54))
region_000199 = Region(begin=Location(line=44, column=6), end=Location(line=44, column=14))
region_000200 = Region(begin=Location(line=45, column=32), end=Location(line=45, column=40))
region_000201 = Region(begin=Location(line=45, column=32), end=Location(line=45, column=36))
region_000202 = Region(begin=Location(line=45, column=37), end=Location(line=45, column=40))
region_000203 = Region(begin=Location(line=45, column=53), end=Location(line=45, column=66))
region_000204 = Region(begin=Location(line=45, column=53), end=Location(line=45, column=56))
region_000205 = Region(begin=Location(line=45, column=57), end=Location(line=45, column=66))
region_000206 = Region(begin=Location(line=45, column=53), end=Location(line=45, column=71))
region_000207 = Region(begin=Location(line=45, column=67), end=Location(line=45, column=71))
region_000208 = Region(begin=Location(line=45, column=52), end=Location(line=45, column=72))
region_000209 = Region(begin=Location(line=45, column=5), end=Location(line=46, column=1))
region_000210 = Region(begin=Location(line=45, column=16), end=Location(line=45, column=22))
region_000211 = Region(begin=Location(line=45, column=73), end=Location(line=45, column=82))
region_000212 = Region(begin=Location(line=45, column=23), end=Location(line=45, column=31))
region_000213 = Region(begin=Location(line=45, column=41), end=Location(line=45, column=52))
region_000214 = Region(begin=Location(line=45, column=6), end=Location(line=45, column=14))
region_000215 = Region(begin=Location(line=46, column=32), end=Location(line=46, column=40))
region_000216 = Region(begin=Location(line=46, column=32), end=Location(line=46, column=36))
region_000217 = Region(begin=Location(line=46, column=37), end=Location(line=46, column=40))
region_000218 = Region(begin=Location(line=46, column=58), end=Location(line=46, column=71))
region_000219 = Region(begin=Location(line=46, column=58), end=Location(line=46, column=61))
region_000220 = Region(begin=Location(line=46, column=62), end=Location(line=46, column=71))
region_000221 = Region(begin=Location(line=46, column=58), end=Location(line=46, column=76))
region_000222 = Region(begin=Location(line=46, column=72), end=Location(line=46, column=76))
region_000223 = Region(begin=Location(line=46, column=57), end=Location(line=46, column=77))
region_000224 = Region(begin=Location(line=46, column=5), end=Location(line=48, column=1))
region_000225 = Region(begin=Location(line=46, column=16), end=Location(line=46, column=22))
region_000226 = Region(begin=Location(line=46, column=78), end=Location(line=46, column=87))
region_000227 = Region(begin=Location(line=46, column=23), end=Location(line=46, column=31))
region_000228 = Region(begin=Location(line=46, column=41), end=Location(line=46, column=57))
region_000229 = Region(begin=Location(line=46, column=6), end=Location(line=46, column=14))
region_000230 = Region(begin=Location(line=48, column=33), end=Location(line=48, column=39))
region_000231 = Region(begin=Location(line=48, column=42), end=Location(line=48, column=46))
region_000232 = Region(begin=Location(line=48, column=32), end=Location(line=48, column=51))
region_000233 = Region(begin=Location(line=48, column=48), end=Location(line=48, column=51))
region_000234 = Region(begin=Location(line=48, column=62), end=Location(line=48, column=76))
region_000235 = Region(begin=Location(line=48, column=62), end=Location(line=48, column=66))
region_000236 = Region(begin=Location(line=48, column=67), end=Location(line=48, column=76))
region_000237 = Region(begin=Location(line=48, column=62), end=Location(line=48, column=82))
region_000238 = Region(begin=Location(line=48, column=77), end=Location(line=48, column=82))
region_000239 = Region(begin=Location(line=48, column=61), end=Location(line=48, column=83))
region_000240 = Region(begin=Location(line=48, column=5), end=Location(line=49, column=1))
region_000241 = Region(begin=Location(line=48, column=16), end=Location(line=48, column=22))
region_000242 = Region(begin=Location(line=48, column=84), end=Location(line=48, column=93))
region_000243 = Region(begin=Location(line=48, column=23), end=Location(line=48, column=31))
region_000244 = Region(begin=Location(line=48, column=52), end=Location(line=48, column=61))
region_000245 = Region(begin=Location(line=48, column=6), end=Location(line=48, column=14))
region_000246 = Region(begin=Location(line=49, column=33), end=Location(line=49, column=39))
region_000247 = Region(begin=Location(line=49, column=42), end=Location(line=49, column=46))
region_000248 = Region(begin=Location(line=49, column=32), end=Location(line=49, column=51))
region_000249 = Region(begin=Location(line=49, column=48), end=Location(line=49, column=51))
region_000250 = Region(begin=Location(line=49, column=62), end=Location(line=49, column=83))
region_000251 = Region(begin=Location(line=49, column=62), end=Location(line=49, column=73))
region_000252 = Region(begin=Location(line=49, column=74), end=Location(line=49, column=83))
region_000253 = Region(begin=Location(line=49, column=62), end=Location(line=49, column=89))
region_000254 = Region(begin=Location(line=49, column=84), end=Location(line=49, column=89))
region_000255 = Region(begin=Location(line=49, column=61), end=Location(line=49, column=90))
region_000256 = Region(begin=Location(line=49, column=5), end=Location(line=51, column=1))
region_000257 = Region(begin=Location(line=49, column=16), end=Location(line=49, column=22))
region_000258 = Region(begin=Location(line=49, column=91), end=Location(line=49, column=100))
region_000259 = Region(begin=Location(line=49, column=23), end=Location(line=49, column=31))
region_000260 = Region(begin=Location(line=49, column=52), end=Location(line=49, column=61))
region_000261 = Region(begin=Location(line=49, column=6), end=Location(line=49, column=14))
region_000262 = Region(begin=Location(line=53, column=32), end=Location(line=53, column=40))
region_000263 = Region(begin=Location(line=53, column=32), end=Location(line=53, column=36))
region_000264 = Region(begin=Location(line=53, column=37), end=Location(line=53, column=40))
region_000265 = Region(begin=Location(line=53, column=54), end=Location(line=53, column=68))
region_000266 = Region(begin=Location(line=53, column=54), end=Location(line=53, column=58))
region_000267 = Region(begin=Location(line=53, column=59), end=Location(line=53, column=68))
region_000268 = Region(begin=Location(line=53, column=54), end=Location(line=53, column=74))
region_000269 = Region(begin=Location(line=53, column=69), end=Location(line=53, column=74))
region_000270 = Region(begin=Location(line=53, column=53), end=Location(line=53, column=75))
region_000271 = Region(begin=Location(line=51, column=1), end=Location(line=54, column=1))
region_000272 = Region(begin=Location(line=53, column=16), end=Location(line=53, column=22))
region_000273 = Region(begin=Location(line=53, column=76), end=Location(line=53, column=85))
region_000274 = Region(begin=Location(line=53, column=23), end=Location(line=53, column=31))
region_000275 = Region(begin=Location(line=53, column=41), end=Location(line=53, column=53))
region_000276 = Region(begin=Location(line=53, column=6), end=Location(line=53, column=14))
region_000277 = Region(begin=Location(line=54, column=32), end=Location(line=54, column=40))
region_000278 = Region(begin=Location(line=54, column=32), end=Location(line=54, column=36))
region_000279 = Region(begin=Location(line=54, column=37), end=Location(line=54, column=40))
region_000280 = Region(begin=Location(line=54, column=54), end=Location(line=54, column=75))
region_000281 = Region(begin=Location(line=54, column=54), end=Location(line=54, column=65))
region_000282 = Region(begin=Location(line=54, column=66), end=Location(line=54, column=75))
region_000283 = Region(begin=Location(line=54, column=54), end=Location(line=54, column=81))
region_000284 = Region(begin=Location(line=54, column=76), end=Location(line=54, column=81))
region_000285 = Region(begin=Location(line=54, column=53), end=Location(line=54, column=82))
region_000286 = Region(begin=Location(line=54, column=5), end=Location(line=55, column=1))
region_000287 = Region(begin=Location(line=54, column=16), end=Location(line=54, column=22))
region_000288 = Region(begin=Location(line=54, column=83), end=Location(line=54, column=92))
region_000289 = Region(begin=Location(line=54, column=23), end=Location(line=54, column=31))
region_000290 = Region(begin=Location(line=54, column=41), end=Location(line=54, column=53))
region_000291 = Region(begin=Location(line=54, column=6), end=Location(line=54, column=14))
region_000292 = Region(begin=Location(line=55, column=32), end=Location(line=55, column=40))
region_000293 = Region(begin=Location(line=55, column=32), end=Location(line=55, column=36))
region_000294 = Region(begin=Location(line=55, column=37), end=Location(line=55, column=40))
region_000295 = Region(begin=Location(line=55, column=57), end=Location(line=55, column=71))
region_000296 = Region(begin=Location(line=55, column=57), end=Location(line=55, column=61))
region_000297 = Region(begin=Location(line=55, column=62), end=Location(line=55, column=71))
region_000298 = Region(begin=Location(line=55, column=57), end=Location(line=55, column=77))
region_000299 = Region(begin=Location(line=55, column=72), end=Location(line=55, column=77))
region_000300 = Region(begin=Location(line=55, column=56), end=Location(line=55, column=78))
region_000301 = Region(begin=Location(line=55, column=5), end=Location(line=56, column=1))
region_000302 = Region(begin=Location(line=55, column=16), end=Location(line=55, column=22))
region_000303 = Region(begin=Location(line=55, column=79), end=Location(line=55, column=88))
region_000304 = Region(begin=Location(line=55, column=23), end=Location(line=55, column=31))
region_000305 = Region(begin=Location(line=55, column=41), end=Location(line=55, column=56))
region_000306 = Region(begin=Location(line=55, column=6), end=Location(line=55, column=14))
region_000307 = Region(begin=Location(line=56, column=32), end=Location(line=56, column=40))
region_000308 = Region(begin=Location(line=56, column=32), end=Location(line=56, column=36))
region_000309 = Region(begin=Location(line=56, column=37), end=Location(line=56, column=40))
region_000310 = Region(begin=Location(line=56, column=57), end=Location(line=56, column=78))
region_000311 = Region(begin=Location(line=56, column=57), end=Location(line=56, column=68))
region_000312 = Region(begin=Location(line=56, column=69), end=Location(line=56, column=78))
region_000313 = Region(begin=Location(line=56, column=57), end=Location(line=56, column=84))
region_000314 = Region(begin=Location(line=56, column=79), end=Location(line=56, column=84))
region_000315 = Region(begin=Location(line=56, column=56), end=Location(line=56, column=85))
region_000316 = Region(begin=Location(line=56, column=5), end=Location(line=58, column=1))
region_000317 = Region(begin=Location(line=56, column=16), end=Location(line=56, column=22))
region_000318 = Region(begin=Location(line=56, column=86), end=Location(line=56, column=95))
region_000319 = Region(begin=Location(line=56, column=23), end=Location(line=56, column=31))
region_000320 = Region(begin=Location(line=56, column=41), end=Location(line=56, column=56))
region_000321 = Region(begin=Location(line=56, column=6), end=Location(line=56, column=14))
region_000322 = Region(begin=Location(line=58, column=32), end=Location(line=58, column=42))
region_000323 = Region(begin=Location(line=58, column=32), end=Location(line=58, column=38))
region_000324 = Region(begin=Location(line=58, column=39), end=Location(line=58, column=42))
region_000325 = Region(begin=Location(line=58, column=5), end=Location(line=59, column=1))
region_000326 = Region(begin=Location(line=58, column=16), end=Location(line=58, column=22))
region_000327 = Region(begin=Location(line=58, column=54), end=Location(line=58, column=63))
region_000328 = Region(begin=Location(line=58, column=23), end=Location(line=58, column=31))
region_000329 = Region(begin=Location(line=58, column=43), end=Location(line=58, column=51))
region_000330 = Region(begin=Location(line=58, column=51), end=Location(line=58, column=53))
region_000331 = Region(begin=Location(line=58, column=6), end=Location(line=58, column=14))
region_000332 = Region(begin=Location(line=59, column=32), end=Location(line=59, column=42))
region_000333 = Region(begin=Location(line=59, column=32), end=Location(line=59, column=38))
region_000334 = Region(begin=Location(line=59, column=39), end=Location(line=59, column=42))
region_000335 = Region(begin=Location(line=59, column=5), end=Location(line=61, column=1))
region_000336 = Region(begin=Location(line=59, column=16), end=Location(line=59, column=22))
region_000337 = Region(begin=Location(line=59, column=54), end=Location(line=59, column=63))
region_000338 = Region(begin=Location(line=59, column=23), end=Location(line=59, column=31))
region_000339 = Region(begin=Location(line=59, column=43), end=Location(line=59, column=51))
region_000340 = Region(begin=Location(line=59, column=51), end=Location(line=59, column=53))
region_000341 = Region(begin=Location(line=59, column=6), end=Location(line=59, column=14))
region_000342 = Region(begin=Location(line=61, column=32), end=Location(line=61, column=40))
region_000343 = Region(begin=Location(line=61, column=32), end=Location(line=61, column=36))
region_000344 = Region(begin=Location(line=61, column=37), end=Location(line=61, column=40))
region_000345 = Region(begin=Location(line=61, column=5), end=Location(line=62, column=1))
region_000346 = Region(begin=Location(line=61, column=16), end=Location(line=61, column=22))
region_000347 = Region(begin=Location(line=61, column=58), end=Location(line=61, column=67))
region_000348 = Region(begin=Location(line=61, column=23), end=Location(line=61, column=31))
region_000349 = Region(begin=Location(line=61, column=41), end=Location(line=61, column=55))
region_000350 = Region(begin=Location(line=61, column=55), end=Location(line=61, column=57))
region_000351 = Region(begin=Location(line=61, column=6), end=Location(line=61, column=14))
region_000352 = Region(begin=Location(line=62, column=32), end=Location(line=62, column=40))
region_000353 = Region(begin=Location(line=62, column=32), end=Location(line=62, column=36))
region_000354 = Region(begin=Location(line=62, column=37), end=Location(line=62, column=40))
region_000355 = Region(begin=Location(line=62, column=5), end=Location(line=63, column=1))
region_000356 = Region(begin=Location(line=62, column=16), end=Location(line=62, column=22))
region_000357 = Region(begin=Location(line=62, column=51), end=Location(line=62, column=60))
region_000358 = Region(begin=Location(line=62, column=23), end=Location(line=62, column=31))
region_000359 = Region(begin=Location(line=62, column=41), end=Location(line=62, column=48))
region_000360 = Region(begin=Location(line=62, column=48), end=Location(line=62, column=50))
region_000361 = Region(begin=Location(line=62, column=6), end=Location(line=62, column=14))
region_000362 = Region(begin=Location(line=63, column=32), end=Location(line=63, column=40))
region_000363 = Region(begin=Location(line=63, column=32), end=Location(line=63, column=36))
region_000364 = Region(begin=Location(line=63, column=37), end=Location(line=63, column=40))
region_000365 = Region(begin=Location(line=63, column=5), end=Location(line=64, column=1))
region_000366 = Region(begin=Location(line=63, column=16), end=Location(line=63, column=22))
region_000367 = Region(begin=Location(line=63, column=51), end=Location(line=63, column=60))
region_000368 = Region(begin=Location(line=63, column=23), end=Location(line=63, column=31))
region_000369 = Region(begin=Location(line=63, column=41), end=Location(line=63, column=48))
region_000370 = Region(begin=Location(line=63, column=48), end=Location(line=63, column=50))
region_000371 = Region(begin=Location(line=63, column=6), end=Location(line=63, column=14))
region_000372 = Region(begin=Location(line=64, column=32), end=Location(line=64, column=40))
region_000373 = Region(begin=Location(line=64, column=32), end=Location(line=64, column=36))
region_000374 = Region(begin=Location(line=64, column=37), end=Location(line=64, column=40))
region_000375 = Region(begin=Location(line=64, column=5), end=Location(line=65, column=1))
region_000376 = Region(begin=Location(line=64, column=16), end=Location(line=64, column=22))
region_000377 = Region(begin=Location(line=64, column=49), end=Location(line=64, column=58))
region_000378 = Region(begin=Location(line=64, column=23), end=Location(line=64, column=31))
region_000379 = Region(begin=Location(line=64, column=41), end=Location(line=64, column=46))
region_000380 = Region(begin=Location(line=64, column=46), end=Location(line=64, column=48))
region_000381 = Region(begin=Location(line=64, column=6), end=Location(line=64, column=14))
region_000382 = Region(begin=Location(line=65, column=32), end=Location(line=65, column=40))
region_000383 = Region(begin=Location(line=65, column=32), end=Location(line=65, column=36))
region_000384 = Region(begin=Location(line=65, column=37), end=Location(line=65, column=40))
region_000385 = Region(begin=Location(line=65, column=5), end=Location(line=66, column=1))
region_000386 = Region(begin=Location(line=65, column=16), end=Location(line=65, column=22))
region_000387 = Region(begin=Location(line=65, column=51), end=Location(line=65, column=60))
region_000388 = Region(begin=Location(line=65, column=23), end=Location(line=65, column=31))
region_000389 = Region(begin=Location(line=65, column=41), end=Location(line=65, column=48))
region_000390 = Region(begin=Location(line=65, column=48), end=Location(line=65, column=50))
region_000391 = Region(begin=Location(line=65, column=6), end=Location(line=65, column=14))
region_000392 = Region(begin=Location(line=66, column=32), end=Location(line=66, column=40))
region_000393 = Region(begin=Location(line=66, column=32), end=Location(line=66, column=36))
region_000394 = Region(begin=Location(line=66, column=37), end=Location(line=66, column=40))
region_000395 = Region(begin=Location(line=66, column=5), end=Location(line=67, column=1))
region_000396 = Region(begin=Location(line=66, column=16), end=Location(line=66, column=22))
region_000397 = Region(begin=Location(line=66, column=49), end=Location(line=66, column=58))
region_000398 = Region(begin=Location(line=66, column=23), end=Location(line=66, column=31))
region_000399 = Region(begin=Location(line=66, column=41), end=Location(line=66, column=46))
region_000400 = Region(begin=Location(line=66, column=46), end=Location(line=66, column=48))
region_000401 = Region(begin=Location(line=66, column=6), end=Location(line=66, column=14))
region_000402 = Region(begin=Location(line=67, column=32), end=Location(line=67, column=40))
region_000403 = Region(begin=Location(line=67, column=32), end=Location(line=67, column=36))
region_000404 = Region(begin=Location(line=67, column=37), end=Location(line=67, column=40))
region_000405 = Region(begin=Location(line=67, column=5), end=Location(line=68, column=1))
region_000406 = Region(begin=Location(line=67, column=16), end=Location(line=67, column=22))
region_000407 = Region(begin=Location(line=67, column=55), end=Location(line=67, column=64))
region_000408 = Region(begin=Location(line=67, column=23), end=Location(line=67, column=31))
region_000409 = Region(begin=Location(line=67, column=41), end=Location(line=67, column=52))
region_000410 = Region(begin=Location(line=67, column=52), end=Location(line=67, column=54))
region_000411 = Region(begin=Location(line=67, column=6), end=Location(line=67, column=14))
region_000412 = Region(begin=Location(line=68, column=32), end=Location(line=68, column=40))
region_000413 = Region(begin=Location(line=68, column=32), end=Location(line=68, column=36))
region_000414 = Region(begin=Location(line=68, column=37), end=Location(line=68, column=40))
region_000415 = Region(begin=Location(line=68, column=5), end=Location(line=69, column=1))
region_000416 = Region(begin=Location(line=68, column=16), end=Location(line=68, column=22))
region_000417 = Region(begin=Location(line=68, column=51), end=Location(line=68, column=60))
region_000418 = Region(begin=Location(line=68, column=23), end=Location(line=68, column=31))
region_000419 = Region(begin=Location(line=68, column=41), end=Location(line=68, column=48))
region_000420 = Region(begin=Location(line=68, column=48), end=Location(line=68, column=50))
region_000421 = Region(begin=Location(line=68, column=6), end=Location(line=68, column=14))
region_000422 = Region(begin=Location(line=69, column=32), end=Location(line=69, column=40))
region_000423 = Region(begin=Location(line=69, column=32), end=Location(line=69, column=36))
region_000424 = Region(begin=Location(line=69, column=37), end=Location(line=69, column=40))
region_000425 = Region(begin=Location(line=69, column=5), end=Location(line=70, column=1))
region_000426 = Region(begin=Location(line=69, column=16), end=Location(line=69, column=22))
region_000427 = Region(begin=Location(line=69, column=51), end=Location(line=69, column=60))
region_000428 = Region(begin=Location(line=69, column=23), end=Location(line=69, column=31))
region_000429 = Region(begin=Location(line=69, column=41), end=Location(line=69, column=48))
region_000430 = Region(begin=Location(line=69, column=48), end=Location(line=69, column=50))
region_000431 = Region(begin=Location(line=69, column=6), end=Location(line=69, column=14))
region_000432 = Region(begin=Location(line=70, column=32), end=Location(line=70, column=40))
region_000433 = Region(begin=Location(line=70, column=32), end=Location(line=70, column=36))
region_000434 = Region(begin=Location(line=70, column=37), end=Location(line=70, column=40))
region_000435 = Region(begin=Location(line=70, column=5), end=Location(line=72, column=1))
region_000436 = Region(begin=Location(line=70, column=16), end=Location(line=70, column=22))
region_000437 = Region(begin=Location(line=70, column=51), end=Location(line=70, column=60))
region_000438 = Region(begin=Location(line=70, column=23), end=Location(line=70, column=31))
region_000439 = Region(begin=Location(line=70, column=41), end=Location(line=70, column=48))
region_000440 = Region(begin=Location(line=70, column=48), end=Location(line=70, column=50))
region_000441 = Region(begin=Location(line=70, column=6), end=Location(line=70, column=14))
region_000442 = Region(begin=Location(line=72, column=32), end=Location(line=72, column=42))
region_000443 = Region(begin=Location(line=72, column=32), end=Location(line=72, column=38))
region_000444 = Region(begin=Location(line=72, column=39), end=Location(line=72, column=42))
region_000445 = Region(begin=Location(line=72, column=49), end=Location(line=72, column=63))
region_000446 = Region(begin=Location(line=72, column=49), end=Location(line=72, column=53))
region_000447 = Region(begin=Location(line=72, column=54), end=Location(line=72, column=63))
region_000448 = Region(begin=Location(line=72, column=49), end=Location(line=72, column=69))
region_000449 = Region(begin=Location(line=72, column=64), end=Location(line=72, column=69))
region_000450 = Region(begin=Location(line=72, column=48), end=Location(line=72, column=70))
region_000451 = Region(begin=Location(line=72, column=5), end=Location(line=73, column=1))
region_000452 = Region(begin=Location(line=72, column=16), end=Location(line=72, column=22))
region_000453 = Region(begin=Location(line=72, column=71), end=Location(line=72, column=80))
region_000454 = Region(begin=Location(line=72, column=23), end=Location(line=72, column=31))
region_000455 = Region(begin=Location(line=72, column=43), end=Location(line=72, column=48))
region_000456 = Region(begin=Location(line=72, column=6), end=Location(line=72, column=14))
region_000457 = Region(begin=Location(line=73, column=32), end=Location(line=73, column=42))
region_000458 = Region(begin=Location(line=73, column=32), end=Location(line=73, column=38))
region_000459 = Region(begin=Location(line=73, column=39), end=Location(line=73, column=42))
region_000460 = Region(begin=Location(line=73, column=49), end=Location(line=73, column=70))
region_000461 = Region(begin=Location(line=73, column=49), end=Location(line=73, column=60))
region_000462 = Region(begin=Location(line=73, column=61), end=Location(line=73, column=70))
region_000463 = Region(begin=Location(line=73, column=49), end=Location(line=73, column=76))
region_000464 = Region(begin=Location(line=73, column=71), end=Location(line=73, column=76))
region_000465 = Region(begin=Location(line=73, column=48), end=Location(line=73, column=77))
region_000466 = Region(begin=Location(line=73, column=5), end=Location(line=75, column=1))
region_000467 = Region(begin=Location(line=73, column=16), end=Location(line=73, column=22))
region_000468 = Region(begin=Location(line=73, column=78), end=Location(line=73, column=87))
region_000469 = Region(begin=Location(line=73, column=23), end=Location(line=73, column=31))
region_000470 = Region(begin=Location(line=73, column=43), end=Location(line=73, column=48))
region_000471 = Region(begin=Location(line=73, column=6), end=Location(line=73, column=14))
region_000472 = Region(begin=Location(line=75, column=32), end=Location(line=75, column=40))
region_000473 = Region(begin=Location(line=75, column=32), end=Location(line=75, column=36))
region_000474 = Region(begin=Location(line=75, column=37), end=Location(line=75, column=40))
region_000475 = Region(begin=Location(line=75, column=52), end=Location(line=75, column=66))
region_000476 = Region(begin=Location(line=75, column=52), end=Location(line=75, column=56))
region_000477 = Region(begin=Location(line=75, column=57), end=Location(line=75, column=66))
region_000478 = Region(begin=Location(line=75, column=52), end=Location(line=75, column=72))
region_000479 = Region(begin=Location(line=75, column=67), end=Location(line=75, column=72))
region_000480 = Region(begin=Location(line=75, column=51), end=Location(line=75, column=73))
region_000481 = Region(begin=Location(line=75, column=5), end=Location(line=76, column=1))
region_000482 = Region(begin=Location(line=75, column=16), end=Location(line=75, column=22))
region_000483 = Region(begin=Location(line=75, column=74), end=Location(line=75, column=83))
region_000484 = Region(begin=Location(line=75, column=23), end=Location(line=75, column=31))
region_000485 = Region(begin=Location(line=75, column=41), end=Location(line=75, column=51))
region_000486 = Region(begin=Location(line=75, column=6), end=Location(line=75, column=14))
region_000487 = Region(begin=Location(line=76, column=32), end=Location(line=76, column=40))
region_000488 = Region(begin=Location(line=76, column=32), end=Location(line=76, column=36))
region_000489 = Region(begin=Location(line=76, column=37), end=Location(line=76, column=40))
region_000490 = Region(begin=Location(line=76, column=52), end=Location(line=76, column=73))
region_000491 = Region(begin=Location(line=76, column=52), end=Location(line=76, column=63))
region_000492 = Region(begin=Location(line=76, column=64), end=Location(line=76, column=73))
region_000493 = Region(begin=Location(line=76, column=52), end=Location(line=76, column=79))
region_000494 = Region(begin=Location(line=76, column=74), end=Location(line=76, column=79))
region_000495 = Region(begin=Location(line=76, column=51), end=Location(line=76, column=80))
region_000496 = Region(begin=Location(line=76, column=5), end=Location(line=78, column=1))
region_000497 = Region(begin=Location(line=76, column=16), end=Location(line=76, column=22))
region_000498 = Region(begin=Location(line=76, column=81), end=Location(line=76, column=90))
region_000499 = Region(begin=Location(line=76, column=23), end=Location(line=76, column=31))
region_000500 = Region(begin=Location(line=76, column=41), end=Location(line=76, column=51))
region_000501 = Region(begin=Location(line=76, column=6), end=Location(line=76, column=14))
region_000502 = Region(begin=Location(line=78, column=32), end=Location(line=78, column=40))
region_000503 = Region(begin=Location(line=78, column=32), end=Location(line=78, column=36))
region_000504 = Region(begin=Location(line=78, column=37), end=Location(line=78, column=40))
region_000505 = Region(begin=Location(line=78, column=50), end=Location(line=78, column=64))
region_000506 = Region(begin=Location(line=78, column=50), end=Location(line=78, column=54))
region_000507 = Region(begin=Location(line=78, column=55), end=Location(line=78, column=64))
region_000508 = Region(begin=Location(line=78, column=50), end=Location(line=78, column=70))
region_000509 = Region(begin=Location(line=78, column=65), end=Location(line=78, column=70))
region_000510 = Region(begin=Location(line=78, column=49), end=Location(line=78, column=71))
region_000511 = Region(begin=Location(line=78, column=5), end=Location(line=79, column=1))
region_000512 = Region(begin=Location(line=78, column=16), end=Location(line=78, column=22))
region_000513 = Region(begin=Location(line=78, column=72), end=Location(line=78, column=81))
region_000514 = Region(begin=Location(line=78, column=23), end=Location(line=78, column=31))
region_000515 = Region(begin=Location(line=78, column=41), end=Location(line=78, column=49))
region_000516 = Region(begin=Location(line=78, column=6), end=Location(line=78, column=14))
region_000517 = Region(begin=Location(line=79, column=32), end=Location(line=79, column=40))
region_000518 = Region(begin=Location(line=79, column=32), end=Location(line=79, column=36))
region_000519 = Region(begin=Location(line=79, column=37), end=Location(line=79, column=40))
region_000520 = Region(begin=Location(line=79, column=50), end=Location(line=79, column=71))
region_000521 = Region(begin=Location(line=79, column=50), end=Location(line=79, column=61))
region_000522 = Region(begin=Location(line=79, column=62), end=Location(line=79, column=71))
region_000523 = Region(begin=Location(line=79, column=50), end=Location(line=79, column=77))
region_000524 = Region(begin=Location(line=79, column=72), end=Location(line=79, column=77))
region_000525 = Region(begin=Location(line=79, column=49), end=Location(line=79, column=78))
region_000526 = Region(begin=Location(line=79, column=5), end=Location(line=81, column=1))
region_000527 = Region(begin=Location(line=79, column=16), end=Location(line=79, column=22))
region_000528 = Region(begin=Location(line=79, column=79), end=Location(line=79, column=88))
region_000529 = Region(begin=Location(line=79, column=23), end=Location(line=79, column=31))
region_000530 = Region(begin=Location(line=79, column=41), end=Location(line=79, column=49))
region_000531 = Region(begin=Location(line=79, column=6), end=Location(line=79, column=14))
region_000532 = Region(begin=Location(line=84, column=22), end=Location(line=84, column=28))
region_000533 = Region(begin=Location(line=84, column=31), end=Location(line=84, column=35))
region_000534 = Region(begin=Location(line=84, column=21), end=Location(line=84, column=40))
region_000535 = Region(begin=Location(line=84, column=37), end=Location(line=84, column=40))
region_000536 = Region(begin=Location(line=85, column=9), end=Location(line=85, column=23))
region_000537 = Region(begin=Location(line=85, column=9), end=Location(line=85, column=13))
region_000538 = Region(begin=Location(line=85, column=14), end=Location(line=85, column=23))
region_000539 = Region(begin=Location(line=85, column=9), end=Location(line=85, column=29))
region_000540 = Region(begin=Location(line=85, column=24), end=Location(line=85, column=29))
region_000541 = Region(begin=Location(line=86, column=10), end=Location(line=86, column=16))
region_000542 = Region(begin=Location(line=86, column=19), end=Location(line=86, column=23))
region_000543 = Region(begin=Location(line=86, column=9), end=Location(line=86, column=34))
region_000544 = Region(begin=Location(line=86, column=25), end=Location(line=86, column=34))
region_000545 = Region(begin=Location(line=86, column=54), end=Location(line=86, column=58))
region_000546 = Region(begin=Location(line=86, column=9), end=Location(line=86, column=58))
region_000547 = Region(begin=Location(line=86, column=35), end=Location(line=86, column=51))
region_000548 = Region(begin=Location(line=87, column=10), end=Location(line=87, column=16))
region_000549 = Region(begin=Location(line=87, column=19), end=Location(line=87, column=23))
region_000550 = Region(begin=Location(line=87, column=9), end=Location(line=87, column=34))
region_000551 = Region(begin=Location(line=87, column=25), end=Location(line=87, column=34))
region_000552 = Region(begin=Location(line=87, column=52), end=Location(line=87, column=56))
region_000553 = Region(begin=Location(line=87, column=9), end=Location(line=87, column=56))
region_000554 = Region(begin=Location(line=87, column=35), end=Location(line=87, column=49))
region_000555 = Region(begin=Location(line=84, column=45), end=Location(line=88, column=6))
region_000556 = Region(begin=Location(line=85, column=9), end=Location(line=87, column=57))
region_000557 = Region(begin=Location(line=81, column=1), end=Location(line=90, column=1))
region_000558 = Region(begin=Location(line=84, column=5), end=Location(line=84, column=11))
region_000559 = Region(begin=Location(line=88, column=7), end=Location(line=88, column=16))
region_000560 = Region(begin=Location(line=84, column=12), end=Location(line=84, column=20))
region_000561 = Region(begin=Location(line=84, column=41), end=Location(line=84, column=45))
region_000562 = Region(begin=Location(line=83, column=6), end=Location(line=83, column=14))
region_000563 = Region(begin=Location(line=91, column=22), end=Location(line=91, column=28))
region_000564 = Region(begin=Location(line=91, column=31), end=Location(line=91, column=35))
region_000565 = Region(begin=Location(line=91, column=21), end=Location(line=91, column=40))
region_000566 = Region(begin=Location(line=91, column=37), end=Location(line=91, column=40))
region_000567 = Region(begin=Location(line=92, column=9), end=Location(line=92, column=30))
region_000568 = Region(begin=Location(line=92, column=9), end=Location(line=92, column=20))
region_000569 = Region(begin=Location(line=92, column=21), end=Location(line=92, column=30))
region_000570 = Region(begin=Location(line=92, column=9), end=Location(line=92, column=36))
region_000571 = Region(begin=Location(line=92, column=31), end=Location(line=92, column=36))
region_000572 = Region(begin=Location(line=93, column=10), end=Location(line=93, column=16))
region_000573 = Region(begin=Location(line=93, column=19), end=Location(line=93, column=23))
region_000574 = Region(begin=Location(line=93, column=9), end=Location(line=93, column=34))
region_000575 = Region(begin=Location(line=93, column=25), end=Location(line=93, column=34))
region_000576 = Region(begin=Location(line=93, column=54), end=Location(line=93, column=58))
region_000577 = Region(begin=Location(line=93, column=9), end=Location(line=93, column=58))
region_000578 = Region(begin=Location(line=93, column=35), end=Location(line=93, column=51))
region_000579 = Region(begin=Location(line=94, column=10), end=Location(line=94, column=16))
region_000580 = Region(begin=Location(line=94, column=19), end=Location(line=94, column=23))
region_000581 = Region(begin=Location(line=94, column=9), end=Location(line=94, column=34))
region_000582 = Region(begin=Location(line=94, column=25), end=Location(line=94, column=34))
region_000583 = Region(begin=Location(line=94, column=52), end=Location(line=94, column=56))
region_000584 = Region(begin=Location(line=94, column=9), end=Location(line=94, column=56))
region_000585 = Region(begin=Location(line=94, column=35), end=Location(line=94, column=49))
region_000586 = Region(begin=Location(line=91, column=45), end=Location(line=95, column=6))
region_000587 = Region(begin=Location(line=92, column=9), end=Location(line=94, column=57))
region_000588 = Region(begin=Location(line=90, column=5), end=Location(line=97, column=1))
region_000589 = Region(begin=Location(line=91, column=5), end=Location(line=91, column=11))
region_000590 = Region(begin=Location(line=95, column=7), end=Location(line=95, column=16))
region_000591 = Region(begin=Location(line=91, column=12), end=Location(line=91, column=20))
region_000592 = Region(begin=Location(line=91, column=41), end=Location(line=91, column=45))
region_000593 = Region(begin=Location(line=90, column=6), end=Location(line=90, column=14))
region_000594 = Region(begin=Location(line=98, column=22), end=Location(line=98, column=28))
region_000595 = Region(begin=Location(line=98, column=31), end=Location(line=98, column=35))
region_000596 = Region(begin=Location(line=98, column=21), end=Location(line=98, column=40))
region_000597 = Region(begin=Location(line=98, column=37), end=Location(line=98, column=40))
region_000598 = Region(begin=Location(line=99, column=9), end=Location(line=99, column=23))
region_000599 = Region(begin=Location(line=99, column=9), end=Location(line=99, column=13))
region_000600 = Region(begin=Location(line=99, column=14), end=Location(line=99, column=23))
region_000601 = Region(begin=Location(line=99, column=9), end=Location(line=99, column=29))
region_000602 = Region(begin=Location(line=99, column=24), end=Location(line=99, column=29))
region_000603 = Region(begin=Location(line=100, column=10), end=Location(line=100, column=16))
region_000604 = Region(begin=Location(line=100, column=19), end=Location(line=100, column=23))
region_000605 = Region(begin=Location(line=100, column=9), end=Location(line=100, column=34))
region_000606 = Region(begin=Location(line=100, column=25), end=Location(line=100, column=34))
region_000607 = Region(begin=Location(line=100, column=52), end=Location(line=100, column=56))
region_000608 = Region(begin=Location(line=100, column=9), end=Location(line=100, column=56))
region_000609 = Region(begin=Location(line=100, column=35), end=Location(line=100, column=49))
region_000610 = Region(begin=Location(line=98, column=52), end=Location(line=101, column=6))
region_000611 = Region(begin=Location(line=99, column=9), end=Location(line=100, column=57))
region_000612 = Region(begin=Location(line=97, column=5), end=Location(line=103, column=1))
region_000613 = Region(begin=Location(line=98, column=5), end=Location(line=98, column=11))
region_000614 = Region(begin=Location(line=101, column=7), end=Location(line=101, column=16))
region_000615 = Region(begin=Location(line=98, column=12), end=Location(line=98, column=20))
region_000616 = Region(begin=Location(line=98, column=41), end=Location(line=98, column=52))
region_000617 = Region(begin=Location(line=97, column=6), end=Location(line=97, column=14))
region_000618 = Region(begin=Location(line=104, column=22), end=Location(line=104, column=28))
region_000619 = Region(begin=Location(line=104, column=31), end=Location(line=104, column=35))
region_000620 = Region(begin=Location(line=104, column=21), end=Location(line=104, column=40))
region_000621 = Region(begin=Location(line=104, column=37), end=Location(line=104, column=40))
region_000622 = Region(begin=Location(line=105, column=9), end=Location(line=105, column=30))
region_000623 = Region(begin=Location(line=105, column=9), end=Location(line=105, column=20))
region_000624 = Region(begin=Location(line=105, column=21), end=Location(line=105, column=30))
region_000625 = Region(begin=Location(line=105, column=9), end=Location(line=105, column=36))
region_000626 = Region(begin=Location(line=105, column=31), end=Location(line=105, column=36))
region_000627 = Region(begin=Location(line=106, column=10), end=Location(line=106, column=16))
region_000628 = Region(begin=Location(line=106, column=19), end=Location(line=106, column=23))
region_000629 = Region(begin=Location(line=106, column=9), end=Location(line=106, column=34))
region_000630 = Region(begin=Location(line=106, column=25), end=Location(line=106, column=34))
region_000631 = Region(begin=Location(line=106, column=52), end=Location(line=106, column=56))
region_000632 = Region(begin=Location(line=106, column=9), end=Location(line=106, column=56))
region_000633 = Region(begin=Location(line=106, column=35), end=Location(line=106, column=49))
region_000634 = Region(begin=Location(line=104, column=52), end=Location(line=107, column=6))
region_000635 = Region(begin=Location(line=105, column=9), end=Location(line=106, column=57))
region_000636 = Region(begin=Location(line=103, column=5), end=Location(line=109, column=1))
region_000637 = Region(begin=Location(line=104, column=5), end=Location(line=104, column=11))
region_000638 = Region(begin=Location(line=107, column=7), end=Location(line=107, column=16))
region_000639 = Region(begin=Location(line=104, column=12), end=Location(line=104, column=20))
region_000640 = Region(begin=Location(line=104, column=41), end=Location(line=104, column=52))
region_000641 = Region(begin=Location(line=103, column=6), end=Location(line=103, column=14))
region_000642 = Region(begin=Location(line=110, column=22), end=Location(line=110, column=28))
region_000643 = Region(begin=Location(line=110, column=31), end=Location(line=110, column=35))
region_000644 = Region(begin=Location(line=110, column=21), end=Location(line=110, column=40))
region_000645 = Region(begin=Location(line=110, column=37), end=Location(line=110, column=40))
region_000646 = Region(begin=Location(line=111, column=9), end=Location(line=111, column=23))
region_000647 = Region(begin=Location(line=111, column=9), end=Location(line=111, column=13))
region_000648 = Region(begin=Location(line=111, column=14), end=Location(line=111, column=23))
region_000649 = Region(begin=Location(line=111, column=9), end=Location(line=111, column=29))
region_000650 = Region(begin=Location(line=111, column=24), end=Location(line=111, column=29))
region_000651 = Region(begin=Location(line=112, column=10), end=Location(line=112, column=16))
region_000652 = Region(begin=Location(line=112, column=19), end=Location(line=112, column=23))
region_000653 = Region(begin=Location(line=112, column=9), end=Location(line=112, column=34))
region_000654 = Region(begin=Location(line=112, column=25), end=Location(line=112, column=34))
region_000655 = Region(begin=Location(line=112, column=52), end=Location(line=112, column=56))
region_000656 = Region(begin=Location(line=112, column=9), end=Location(line=112, column=56))
region_000657 = Region(begin=Location(line=112, column=35), end=Location(line=112, column=49))
region_000658 = Region(begin=Location(line=110, column=50), end=Location(line=113, column=6))
region_000659 = Region(begin=Location(line=111, column=9), end=Location(line=112, column=57))
region_000660 = Region(begin=Location(line=109, column=5), end=Location(line=115, column=1))
region_000661 = Region(begin=Location(line=110, column=5), end=Location(line=110, column=11))
region_000662 = Region(begin=Location(line=113, column=7), end=Location(line=113, column=16))
region_000663 = Region(begin=Location(line=110, column=12), end=Location(line=110, column=20))
region_000664 = Region(begin=Location(line=110, column=41), end=Location(line=110, column=50))
region_000665 = Region(begin=Location(line=109, column=6), end=Location(line=109, column=14))
region_000666 = Region(begin=Location(line=116, column=22), end=Location(line=116, column=28))
region_000667 = Region(begin=Location(line=116, column=31), end=Location(line=116, column=35))
region_000668 = Region(begin=Location(line=116, column=21), end=Location(line=116, column=40))
region_000669 = Region(begin=Location(line=116, column=37), end=Location(line=116, column=40))
region_000670 = Region(begin=Location(line=117, column=9), end=Location(line=117, column=30))
region_000671 = Region(begin=Location(line=117, column=9), end=Location(line=117, column=20))
region_000672 = Region(begin=Location(line=117, column=21), end=Location(line=117, column=30))
region_000673 = Region(begin=Location(line=117, column=9), end=Location(line=117, column=36))
region_000674 = Region(begin=Location(line=117, column=31), end=Location(line=117, column=36))
region_000675 = Region(begin=Location(line=118, column=10), end=Location(line=118, column=16))
region_000676 = Region(begin=Location(line=118, column=19), end=Location(line=118, column=23))
region_000677 = Region(begin=Location(line=118, column=9), end=Location(line=118, column=34))
region_000678 = Region(begin=Location(line=118, column=25), end=Location(line=118, column=34))
region_000679 = Region(begin=Location(line=118, column=52), end=Location(line=118, column=56))
region_000680 = Region(begin=Location(line=118, column=9), end=Location(line=118, column=56))
region_000681 = Region(begin=Location(line=118, column=35), end=Location(line=118, column=49))
region_000682 = Region(begin=Location(line=116, column=50), end=Location(line=119, column=6))
region_000683 = Region(begin=Location(line=117, column=9), end=Location(line=118, column=57))
region_000684 = Region(begin=Location(line=115, column=5), end=Location(line=121, column=1))
region_000685 = Region(begin=Location(line=116, column=5), end=Location(line=116, column=11))
region_000686 = Region(begin=Location(line=119, column=7), end=Location(line=119, column=16))
region_000687 = Region(begin=Location(line=116, column=12), end=Location(line=116, column=20))
region_000688 = Region(begin=Location(line=116, column=41), end=Location(line=116, column=50))
region_000689 = Region(begin=Location(line=115, column=6), end=Location(line=115, column=14))
region_000690 = Region(begin=Location(line=122, column=22), end=Location(line=122, column=28))
region_000691 = Region(begin=Location(line=122, column=31), end=Location(line=122, column=35))
region_000692 = Region(begin=Location(line=122, column=21), end=Location(line=122, column=40))
region_000693 = Region(begin=Location(line=122, column=37), end=Location(line=122, column=40))
region_000694 = Region(begin=Location(line=123, column=9), end=Location(line=123, column=23))
region_000695 = Region(begin=Location(line=123, column=9), end=Location(line=123, column=13))
region_000696 = Region(begin=Location(line=123, column=14), end=Location(line=123, column=23))
region_000697 = Region(begin=Location(line=123, column=9), end=Location(line=123, column=29))
region_000698 = Region(begin=Location(line=123, column=24), end=Location(line=123, column=29))
region_000699 = Region(begin=Location(line=124, column=10), end=Location(line=124, column=16))
region_000700 = Region(begin=Location(line=124, column=19), end=Location(line=124, column=23))
region_000701 = Region(begin=Location(line=124, column=9), end=Location(line=124, column=34))
region_000702 = Region(begin=Location(line=124, column=25), end=Location(line=124, column=34))
region_000703 = Region(begin=Location(line=124, column=54), end=Location(line=124, column=58))
region_000704 = Region(begin=Location(line=124, column=9), end=Location(line=124, column=58))
region_000705 = Region(begin=Location(line=124, column=35), end=Location(line=124, column=51))
region_000706 = Region(begin=Location(line=122, column=49), end=Location(line=125, column=6))
region_000707 = Region(begin=Location(line=123, column=9), end=Location(line=124, column=59))
region_000708 = Region(begin=Location(line=121, column=5), end=Location(line=127, column=1))
region_000709 = Region(begin=Location(line=122, column=5), end=Location(line=122, column=11))
region_000710 = Region(begin=Location(line=125, column=7), end=Location(line=125, column=16))
region_000711 = Region(begin=Location(line=122, column=12), end=Location(line=122, column=20))
region_000712 = Region(begin=Location(line=122, column=41), end=Location(line=122, column=49))
region_000713 = Region(begin=Location(line=121, column=6), end=Location(line=121, column=14))
region_000714 = Region(begin=Location(line=128, column=22), end=Location(line=128, column=28))
region_000715 = Region(begin=Location(line=128, column=31), end=Location(line=128, column=35))
region_000716 = Region(begin=Location(line=128, column=21), end=Location(line=128, column=40))
region_000717 = Region(begin=Location(line=128, column=37), end=Location(line=128, column=40))
region_000718 = Region(begin=Location(line=129, column=9), end=Location(line=129, column=30))
region_000719 = Region(begin=Location(line=129, column=9), end=Location(line=129, column=20))
region_000720 = Region(begin=Location(line=129, column=21), end=Location(line=129, column=30))
region_000721 = Region(begin=Location(line=129, column=9), end=Location(line=129, column=36))
region_000722 = Region(begin=Location(line=129, column=31), end=Location(line=129, column=36))
region_000723 = Region(begin=Location(line=130, column=10), end=Location(line=130, column=16))
region_000724 = Region(begin=Location(line=130, column=19), end=Location(line=130, column=23))
region_000725 = Region(begin=Location(line=130, column=9), end=Location(line=130, column=34))
region_000726 = Region(begin=Location(line=130, column=25), end=Location(line=130, column=34))
region_000727 = Region(begin=Location(line=130, column=54), end=Location(line=130, column=58))
region_000728 = Region(begin=Location(line=130, column=9), end=Location(line=130, column=58))
region_000729 = Region(begin=Location(line=130, column=35), end=Location(line=130, column=51))
region_000730 = Region(begin=Location(line=128, column=49), end=Location(line=131, column=6))
region_000731 = Region(begin=Location(line=129, column=9), end=Location(line=130, column=59))
region_000732 = Region(begin=Location(line=127, column=5), end=Location(line=133, column=1))
region_000733 = Region(begin=Location(line=128, column=5), end=Location(line=128, column=11))
region_000734 = Region(begin=Location(line=131, column=7), end=Location(line=131, column=16))
region_000735 = Region(begin=Location(line=128, column=12), end=Location(line=128, column=20))
region_000736 = Region(begin=Location(line=128, column=41), end=Location(line=128, column=49))
region_000737 = Region(begin=Location(line=127, column=6), end=Location(line=127, column=14))
region_000738 = Region(begin=Location(line=133, column=32), end=Location(line=133, column=44))
region_000739 = Region(begin=Location(line=133, column=32), end=Location(line=133, column=40))
region_000740 = Region(begin=Location(line=133, column=41), end=Location(line=133, column=44))
region_000741 = Region(begin=Location(line=133, column=5), end=Location(line=134, column=1))
region_000742 = Region(begin=Location(line=133, column=16), end=Location(line=133, column=22))
region_000743 = Region(begin=Location(line=133, column=56), end=Location(line=133, column=65))
region_000744 = Region(begin=Location(line=133, column=23), end=Location(line=133, column=31))
region_000745 = Region(begin=Location(line=133, column=45), end=Location(line=133, column=53))
region_000746 = Region(begin=Location(line=133, column=53), end=Location(line=133, column=55))
region_000747 = Region(begin=Location(line=133, column=6), end=Location(line=133, column=14))
region_000748 = Region(begin=Location(line=134, column=32), end=Location(line=134, column=44))
region_000749 = Region(begin=Location(line=134, column=32), end=Location(line=134, column=40))
region_000750 = Region(begin=Location(line=134, column=41), end=Location(line=134, column=44))
region_000751 = Region(begin=Location(line=134, column=5), end=Location(line=135, column=1))
region_000752 = Region(begin=Location(line=134, column=16), end=Location(line=134, column=22))
region_000753 = Region(begin=Location(line=134, column=60), end=Location(line=134, column=69))
region_000754 = Region(begin=Location(line=134, column=23), end=Location(line=134, column=31))
region_000755 = Region(begin=Location(line=134, column=45), end=Location(line=134, column=57))
region_000756 = Region(begin=Location(line=134, column=57), end=Location(line=134, column=59))
region_000757 = Region(begin=Location(line=134, column=6), end=Location(line=134, column=14))
region_000758 = Region(begin=Location(line=135, column=32), end=Location(line=135, column=44))
region_000759 = Region(begin=Location(line=135, column=32), end=Location(line=135, column=40))
region_000760 = Region(begin=Location(line=135, column=41), end=Location(line=135, column=44))
region_000761 = Region(begin=Location(line=135, column=5), end=Location(line=136, column=1))
region_000762 = Region(begin=Location(line=135, column=16), end=Location(line=135, column=22))
region_000763 = Region(begin=Location(line=135, column=61), end=Location(line=135, column=70))
region_000764 = Region(begin=Location(line=135, column=23), end=Location(line=135, column=31))
region_000765 = Region(begin=Location(line=135, column=45), end=Location(line=135, column=58))
region_000766 = Region(begin=Location(line=135, column=58), end=Location(line=135, column=60))
region_000767 = Region(begin=Location(line=135, column=6), end=Location(line=135, column=14))
region_000768 = Region(begin=Location(line=136, column=32), end=Location(line=136, column=44))
region_000769 = Region(begin=Location(line=136, column=32), end=Location(line=136, column=40))
region_000770 = Region(begin=Location(line=136, column=41), end=Location(line=136, column=44))
region_000771 = Region(begin=Location(line=136, column=5), end=Location(line=137, column=1))
region_000772 = Region(begin=Location(line=136, column=16), end=Location(line=136, column=22))
region_000773 = Region(begin=Location(line=136, column=60), end=Location(line=136, column=69))
region_000774 = Region(begin=Location(line=136, column=23), end=Location(line=136, column=31))
region_000775 = Region(begin=Location(line=136, column=45), end=Location(line=136, column=57))
region_000776 = Region(begin=Location(line=136, column=57), end=Location(line=136, column=59))
region_000777 = Region(begin=Location(line=136, column=6), end=Location(line=136, column=14))
region_000778 = Region(begin=Location(line=137, column=32), end=Location(line=137, column=44))
region_000779 = Region(begin=Location(line=137, column=32), end=Location(line=137, column=40))
region_000780 = Region(begin=Location(line=137, column=41), end=Location(line=137, column=44))
region_000781 = Region(begin=Location(line=137, column=5), end=Location(line=138, column=1))
region_000782 = Region(begin=Location(line=137, column=16), end=Location(line=137, column=22))
region_000783 = Region(begin=Location(line=137, column=56), end=Location(line=137, column=65))
region_000784 = Region(begin=Location(line=137, column=23), end=Location(line=137, column=31))
region_000785 = Region(begin=Location(line=137, column=45), end=Location(line=137, column=53))
region_000786 = Region(begin=Location(line=137, column=53), end=Location(line=137, column=55))
region_000787 = Region(begin=Location(line=137, column=6), end=Location(line=137, column=14))
region_000788 = Region(begin=Location(line=138, column=32), end=Location(line=138, column=44))
region_000789 = Region(begin=Location(line=138, column=32), end=Location(line=138, column=40))
region_000790 = Region(begin=Location(line=138, column=41), end=Location(line=138, column=44))
region_000791 = Region(begin=Location(line=138, column=5), end=Location(line=140, column=1))
region_000792 = Region(begin=Location(line=138, column=16), end=Location(line=138, column=22))
region_000793 = Region(begin=Location(line=138, column=56), end=Location(line=138, column=65))
region_000794 = Region(begin=Location(line=138, column=23), end=Location(line=138, column=31))
region_000795 = Region(begin=Location(line=138, column=45), end=Location(line=138, column=53))
region_000796 = Region(begin=Location(line=138, column=53), end=Location(line=138, column=55))
region_000797 = Region(begin=Location(line=138, column=6), end=Location(line=138, column=14))
region_000798 = Region(begin=Location(line=141, column=21), end=Location(line=141, column=33))
region_000799 = Region(begin=Location(line=141, column=21), end=Location(line=141, column=29))
region_000800 = Region(begin=Location(line=141, column=30), end=Location(line=141, column=33))
region_000801 = Region(begin=Location(line=142, column=9), end=Location(line=142, column=29))
region_000802 = Region(begin=Location(line=142, column=9), end=Location(line=142, column=19))
region_000803 = Region(begin=Location(line=142, column=20), end=Location(line=142, column=29))
region_000804 = Region(begin=Location(line=142, column=9), end=Location(line=142, column=36))
region_000805 = Region(begin=Location(line=142, column=30), end=Location(line=142, column=36))
region_000806 = Region(begin=Location(line=143, column=9), end=Location(line=143, column=23))
region_000807 = Region(begin=Location(line=143, column=9), end=Location(line=143, column=13))
region_000808 = Region(begin=Location(line=143, column=14), end=Location(line=143, column=23))
region_000809 = Region(begin=Location(line=143, column=36), end=Location(line=143, column=39))
region_000810 = Region(begin=Location(line=143, column=9), end=Location(line=143, column=39))
region_000811 = Region(begin=Location(line=143, column=24), end=Location(line=143, column=33))
region_000812 = Region(begin=Location(line=141, column=41), end=Location(line=144, column=6))
region_000813 = Region(begin=Location(line=142, column=9), end=Location(line=143, column=40))
region_000814 = Region(begin=Location(line=140, column=5), end=Location(line=146, column=1))
region_000815 = Region(begin=Location(line=141, column=5), end=Location(line=141, column=11))
region_000816 = Region(begin=Location(line=144, column=7), end=Location(line=144, column=16))
region_000817 = Region(begin=Location(line=141, column=12), end=Location(line=141, column=20))
region_000818 = Region(begin=Location(line=141, column=34), end=Location(line=141, column=41))
region_000819 = Region(begin=Location(line=140, column=6), end=Location(line=140, column=14))
region_000820 = Region(begin=Location(line=147, column=21), end=Location(line=147, column=33))
region_000821 = Region(begin=Location(line=147, column=21), end=Location(line=147, column=29))
region_000822 = Region(begin=Location(line=147, column=30), end=Location(line=147, column=33))
region_000823 = Region(begin=Location(line=148, column=9), end=Location(line=148, column=29))
region_000824 = Region(begin=Location(line=148, column=9), end=Location(line=148, column=19))
region_000825 = Region(begin=Location(line=148, column=20), end=Location(line=148, column=29))
region_000826 = Region(begin=Location(line=148, column=9), end=Location(line=148, column=36))
region_000827 = Region(begin=Location(line=148, column=30), end=Location(line=148, column=36))
region_000828 = Region(begin=Location(line=149, column=9), end=Location(line=149, column=23))
region_000829 = Region(begin=Location(line=149, column=9), end=Location(line=149, column=13))
region_000830 = Region(begin=Location(line=149, column=14), end=Location(line=149, column=23))
region_000831 = Region(begin=Location(line=149, column=36), end=Location(line=149, column=39))
region_000832 = Region(begin=Location(line=149, column=9), end=Location(line=149, column=39))
region_000833 = Region(begin=Location(line=149, column=24), end=Location(line=149, column=33))
region_000834 = Region(begin=Location(line=147, column=46), end=Location(line=150, column=6))
region_000835 = Region(begin=Location(line=148, column=9), end=Location(line=149, column=40))
region_000836 = Region(begin=Location(line=146, column=5), end=Location(line=152, column=1))
region_000837 = Region(begin=Location(line=147, column=5), end=Location(line=147, column=11))
region_000838 = Region(begin=Location(line=150, column=7), end=Location(line=150, column=16))
region_000839 = Region(begin=Location(line=147, column=12), end=Location(line=147, column=20))
region_000840 = Region(begin=Location(line=147, column=34), end=Location(line=147, column=46))
region_000841 = Region(begin=Location(line=146, column=6), end=Location(line=146, column=14))
region_000842 = Region(begin=Location(line=153, column=21), end=Location(line=153, column=33))
region_000843 = Region(begin=Location(line=153, column=21), end=Location(line=153, column=29))
region_000844 = Region(begin=Location(line=153, column=30), end=Location(line=153, column=33))
region_000845 = Region(begin=Location(line=154, column=9), end=Location(line=154, column=29))
region_000846 = Region(begin=Location(line=154, column=9), end=Location(line=154, column=19))
region_000847 = Region(begin=Location(line=154, column=20), end=Location(line=154, column=29))
region_000848 = Region(begin=Location(line=154, column=9), end=Location(line=154, column=36))
region_000849 = Region(begin=Location(line=154, column=30), end=Location(line=154, column=36))
region_000850 = Region(begin=Location(line=155, column=9), end=Location(line=155, column=23))
region_000851 = Region(begin=Location(line=155, column=9), end=Location(line=155, column=13))
region_000852 = Region(begin=Location(line=155, column=14), end=Location(line=155, column=23))
region_000853 = Region(begin=Location(line=155, column=36), end=Location(line=155, column=39))
region_000854 = Region(begin=Location(line=155, column=9), end=Location(line=155, column=39))
region_000855 = Region(begin=Location(line=155, column=24), end=Location(line=155, column=33))
region_000856 = Region(begin=Location(line=153, column=47), end=Location(line=156, column=6))
region_000857 = Region(begin=Location(line=154, column=9), end=Location(line=155, column=40))
region_000858 = Region(begin=Location(line=152, column=5), end=Location(line=158, column=1))
region_000859 = Region(begin=Location(line=153, column=5), end=Location(line=153, column=11))
region_000860 = Region(begin=Location(line=156, column=7), end=Location(line=156, column=16))
region_000861 = Region(begin=Location(line=153, column=12), end=Location(line=153, column=20))
region_000862 = Region(begin=Location(line=153, column=34), end=Location(line=153, column=47))
region_000863 = Region(begin=Location(line=152, column=6), end=Location(line=152, column=14))
region_000864 = Region(begin=Location(line=159, column=32), end=Location(line=159, column=44))
region_000865 = Region(begin=Location(line=159, column=32), end=Location(line=159, column=40))
region_000866 = Region(begin=Location(line=159, column=41), end=Location(line=159, column=44))
region_000867 = Region(begin=Location(line=158, column=1), end=Location(line=160, column=1))
region_000868 = Region(begin=Location(line=159, column=16), end=Location(line=159, column=22))
region_000869 = Region(begin=Location(line=159, column=58), end=Location(line=159, column=67))
region_000870 = Region(begin=Location(line=159, column=23), end=Location(line=159, column=31))
region_000871 = Region(begin=Location(line=159, column=45), end=Location(line=159, column=55))
region_000872 = Region(begin=Location(line=159, column=55), end=Location(line=159, column=57))
region_000873 = Region(begin=Location(line=159, column=6), end=Location(line=159, column=14))
region_000874 = Region(begin=Location(line=160, column=32), end=Location(line=160, column=44))
region_000875 = Region(begin=Location(line=160, column=32), end=Location(line=160, column=40))
region_000876 = Region(begin=Location(line=160, column=41), end=Location(line=160, column=44))
region_000877 = Region(begin=Location(line=160, column=5), end=Location(line=161, column=1))
region_000878 = Region(begin=Location(line=160, column=16), end=Location(line=160, column=22))
region_000879 = Region(begin=Location(line=160, column=59), end=Location(line=160, column=68))
region_000880 = Region(begin=Location(line=160, column=23), end=Location(line=160, column=31))
region_000881 = Region(begin=Location(line=160, column=45), end=Location(line=160, column=56))
region_000882 = Region(begin=Location(line=160, column=56), end=Location(line=160, column=58))
region_000883 = Region(begin=Location(line=160, column=6), end=Location(line=160, column=14))
region_000884 = Region(begin=Location(line=161, column=32), end=Location(line=161, column=44))
region_000885 = Region(begin=Location(line=161, column=32), end=Location(line=161, column=40))
region_000886 = Region(begin=Location(line=161, column=41), end=Location(line=161, column=44))
region_000887 = Region(begin=Location(line=161, column=5), end=Location(line=163, column=1))
region_000888 = Region(begin=Location(line=161, column=16), end=Location(line=161, column=22))
region_000889 = Region(begin=Location(line=161, column=54), end=Location(line=161, column=63))
region_000890 = Region(begin=Location(line=161, column=23), end=Location(line=161, column=31))
region_000891 = Region(begin=Location(line=161, column=45), end=Location(line=161, column=51))
region_000892 = Region(begin=Location(line=161, column=51), end=Location(line=161, column=53))
region_000893 = Region(begin=Location(line=161, column=6), end=Location(line=161, column=14))
region_000894 = Region(begin=Location(line=164, column=21), end=Location(line=164, column=33))
region_000895 = Region(begin=Location(line=164, column=21), end=Location(line=164, column=29))
region_000896 = Region(begin=Location(line=164, column=30), end=Location(line=164, column=33))
region_000897 = Region(begin=Location(line=165, column=9), end=Location(line=165, column=23))
region_000898 = Region(begin=Location(line=165, column=9), end=Location(line=165, column=13))
region_000899 = Region(begin=Location(line=165, column=14), end=Location(line=165, column=23))
region_000900 = Region(begin=Location(line=165, column=9), end=Location(line=165, column=30))
region_000901 = Region(begin=Location(line=165, column=24), end=Location(line=165, column=30))
region_000902 = Region(begin=Location(line=166, column=9), end=Location(line=166, column=23))
region_000903 = Region(begin=Location(line=166, column=9), end=Location(line=166, column=13))
region_000904 = Region(begin=Location(line=166, column=14), end=Location(line=166, column=23))
region_000905 = Region(begin=Location(line=166, column=9), end=Location(line=166, column=28))
region_000906 = Region(begin=Location(line=166, column=24), end=Location(line=166, column=28))
region_000907 = Region(begin=Location(line=167, column=10), end=Location(line=167, column=20))
region_000908 = Region(begin=Location(line=167, column=23), end=Location(line=167, column=27))
region_000909 = Region(begin=Location(line=167, column=9), end=Location(line=167, column=38))
region_000910 = Region(begin=Location(line=167, column=29), end=Location(line=167, column=38))
region_000911 = Region(begin=Location(line=167, column=47), end=Location(line=167, column=51))
region_000912 = Region(begin=Location(line=167, column=9), end=Location(line=167, column=51))
region_000913 = Region(begin=Location(line=167, column=39), end=Location(line=167, column=44))
region_000914 = Region(begin=Location(line=164, column=42), end=Location(line=168, column=6))
region_000915 = Region(begin=Location(line=165, column=9), end=Location(line=167, column=52))
region_000916 = Region(begin=Location(line=163, column=5), end=Location(line=170, column=1))
region_000917 = Region(begin=Location(line=164, column=5), end=Location(line=164, column=11))
region_000918 = Region(begin=Location(line=168, column=7), end=Location(line=168, column=16))
region_000919 = Region(begin=Location(line=164, column=12), end=Location(line=164, column=20))
region_000920 = Region(begin=Location(line=164, column=34), end=Location(line=164, column=42))
region_000921 = Region(begin=Location(line=163, column=6), end=Location(line=163, column=14))
region_000922 = Region(begin=Location(line=171, column=21), end=Location(line=171, column=33))
region_000923 = Region(begin=Location(line=171, column=21), end=Location(line=171, column=29))
region_000924 = Region(begin=Location(line=171, column=30), end=Location(line=171, column=33))
region_000925 = Region(begin=Location(line=172, column=9), end=Location(line=172, column=30))
region_000926 = Region(begin=Location(line=172, column=9), end=Location(line=172, column=20))
region_000927 = Region(begin=Location(line=172, column=21), end=Location(line=172, column=30))
region_000928 = Region(begin=Location(line=172, column=9), end=Location(line=172, column=37))
region_000929 = Region(begin=Location(line=172, column=31), end=Location(line=172, column=37))
region_000930 = Region(begin=Location(line=173, column=9), end=Location(line=173, column=22))
region_000931 = Region(begin=Location(line=173, column=9), end=Location(line=173, column=12))
region_000932 = Region(begin=Location(line=173, column=13), end=Location(line=173, column=22))
region_000933 = Region(begin=Location(line=173, column=9), end=Location(line=173, column=27))
region_000934 = Region(begin=Location(line=173, column=23), end=Location(line=173, column=27))
region_000935 = Region(begin=Location(line=174, column=10), end=Location(line=174, column=20))
region_000936 = Region(begin=Location(line=174, column=23), end=Location(line=174, column=27))
region_000937 = Region(begin=Location(line=174, column=9), end=Location(line=174, column=38))
region_000938 = Region(begin=Location(line=174, column=29), end=Location(line=174, column=38))
region_000939 = Region(begin=Location(line=174, column=47), end=Location(line=174, column=51))
region_000940 = Region(begin=Location(line=174, column=9), end=Location(line=174, column=51))
region_000941 = Region(begin=Location(line=174, column=39), end=Location(line=174, column=44))
region_000942 = Region(begin=Location(line=171, column=42), end=Location(line=175, column=6))
region_000943 = Region(begin=Location(line=172, column=9), end=Location(line=174, column=52))
region_000944 = Region(begin=Location(line=170, column=5), end=Location(line=177, column=1))
region_000945 = Region(begin=Location(line=171, column=5), end=Location(line=171, column=11))
region_000946 = Region(begin=Location(line=175, column=7), end=Location(line=175, column=16))
region_000947 = Region(begin=Location(line=171, column=12), end=Location(line=171, column=20))
region_000948 = Region(begin=Location(line=171, column=34), end=Location(line=171, column=42))
region_000949 = Region(begin=Location(line=170, column=6), end=Location(line=170, column=14))
region_000950 = Region(begin=Location(line=177, column=1), end=Location(line=186, column=1))
region_000951 = Region(begin=Location(line=185, column=16), end=Location(line=185, column=22))
region_000952 = Region(begin=Location(line=185, column=55), end=Location(line=185, column=58))
region_000953 = Region(begin=Location(line=185, column=23), end=Location(line=185, column=31))
region_000954 = Region(begin=Location(line=185, column=37), end=Location(line=185, column=52))
region_000955 = Region(begin=Location(line=185, column=52), end=Location(line=185, column=54))
region_000956 = Region(begin=Location(line=185, column=6), end=Location(line=185, column=14))
region_000957 = Region(begin=Location(line=186, column=5), end=Location(line=187, column=1))
region_000958 = Region(begin=Location(line=186, column=16), end=Location(line=186, column=22))
region_000959 = Region(begin=Location(line=186, column=59), end=Location(line=186, column=62))
region_000960 = Region(begin=Location(line=186, column=23), end=Location(line=186, column=31))
region_000961 = Region(begin=Location(line=186, column=37), end=Location(line=186, column=56))
region_000962 = Region(begin=Location(line=186, column=56), end=Location(line=186, column=58))
region_000963 = Region(begin=Location(line=186, column=6), end=Location(line=186, column=14))
region_000964 = Region(begin=Location(line=187, column=5), end=Location(line=188, column=1))
region_000965 = Region(begin=Location(line=187, column=16), end=Location(line=187, column=22))
region_000966 = Region(begin=Location(line=187, column=60), end=Location(line=187, column=63))
region_000967 = Region(begin=Location(line=187, column=23), end=Location(line=187, column=31))
region_000968 = Region(begin=Location(line=187, column=37), end=Location(line=187, column=57))
region_000969 = Region(begin=Location(line=187, column=57), end=Location(line=187, column=59))
region_000970 = Region(begin=Location(line=187, column=6), end=Location(line=187, column=14))
region_000971 = Region(begin=Location(line=188, column=5), end=Location(line=189, column=1))
region_000972 = Region(begin=Location(line=188, column=16), end=Location(line=188, column=22))
region_000973 = Region(begin=Location(line=188, column=59), end=Location(line=188, column=62))
region_000974 = Region(begin=Location(line=188, column=23), end=Location(line=188, column=31))
region_000975 = Region(begin=Location(line=188, column=37), end=Location(line=188, column=56))
region_000976 = Region(begin=Location(line=188, column=56), end=Location(line=188, column=58))
region_000977 = Region(begin=Location(line=188, column=6), end=Location(line=188, column=14))
region_000978 = Region(begin=Location(line=189, column=5), end=Location(line=190, column=1))
region_000979 = Region(begin=Location(line=189, column=16), end=Location(line=189, column=22))
region_000980 = Region(begin=Location(line=189, column=55), end=Location(line=189, column=58))
region_000981 = Region(begin=Location(line=189, column=23), end=Location(line=189, column=31))
region_000982 = Region(begin=Location(line=189, column=37), end=Location(line=189, column=52))
region_000983 = Region(begin=Location(line=189, column=52), end=Location(line=189, column=54))
region_000984 = Region(begin=Location(line=189, column=6), end=Location(line=189, column=14))
region_000985 = Region(begin=Location(line=190, column=5), end=Location(line=192, column=1))
region_000986 = Region(begin=Location(line=190, column=16), end=Location(line=190, column=22))
region_000987 = Region(begin=Location(line=190, column=55), end=Location(line=190, column=58))
region_000988 = Region(begin=Location(line=190, column=23), end=Location(line=190, column=31))
region_000989 = Region(begin=Location(line=190, column=37), end=Location(line=190, column=52))
region_000990 = Region(begin=Location(line=190, column=52), end=Location(line=190, column=54))
region_000991 = Region(begin=Location(line=190, column=6), end=Location(line=190, column=14))
region_000992 = Region(begin=Location(line=192, column=1), end=Location(line=194, column=1))
region_000993 = Region(begin=Location(line=193, column=16), end=Location(line=193, column=22))
region_000994 = Region(begin=Location(line=193, column=57), end=Location(line=193, column=60))
region_000995 = Region(begin=Location(line=193, column=23), end=Location(line=193, column=31))
region_000996 = Region(begin=Location(line=193, column=37), end=Location(line=193, column=54))
region_000997 = Region(begin=Location(line=193, column=54), end=Location(line=193, column=56))
region_000998 = Region(begin=Location(line=193, column=6), end=Location(line=193, column=14))
region_000999 = Region(begin=Location(line=194, column=5), end=Location(line=195, column=1))
region_001000 = Region(begin=Location(line=194, column=16), end=Location(line=194, column=22))
region_001001 = Region(begin=Location(line=194, column=58), end=Location(line=194, column=61))
region_001002 = Region(begin=Location(line=194, column=23), end=Location(line=194, column=31))
region_001003 = Region(begin=Location(line=194, column=37), end=Location(line=194, column=55))
region_001004 = Region(begin=Location(line=194, column=55), end=Location(line=194, column=57))
region_001005 = Region(begin=Location(line=194, column=6), end=Location(line=194, column=14))
region_001006 = Region(begin=Location(line=195, column=5), end=Location(line=196, column=1))
region_001007 = Region(begin=Location(line=195, column=16), end=Location(line=195, column=22))
region_001008 = Region(begin=Location(line=195, column=53), end=Location(line=195, column=56))
region_001009 = Region(begin=Location(line=195, column=23), end=Location(line=195, column=31))
region_001010 = Region(begin=Location(line=195, column=37), end=Location(line=195, column=50))
region_001011 = Region(begin=Location(line=195, column=50), end=Location(line=195, column=52))
region_001012 = Region(begin=Location(line=195, column=6), end=Location(line=195, column=14))
region_001013 = Region(begin=Location(line=22, column=1), end=Location(line=196, column=1))
region_001014 = Region(begin=Location(line=22, column=1), end=Location(line=22, column=7))
region_001015 = Region(begin=Location(line=22, column=8), end=Location(line=22, column=15))
region_001016 = Region(begin=Location(line=22, column=22), end=Location(line=22, column=37))
region_001017 = Region(begin=Location(line=26, column=1), end=Location(line=196, column=1))


# ----------------------------------------------------------------------
statement_000000 = ImportStatementItemParserInfo.Create(
    regions=[region_000000, region_000001, region_000002],
    name="FixedMutableStr",
    alias="FixedMutableStrConcept",
)

statement_000001 = ImportStatementParserInfo.Create(
    regions=[region_000003, region_000003, region_000004],
    visibility_param=VisibilityModifier.private,
    source_filename=".Concepts.MutableStr",
    import_items=[statement_000000, ],
    import_type=ImportStatementParserInfoImportType.source_is_module,
)

statement_000002 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000005, region_000005, None],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000003 = BooleanExpressionParserInfo.Create(
    regions=[region_000006],
    value=False,
)

statement_000004 = ConstraintParameterParserInfo.Create(
    regions=[region_000007, region_000008],
    type=statement_000002,
    name="allow_empty!",
    default_value=statement_000003,
)

statement_000005 = ConstraintParametersParserInfo.Create(
    regions=[region_000009, None, region_000007, None],
    positional=None,
    any=[statement_000004, ],
    keyword=None,
)

statement_000006 = VariableExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.TypeCustomization,
    regions=[region_000010, region_000010],
    name="allow_empty!",
)

statement_000007 = ConstraintArgumentParserInfo.Create(
    regions=[region_000011, region_000012],
    expression=statement_000006,
    keyword="allow_empty!",
)

statement_000008 = ConstraintArgumentsParserInfo.Create(
    regions=[region_000013, region_000013],
    arguments=[statement_000007, ],
)

statement_000009 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000014, region_000015, None],
    value=CustomType("FixedMutableStrConcept"),
    templates=None,
    constraints=statement_000008,
    mutability_modifier=None,
)

statement_000009 = ClassStatementDependencyParserInfo.Create(
    regions=[region_000014, region_000014],
    visibility=VisibilityModifier.private,
    type=statement_000009,
)

statement_000010 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000016, region_000017, region_000018],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.var,
)

statement_000011 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000019, region_000019, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000012 = TemplateParametersParserInfo.Create(
    regions=[region_000020, None, region_000019, None],
    positional=None,
    any=[statement_000011, ],
    keyword=None,
)

statement_000013 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000021, region_000022, region_000023],
    value=CustomType("ArchiveT"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.ref,
)

statement_000014 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000024, None, region_000025],  # type: ignore
    type=statement_000013,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000015 = FuncParametersParserInfo.Create(
    regions=[region_000026, None, region_000024, None],
    positional=None,
    any_args=[statement_000014, ],
    keyword=None,
)

statement_000016 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000027, region_000026, region_000028, None, region_000029, region_000030, None, None, None, region_000031, None, None, None, None, region_000032],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000015,
    visibility_param=VisibilityModifier.public,
    mutability_param=None,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000010,
    name=FuncDefinitionStatementParserInfoOperatorType.Deserialize,
    documentation=None,
    templates=statement_000012,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=True,
)

statement_000017 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000033, region_000033, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000018 = TemplateParametersParserInfo.Create(
    regions=[region_000034, None, region_000033, None],
    positional=None,
    any=[statement_000017, ],
    keyword=None,
)

statement_000019 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000035, region_000036, region_000037],
    value=CustomType("ArchiveT"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.ref,
)

statement_000020 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000038, None, region_000039],  # type: ignore
    type=statement_000019,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000021 = FuncParametersParserInfo.Create(
    regions=[region_000040, None, region_000038, None],
    positional=None,
    any_args=[statement_000020, ],
    keyword=None,
)

statement_000022 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000041, region_000040, region_000042, region_000043, region_000044, region_000045, None, None, None, region_000046, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000021,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Serialize,
    documentation=None,
    templates=statement_000018,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000023 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000047, region_000047, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000024 = TemplateParametersParserInfo.Create(
    regions=[region_000048, None, region_000047, None],
    positional=None,
    any=[statement_000023, ],
    keyword=None,
)

statement_000025 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000049, region_000050, region_000051],
    value=CustomType("ArchiveT"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.ref,
)

statement_000026 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000052, None, region_000053],  # type: ignore
    type=statement_000025,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000027 = FuncParametersParserInfo.Create(
    regions=[region_000054, None, region_000052, None],
    positional=None,
    any_args=[statement_000026, ],
    keyword=None,
)

statement_000028 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000055, region_000054, region_000056, region_000057, region_000058, region_000059, None, None, None, region_000060, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000027,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Serialize,
    documentation=None,
    templates=statement_000024,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000029 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000061, region_000061, None],
    name="VisitorT",
    is_variadic=None,
    default_type=None,
)

statement_000030 = TemplateParametersParserInfo.Create(
    regions=[region_000062, None, region_000061, None],
    positional=None,
    any=[statement_000029, ],
    keyword=None,
)

statement_000031 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000063, region_000064, region_000065],
    value=CustomType("VisitorT"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.ref,
)

statement_000032 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000066, None, region_000067],  # type: ignore
    type=statement_000031,
    is_variadic=None,
    name="visitor",
    default_value=None,
)

statement_000033 = FuncParametersParserInfo.Create(
    regions=[region_000068, None, region_000066, None],
    positional=None,
    any_args=[statement_000032, ],
    keyword=None,
)

statement_000034 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000069, region_000068, region_000070, region_000071, region_000072, region_000073, None, None, None, region_000074, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000033,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Accept,
    documentation=None,
    templates=statement_000030,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000035 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000075, region_000075, None],
    name="VisitorT",
    is_variadic=None,
    default_type=None,
)

statement_000036 = TemplateParametersParserInfo.Create(
    regions=[region_000076, None, region_000075, None],
    positional=None,
    any=[statement_000035, ],
    keyword=None,
)

statement_000037 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000077, region_000078, region_000079],
    value=CustomType("VisitorT"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.ref,
)

statement_000038 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000080, None, region_000081],  # type: ignore
    type=statement_000037,
    is_variadic=None,
    name="visitor",
    default_value=None,
)

statement_000039 = FuncParametersParserInfo.Create(
    regions=[region_000082, None, region_000080, None],
    positional=None,
    any_args=[statement_000038, ],
    keyword=None,
)

statement_000040 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000083, region_000082, region_000084, region_000085, region_000086, region_000087, None, None, None, region_000088, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000039,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Accept,
    documentation=None,
    templates=statement_000036,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000041 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000089, region_000090, region_000091],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.var,
)

statement_000042 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000092, region_000097, region_000093, region_000094, region_000095, region_000096, None, None, None, region_000098, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000041,
    name=FuncDefinitionStatementParserInfoOperatorType.Clone,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000043 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000099, region_000100, region_000101],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000044 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000102, region_000107, region_000103, region_000104, region_000105, region_000106, None, None, None, region_000108, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000043,
    name=FuncDefinitionStatementParserInfoOperatorType.ToBool,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000045 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000109, region_000110, region_000111],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000046 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000112, region_000117, region_000113, region_000114, region_000115, region_000116, None, None, None, region_000118, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000045,
    name=FuncDefinitionStatementParserInfoOperatorType.ToString,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000047 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000119, region_000120, region_000121],
    value=CustomType("CompareResult"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000048 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000122, region_000123, region_000124],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000049 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000125, None, region_000126],  # type: ignore
    type=statement_000048,
    is_variadic=None,
    name="this",
    default_value=None,
)

statement_000050 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000127, region_000128, region_000129],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000051 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000130, None, region_000131],  # type: ignore
    type=statement_000050,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000052 = FuncParametersParserInfo.Create(
    regions=[region_000132, None, region_000133, None],
    positional=None,
    any_args=[statement_000049, statement_000051, ],
    keyword=None,
)

statement_000053 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000134, region_000132, region_000135, None, region_000136, region_000137, None, None, None, region_000138, None, None, None, None, region_000139],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000052,
    visibility_param=VisibilityModifier.public,
    mutability_param=None,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000047,
    name=FuncDefinitionStatementParserInfoOperatorType.Compare,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=True,
)

statement_000054 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000140, region_000141, region_000142],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000055 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000143, region_000144, region_000145],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000056 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000146, None, region_000147],  # type: ignore
    type=statement_000055,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000057 = FuncParametersParserInfo.Create(
    regions=[region_000148, None, region_000146, None],
    positional=None,
    any_args=[statement_000056, ],
    keyword=None,
)

statement_000058 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000149, region_000148, region_000150, region_000151, region_000152, region_000153, None, None, None, region_000154, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000057,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000054,
    name=FuncDefinitionStatementParserInfoOperatorType.Equal,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000059 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000155, region_000156, region_000157],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000060 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000158, region_000159, region_000160],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000061 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000161, None, region_000162],  # type: ignore
    type=statement_000060,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000062 = FuncParametersParserInfo.Create(
    regions=[region_000163, None, region_000161, None],
    positional=None,
    any_args=[statement_000061, ],
    keyword=None,
)

statement_000063 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000164, region_000163, region_000165, region_000166, region_000167, region_000168, None, None, None, region_000169, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000062,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000059,
    name=FuncDefinitionStatementParserInfoOperatorType.NotEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000064 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000170, region_000171, region_000172],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000065 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000173, region_000174, region_000175],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000066 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000176, None, region_000177],  # type: ignore
    type=statement_000065,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000067 = FuncParametersParserInfo.Create(
    regions=[region_000178, None, region_000176, None],
    positional=None,
    any_args=[statement_000066, ],
    keyword=None,
)

statement_000068 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000179, region_000178, region_000180, region_000181, region_000182, region_000183, None, None, None, region_000184, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000067,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000064,
    name=FuncDefinitionStatementParserInfoOperatorType.Less,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000069 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000185, region_000186, region_000187],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000070 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000188, region_000189, region_000190],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000071 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000191, None, region_000192],  # type: ignore
    type=statement_000070,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000072 = FuncParametersParserInfo.Create(
    regions=[region_000193, None, region_000191, None],
    positional=None,
    any_args=[statement_000071, ],
    keyword=None,
)

statement_000073 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000194, region_000193, region_000195, region_000196, region_000197, region_000198, None, None, None, region_000199, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000072,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000069,
    name=FuncDefinitionStatementParserInfoOperatorType.LessEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000074 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000200, region_000201, region_000202],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000075 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000203, region_000204, region_000205],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000076 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000206, None, region_000207],  # type: ignore
    type=statement_000075,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000077 = FuncParametersParserInfo.Create(
    regions=[region_000208, None, region_000206, None],
    positional=None,
    any_args=[statement_000076, ],
    keyword=None,
)

statement_000078 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000209, region_000208, region_000210, region_000211, region_000212, region_000213, None, None, None, region_000214, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000077,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000074,
    name=FuncDefinitionStatementParserInfoOperatorType.Greater,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000079 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000215, region_000216, region_000217],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000080 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000218, region_000219, region_000220],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000081 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000221, None, region_000222],  # type: ignore
    type=statement_000080,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000082 = FuncParametersParserInfo.Create(
    regions=[region_000223, None, region_000221, None],
    positional=None,
    any_args=[statement_000081, ],
    keyword=None,
)

statement_000083 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000224, region_000223, region_000225, region_000226, region_000227, region_000228, None, None, None, region_000229, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000082,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000079,
    name=FuncDefinitionStatementParserInfoOperatorType.GreaterEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000084 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000230, region_000230, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000085 = NoneExpressionParserInfo.Create(
    regions=[region_000231],
)

statement_000086 = VariantExpressionParserInfo.Create(
    regions=[region_000232, region_000233],
    types=[statement_000084, statement_000085, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000087 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000234, region_000235, region_000236],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000088 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000237, None, region_000238],  # type: ignore
    type=statement_000087,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000089 = FuncParametersParserInfo.Create(
    regions=[region_000239, None, region_000237, None],
    positional=None,
    any_args=[statement_000088, ],
    keyword=None,
)

statement_000090 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000240, region_000239, region_000241, region_000242, region_000243, region_000244, None, None, None, region_000245, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000089,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000086,
    name=FuncDefinitionStatementParserInfoOperatorType.Index,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000091 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000246, region_000246, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000092 = NoneExpressionParserInfo.Create(
    regions=[region_000247],
)

statement_000093 = VariantExpressionParserInfo.Create(
    regions=[region_000248, region_000249],
    types=[statement_000091, statement_000092, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000094 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000250, region_000251, region_000252],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000095 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000253, None, region_000254],  # type: ignore
    type=statement_000094,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000096 = FuncParametersParserInfo.Create(
    regions=[region_000255, None, region_000253, None],
    positional=None,
    any_args=[statement_000095, ],
    keyword=None,
)

statement_000097 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000256, region_000255, region_000257, region_000258, region_000259, region_000260, None, None, None, region_000261, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000096,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000093,
    name=FuncDefinitionStatementParserInfoOperatorType.Index,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000098 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000262, region_000263, region_000264],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000099 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000265, region_000266, region_000267],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000100 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000268, None, region_000269],  # type: ignore
    type=statement_000099,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000101 = FuncParametersParserInfo.Create(
    regions=[region_000270, None, region_000268, None],
    positional=None,
    any_args=[statement_000100, ],
    keyword=None,
)

statement_000102 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000271, region_000270, region_000272, region_000273, region_000274, region_000275, None, None, None, region_000276, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000101,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000098,
    name=FuncDefinitionStatementParserInfoOperatorType.Contains,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000103 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000277, region_000278, region_000279],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000104 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000280, region_000281, region_000282],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000105 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000283, None, region_000284],  # type: ignore
    type=statement_000104,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000106 = FuncParametersParserInfo.Create(
    regions=[region_000285, None, region_000283, None],
    positional=None,
    any_args=[statement_000105, ],
    keyword=None,
)

statement_000107 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000286, region_000285, region_000287, region_000288, region_000289, region_000290, None, None, None, region_000291, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000106,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000103,
    name=FuncDefinitionStatementParserInfoOperatorType.Contains,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000108 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000292, region_000293, region_000294],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000109 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000295, region_000296, region_000297],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000110 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000298, None, region_000299],  # type: ignore
    type=statement_000109,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000111 = FuncParametersParserInfo.Create(
    regions=[region_000300, None, region_000298, None],
    positional=None,
    any_args=[statement_000110, ],
    keyword=None,
)

statement_000112 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000301, region_000300, region_000302, region_000303, region_000304, region_000305, None, None, None, region_000306, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000111,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000108,
    name=FuncDefinitionStatementParserInfoOperatorType.NotContains,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000113 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000307, region_000308, region_000309],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000114 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000310, region_000311, region_000312],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000115 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000313, None, region_000314],  # type: ignore
    type=statement_000114,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000116 = FuncParametersParserInfo.Create(
    regions=[region_000315, None, region_000313, None],
    positional=None,
    any_args=[statement_000115, ],
    keyword=None,
)

statement_000117 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000316, region_000315, region_000317, region_000318, region_000319, region_000320, None, None, None, region_000321, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000116,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000113,
    name=FuncDefinitionStatementParserInfoOperatorType.NotContains,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000118 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000322, region_000323, region_000324],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000119 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000325, region_000330, region_000326, region_000327, region_000328, region_000329, None, None, None, region_000331, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000118,
    name="NumChars",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000120 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000332, region_000333, region_000334],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000121 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000335, region_000340, region_000336, region_000337, region_000338, region_000339, None, None, None, region_000341, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000120,
    name="NumBytes",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000122 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000342, region_000343, region_000344],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000123 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000345, region_000350, region_000346, region_000347, region_000348, region_000349, None, None, None, region_000351, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000122,
    name="IsAlphanumeric",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000124 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000352, region_000353, region_000354],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000125 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000355, region_000360, region_000356, region_000357, region_000358, region_000359, None, None, None, region_000361, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000124,
    name="IsAlpha",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000126 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000362, region_000363, region_000364],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000127 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000365, region_000370, region_000366, region_000367, region_000368, region_000369, None, None, None, region_000371, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000126,
    name="IsAscii",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000128 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000372, region_000373, region_000374],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000129 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000375, region_000380, region_000376, region_000377, region_000378, region_000379, None, None, None, region_000381, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000128,
    name="IsInt",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000130 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000382, region_000383, region_000384],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000131 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000385, region_000390, region_000386, region_000387, region_000388, region_000389, None, None, None, region_000391, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000130,
    name="IsLower",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000132 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000392, region_000393, region_000394],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000133 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000395, region_000400, region_000396, region_000397, region_000398, region_000399, None, None, None, region_000401, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000132,
    name="IsNum",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000134 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000402, region_000403, region_000404],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000135 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000405, region_000410, region_000406, region_000407, region_000408, region_000409, None, None, None, region_000411, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000134,
    name="IsPrintable",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000136 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000412, region_000413, region_000414],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000137 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000415, region_000420, region_000416, region_000417, region_000418, region_000419, None, None, None, region_000421, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000136,
    name="IsSpace",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000138 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000422, region_000423, region_000424],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000139 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000425, region_000430, region_000426, region_000427, region_000428, region_000429, None, None, None, region_000431, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000138,
    name="IsTitle",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000140 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000432, region_000433, region_000434],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000141 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000435, region_000440, region_000436, region_000437, region_000438, region_000439, None, None, None, region_000441, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000140,
    name="IsUpper",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000142 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000442, region_000443, region_000444],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000143 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000445, region_000446, region_000447],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000144 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000448, None, region_000449],  # type: ignore
    type=statement_000143,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000145 = FuncParametersParserInfo.Create(
    regions=[region_000450, None, region_000448, None],
    positional=None,
    any_args=[statement_000144, ],
    keyword=None,
)

statement_000146 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000451, region_000450, region_000452, region_000453, region_000454, region_000455, None, None, None, region_000456, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000145,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000142,
    name="Count",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000147 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000457, region_000458, region_000459],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000148 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000460, region_000461, region_000462],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000149 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000463, None, region_000464],  # type: ignore
    type=statement_000148,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000150 = FuncParametersParserInfo.Create(
    regions=[region_000465, None, region_000463, None],
    positional=None,
    any_args=[statement_000149, ],
    keyword=None,
)

statement_000151 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000466, region_000465, region_000467, region_000468, region_000469, region_000470, None, None, None, region_000471, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000150,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000147,
    name="Count",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000152 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000472, region_000473, region_000474],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000153 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000475, region_000476, region_000477],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000154 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000478, None, region_000479],  # type: ignore
    type=statement_000153,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000155 = FuncParametersParserInfo.Create(
    regions=[region_000480, None, region_000478, None],
    positional=None,
    any_args=[statement_000154, ],
    keyword=None,
)

statement_000156 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000481, region_000480, region_000482, region_000483, region_000484, region_000485, None, None, None, region_000486, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000155,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000152,
    name="StartsWith",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000157 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000487, region_000488, region_000489],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000158 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000490, region_000491, region_000492],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000159 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000493, None, region_000494],  # type: ignore
    type=statement_000158,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000160 = FuncParametersParserInfo.Create(
    regions=[region_000495, None, region_000493, None],
    positional=None,
    any_args=[statement_000159, ],
    keyword=None,
)

statement_000161 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000496, region_000495, region_000497, region_000498, region_000499, region_000500, None, None, None, region_000501, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000160,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000157,
    name="StartsWith",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000162 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000502, region_000503, region_000504],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000163 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000505, region_000506, region_000507],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000164 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000508, None, region_000509],  # type: ignore
    type=statement_000163,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000165 = FuncParametersParserInfo.Create(
    regions=[region_000510, None, region_000508, None],
    positional=None,
    any_args=[statement_000164, ],
    keyword=None,
)

statement_000166 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000511, region_000510, region_000512, region_000513, region_000514, region_000515, None, None, None, region_000516, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000165,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000162,
    name="EndsWith",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000167 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000517, region_000518, region_000519],
    value=BooleanType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000168 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000520, region_000521, region_000522],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000169 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000523, None, region_000524],  # type: ignore
    type=statement_000168,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000170 = FuncParametersParserInfo.Create(
    regions=[region_000525, None, region_000523, None],
    positional=None,
    any_args=[statement_000169, ],
    keyword=None,
)

statement_000171 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000526, region_000525, region_000527, region_000528, region_000529, region_000530, None, None, None, region_000531, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000170,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000167,
    name="EndsWith",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000172 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000532, region_000532, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000173 = NoneExpressionParserInfo.Create(
    regions=[region_000533],
)

statement_000174 = VariantExpressionParserInfo.Create(
    regions=[region_000534, region_000535],
    types=[statement_000172, statement_000173, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000175 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000536, region_000537, region_000538],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000176 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000539, None, region_000540],  # type: ignore
    type=statement_000175,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000177 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000541, region_000541, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000178 = NoneExpressionParserInfo.Create(
    regions=[region_000542],
)

statement_000179 = VariantExpressionParserInfo.Create(
    regions=[region_000543, region_000544],
    types=[statement_000177, statement_000178, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000180 = NoneExpressionParserInfo.Create(
    regions=[region_000545],
)

statement_000181 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000546, None, region_000547],  # type: ignore
    type=statement_000179,
    is_variadic=None,
    name="begin_char_index",
    default_value=statement_000180,
)

statement_000182 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000548, region_000548, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000183 = NoneExpressionParserInfo.Create(
    regions=[region_000549],
)

statement_000184 = VariantExpressionParserInfo.Create(
    regions=[region_000550, region_000551],
    types=[statement_000182, statement_000183, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000185 = NoneExpressionParserInfo.Create(
    regions=[region_000552],
)

statement_000186 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000553, None, region_000554],  # type: ignore
    type=statement_000184,
    is_variadic=None,
    name="end_char_index",
    default_value=statement_000185,
)

statement_000187 = FuncParametersParserInfo.Create(
    regions=[region_000555, None, region_000556, None],
    positional=None,
    any_args=[statement_000176, statement_000181, statement_000186, ],
    keyword=None,
)

statement_000188 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000557, region_000555, region_000558, region_000559, region_000560, region_000561, None, None, None, region_000562, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000187,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000174,
    name="Find",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000189 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000563, region_000563, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000190 = NoneExpressionParserInfo.Create(
    regions=[region_000564],
)

statement_000191 = VariantExpressionParserInfo.Create(
    regions=[region_000565, region_000566],
    types=[statement_000189, statement_000190, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000192 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000567, region_000568, region_000569],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000193 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000570, None, region_000571],  # type: ignore
    type=statement_000192,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000194 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000572, region_000572, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000195 = NoneExpressionParserInfo.Create(
    regions=[region_000573],
)

statement_000196 = VariantExpressionParserInfo.Create(
    regions=[region_000574, region_000575],
    types=[statement_000194, statement_000195, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000197 = NoneExpressionParserInfo.Create(
    regions=[region_000576],
)

statement_000198 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000577, None, region_000578],  # type: ignore
    type=statement_000196,
    is_variadic=None,
    name="begin_char_index",
    default_value=statement_000197,
)

statement_000199 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000579, region_000579, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000200 = NoneExpressionParserInfo.Create(
    regions=[region_000580],
)

statement_000201 = VariantExpressionParserInfo.Create(
    regions=[region_000581, region_000582],
    types=[statement_000199, statement_000200, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000202 = NoneExpressionParserInfo.Create(
    regions=[region_000583],
)

statement_000203 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000584, None, region_000585],  # type: ignore
    type=statement_000201,
    is_variadic=None,
    name="end_char_index",
    default_value=statement_000202,
)

statement_000204 = FuncParametersParserInfo.Create(
    regions=[region_000586, None, region_000587, None],
    positional=None,
    any_args=[statement_000193, statement_000198, statement_000203, ],
    keyword=None,
)

statement_000205 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000588, region_000586, region_000589, region_000590, region_000591, region_000592, None, None, None, region_000593, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000204,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000191,
    name="Find",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000206 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000594, region_000594, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000207 = NoneExpressionParserInfo.Create(
    regions=[region_000595],
)

statement_000208 = VariantExpressionParserInfo.Create(
    regions=[region_000596, region_000597],
    types=[statement_000206, statement_000207, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000209 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000598, region_000599, region_000600],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000210 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000601, None, region_000602],  # type: ignore
    type=statement_000209,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000211 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000603, region_000603, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000212 = NoneExpressionParserInfo.Create(
    regions=[region_000604],
)

statement_000213 = VariantExpressionParserInfo.Create(
    regions=[region_000605, region_000606],
    types=[statement_000211, statement_000212, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000214 = NoneExpressionParserInfo.Create(
    regions=[region_000607],
)

statement_000215 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000608, None, region_000609],  # type: ignore
    type=statement_000213,
    is_variadic=None,
    name="end_char_index",
    default_value=statement_000214,
)

statement_000216 = FuncParametersParserInfo.Create(
    regions=[region_000610, None, region_000611, None],
    positional=None,
    any_args=[statement_000210, statement_000215, ],
    keyword=None,
)

statement_000217 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000612, region_000610, region_000613, region_000614, region_000615, region_000616, None, None, None, region_000617, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000216,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000208,
    name="ReverseFind",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000218 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000618, region_000618, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000219 = NoneExpressionParserInfo.Create(
    regions=[region_000619],
)

statement_000220 = VariantExpressionParserInfo.Create(
    regions=[region_000620, region_000621],
    types=[statement_000218, statement_000219, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000221 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000622, region_000623, region_000624],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000222 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000625, None, region_000626],  # type: ignore
    type=statement_000221,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000223 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000627, region_000627, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000224 = NoneExpressionParserInfo.Create(
    regions=[region_000628],
)

statement_000225 = VariantExpressionParserInfo.Create(
    regions=[region_000629, region_000630],
    types=[statement_000223, statement_000224, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000226 = NoneExpressionParserInfo.Create(
    regions=[region_000631],
)

statement_000227 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000632, None, region_000633],  # type: ignore
    type=statement_000225,
    is_variadic=None,
    name="end_char_index",
    default_value=statement_000226,
)

statement_000228 = FuncParametersParserInfo.Create(
    regions=[region_000634, None, region_000635, None],
    positional=None,
    any_args=[statement_000222, statement_000227, ],
    keyword=None,
)

statement_000229 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000636, region_000634, region_000637, region_000638, region_000639, region_000640, None, None, None, region_000641, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000228,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000220,
    name="ReverseFind",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000230 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000642, region_000642, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000231 = NoneExpressionParserInfo.Create(
    regions=[region_000643],
)

statement_000232 = VariantExpressionParserInfo.Create(
    regions=[region_000644, region_000645],
    types=[statement_000230, statement_000231, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000233 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000646, region_000647, region_000648],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000234 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000649, None, region_000650],  # type: ignore
    type=statement_000233,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000235 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000651, region_000651, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000236 = NoneExpressionParserInfo.Create(
    regions=[region_000652],
)

statement_000237 = VariantExpressionParserInfo.Create(
    regions=[region_000653, region_000654],
    types=[statement_000235, statement_000236, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000238 = NoneExpressionParserInfo.Create(
    regions=[region_000655],
)

statement_000239 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000656, None, region_000657],  # type: ignore
    type=statement_000237,
    is_variadic=None,
    name="end_char_index",
    default_value=statement_000238,
)

statement_000240 = FuncParametersParserInfo.Create(
    regions=[region_000658, None, region_000659, None],
    positional=None,
    any_args=[statement_000234, statement_000239, ],
    keyword=None,
)

statement_000241 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000660, region_000658, region_000661, region_000662, region_000663, region_000664, None, None, None, region_000665, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000240,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000232,
    name="FindFirst",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000242 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000666, region_000666, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000243 = NoneExpressionParserInfo.Create(
    regions=[region_000667],
)

statement_000244 = VariantExpressionParserInfo.Create(
    regions=[region_000668, region_000669],
    types=[statement_000242, statement_000243, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000245 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000670, region_000671, region_000672],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000246 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000673, None, region_000674],  # type: ignore
    type=statement_000245,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000247 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000675, region_000675, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000248 = NoneExpressionParserInfo.Create(
    regions=[region_000676],
)

statement_000249 = VariantExpressionParserInfo.Create(
    regions=[region_000677, region_000678],
    types=[statement_000247, statement_000248, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000250 = NoneExpressionParserInfo.Create(
    regions=[region_000679],
)

statement_000251 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000680, None, region_000681],  # type: ignore
    type=statement_000249,
    is_variadic=None,
    name="end_char_index",
    default_value=statement_000250,
)

statement_000252 = FuncParametersParserInfo.Create(
    regions=[region_000682, None, region_000683, None],
    positional=None,
    any_args=[statement_000246, statement_000251, ],
    keyword=None,
)

statement_000253 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000684, region_000682, region_000685, region_000686, region_000687, region_000688, None, None, None, region_000689, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000252,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000244,
    name="FindFirst",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000254 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000690, region_000690, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000255 = NoneExpressionParserInfo.Create(
    regions=[region_000691],
)

statement_000256 = VariantExpressionParserInfo.Create(
    regions=[region_000692, region_000693],
    types=[statement_000254, statement_000255, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000257 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000694, region_000695, region_000696],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000258 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000697, None, region_000698],  # type: ignore
    type=statement_000257,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000259 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000699, region_000699, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000260 = NoneExpressionParserInfo.Create(
    regions=[region_000700],
)

statement_000261 = VariantExpressionParserInfo.Create(
    regions=[region_000701, region_000702],
    types=[statement_000259, statement_000260, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000262 = NoneExpressionParserInfo.Create(
    regions=[region_000703],
)

statement_000263 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000704, None, region_000705],  # type: ignore
    type=statement_000261,
    is_variadic=None,
    name="begin_char_index",
    default_value=statement_000262,
)

statement_000264 = FuncParametersParserInfo.Create(
    regions=[region_000706, None, region_000707, None],
    positional=None,
    any_args=[statement_000258, statement_000263, ],
    keyword=None,
)

statement_000265 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000708, region_000706, region_000709, region_000710, region_000711, region_000712, None, None, None, region_000713, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000264,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000256,
    name="FindLast",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000266 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000714, region_000714, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000267 = NoneExpressionParserInfo.Create(
    regions=[region_000715],
)

statement_000268 = VariantExpressionParserInfo.Create(
    regions=[region_000716, region_000717],
    types=[statement_000266, statement_000267, ],
    mutability_modifier=MutabilityModifier.val,
)

statement_000269 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000718, region_000719, region_000720],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000270 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000721, None, region_000722],  # type: ignore
    type=statement_000269,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000271 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000723, region_000723, None],
    value=CustomType("PosInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000272 = NoneExpressionParserInfo.Create(
    regions=[region_000724],
)

statement_000273 = VariantExpressionParserInfo.Create(
    regions=[region_000725, region_000726],
    types=[statement_000271, statement_000272, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000274 = NoneExpressionParserInfo.Create(
    regions=[region_000727],
)

statement_000275 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000728, None, region_000729],  # type: ignore
    type=statement_000273,
    is_variadic=None,
    name="begin_char_index",
    default_value=statement_000274,
)

statement_000276 = FuncParametersParserInfo.Create(
    regions=[region_000730, None, region_000731, None],
    positional=None,
    any_args=[statement_000270, statement_000275, ],
    keyword=None,
)

statement_000277 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000732, region_000730, region_000733, region_000734, region_000735, region_000736, None, None, None, region_000737, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000276,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000268,
    name="FindLast",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000278 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000738, region_000739, region_000740],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000279 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000741, region_000746, region_000742, region_000743, region_000744, region_000745, None, None, None, region_000747, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000278,
    name="ToLower?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000280 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000748, region_000749, region_000750],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000281 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000751, region_000756, region_000752, region_000753, region_000754, region_000755, None, None, None, region_000757, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000280,
    name="ToCamelCase?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000282 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000758, region_000759, region_000760],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000283 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000761, region_000766, region_000762, region_000763, region_000764, region_000765, None, None, None, region_000767, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000282,
    name="ToPascalCase?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000284 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000768, region_000769, region_000770],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000285 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000771, region_000776, region_000772, region_000773, region_000774, region_000775, None, None, None, region_000777, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000284,
    name="ToSnakeCase?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000286 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000778, region_000779, region_000780],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000287 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000781, region_000786, region_000782, region_000783, region_000784, region_000785, None, None, None, region_000787, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000286,
    name="ToTitle?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000288 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000788, region_000789, region_000790],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000289 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000791, region_000796, region_000792, region_000793, region_000794, region_000795, None, None, None, region_000797, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000288,
    name="ToUpper?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000290 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000798, region_000799, region_000800],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000291 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000801, region_000802, region_000803],
    value=CustomType("NonZeroInt"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000292 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000804, None, region_000805],  # type: ignore
    type=statement_000291,
    is_variadic=None,
    name="length",
    default_value=None,
)

statement_000293 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000806, region_000807, region_000808],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000294 = CharacterExpressionParserInfo.Create(
    regions=[region_000809],
    value=' ',
)

statement_000295 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000810, None, region_000811],  # type: ignore
    type=statement_000293,
    is_variadic=None,
    name="fill_char",
    default_value=statement_000294,
)

statement_000296 = FuncParametersParserInfo.Create(
    regions=[region_000812, None, region_000813, None],
    positional=None,
    any_args=[statement_000292, statement_000295, ],
    keyword=None,
)

statement_000297 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000814, region_000812, region_000815, region_000816, region_000817, region_000818, None, None, None, region_000819, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000296,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000290,
    name="Center?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000298 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000820, region_000821, region_000822],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000299 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000823, region_000824, region_000825],
    value=CustomType("NonZeroInt"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000300 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000826, None, region_000827],  # type: ignore
    type=statement_000299,
    is_variadic=None,
    name="length",
    default_value=None,
)

statement_000301 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000828, region_000829, region_000830],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000302 = CharacterExpressionParserInfo.Create(
    regions=[region_000831],
    value=' ',
)

statement_000303 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000832, None, region_000833],  # type: ignore
    type=statement_000301,
    is_variadic=None,
    name="fill_char",
    default_value=statement_000302,
)

statement_000304 = FuncParametersParserInfo.Create(
    regions=[region_000834, None, region_000835, None],
    positional=None,
    any_args=[statement_000300, statement_000303, ],
    keyword=None,
)

statement_000305 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000836, region_000834, region_000837, region_000838, region_000839, region_000840, None, None, None, region_000841, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000304,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000298,
    name="LeftJustify?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000306 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000842, region_000843, region_000844],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000307 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000845, region_000846, region_000847],
    value=CustomType("NonZeroInt"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000308 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000848, None, region_000849],  # type: ignore
    type=statement_000307,
    is_variadic=None,
    name="length",
    default_value=None,
)

statement_000309 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000850, region_000851, region_000852],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000310 = CharacterExpressionParserInfo.Create(
    regions=[region_000853],
    value=' ',
)

statement_000311 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000854, None, region_000855],  # type: ignore
    type=statement_000309,
    is_variadic=None,
    name="fill_char",
    default_value=statement_000310,
)

statement_000312 = FuncParametersParserInfo.Create(
    regions=[region_000856, None, region_000857, None],
    positional=None,
    any_args=[statement_000308, statement_000311, ],
    keyword=None,
)

statement_000313 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000858, region_000856, region_000859, region_000860, region_000861, region_000862, None, None, None, region_000863, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000312,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000306,
    name="RightJustify?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000314 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000864, region_000865, region_000866],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000315 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000867, region_000872, region_000868, region_000869, region_000870, region_000871, None, None, None, region_000873, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000314,
    name="LeftStrip?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000316 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000874, region_000875, region_000876],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000317 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000877, region_000882, region_000878, region_000879, region_000880, region_000881, None, None, None, region_000883, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000316,
    name="RightStrip?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000318 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000884, region_000885, region_000886],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000319 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000887, region_000892, region_000888, region_000889, region_000890, region_000891, None, None, None, region_000893, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000318,
    name="Strip?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000320 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000894, region_000895, region_000896],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000321 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000897, region_000898, region_000899],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000322 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000900, None, region_000901],  # type: ignore
    type=statement_000321,
    is_variadic=None,
    name="source",
    default_value=None,
)

statement_000323 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000902, region_000903, region_000904],
    value=CharacterType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000324 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000905, None, region_000906],  # type: ignore
    type=statement_000323,
    is_variadic=None,
    name="dest",
    default_value=None,
)

statement_000325 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000907, region_000907, None],
    value=CustomType("NonZeroInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000326 = NoneExpressionParserInfo.Create(
    regions=[region_000908],
)

statement_000327 = VariantExpressionParserInfo.Create(
    regions=[region_000909, region_000910],
    types=[statement_000325, statement_000326, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000328 = NoneExpressionParserInfo.Create(
    regions=[region_000911],
)

statement_000329 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000912, None, region_000913],  # type: ignore
    type=statement_000327,
    is_variadic=None,
    name="count",
    default_value=statement_000328,
)

statement_000330 = FuncParametersParserInfo.Create(
    regions=[region_000914, None, region_000915, None],
    positional=None,
    any_args=[statement_000322, statement_000324, statement_000329, ],
    keyword=None,
)

statement_000331 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000916, region_000914, region_000917, region_000918, region_000919, region_000920, None, None, None, region_000921, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000330,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000320,
    name="Replace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000332 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000922, region_000923, region_000924],
    value=CustomType("ThisType"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.val,
)

statement_000333 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000925, region_000926, region_000927],
    value=CustomType("NonEmptyStr"),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000334 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000928, None, region_000929],  # type: ignore
    type=statement_000333,
    is_variadic=None,
    name="source",
    default_value=None,
)

statement_000335 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Configuration,
    regions=[region_000930, region_000931, region_000932],
    value=StringType(),
    templates=None,
    constraints=None,
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000336 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000933, None, region_000934],  # type: ignore
    type=statement_000335,
    is_variadic=None,
    name="dest",
    default_value=None,
)

statement_000337 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.Unknown,
    regions=[region_000935, region_000935, None],
    value=CustomType("NonZeroInt"),
    templates=None,
    constraints=None,
    mutability_modifier=None,
)

statement_000338 = NoneExpressionParserInfo.Create(
    regions=[region_000936],
)

statement_000339 = VariantExpressionParserInfo.Create(
    regions=[region_000937, region_000938],
    types=[statement_000337, statement_000338, ],
    mutability_modifier=MutabilityModifier.immutable,
)

statement_000340 = NoneExpressionParserInfo.Create(
    regions=[region_000939],
)

statement_000341 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000940, None, region_000941],  # type: ignore
    type=statement_000339,
    is_variadic=None,
    name="count",
    default_value=statement_000340,
)

statement_000342 = FuncParametersParserInfo.Create(
    regions=[region_000942, None, region_000943, None],
    positional=None,
    any_args=[statement_000334, statement_000336, statement_000341, ],
    keyword=None,
)

statement_000343 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000944, region_000942, region_000945, region_000946, region_000947, region_000948, None, None, None, region_000949, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=statement_000342,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.override,
    return_type=statement_000332,
    name="Replace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000344 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000950, region_000955, region_000951, region_000952, region_000953, region_000954, None, None, None, region_000956, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="ToLowerInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000345 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000957, region_000962, region_000958, region_000959, region_000960, region_000961, None, None, None, region_000963, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="ToCamelCaseInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000346 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000964, region_000969, region_000965, region_000966, region_000967, region_000968, None, None, None, region_000970, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="ToPascalCaseInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000347 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000971, region_000976, region_000972, region_000973, region_000974, region_000975, None, None, None, region_000977, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="ToSnakeCaseInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000348 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000978, region_000983, region_000979, region_000980, region_000981, region_000982, None, None, None, region_000984, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="ToTitleInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000349 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000985, region_000990, region_000986, region_000987, region_000988, region_000989, None, None, None, region_000991, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="ToUpperInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000350 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000992, region_000997, region_000993, region_000994, region_000995, region_000996, None, None, None, region_000998, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="LeftStripInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000351 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000999, region_001004, region_001000, region_001001, region_001002, region_001003, None, None, None, region_001005, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="RightStripInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000352 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_001006, region_001011, region_001007, region_001008, region_001009, region_001010, None, None, None, region_001012, None, None, None, None, None],
    parent_class_capabilities=StandardCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.var,
    method_modifier_param=MethodModifier.override,
    return_type=None,
    name="StripInplace?",
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=True,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000353 = ClassStatementParserInfo.Create(
    regions=[region_001013, region_001014, region_001015, region_001016, None, region_000014, None, None, region_001017, region_001013, None, None],
    class_capabilities=StandardCapabilities,
    visibility_param=VisibilityModifier.public,
    class_modifier_param=ClassModifier.mutable,
    name="FixedMutableStr",
    documentation=None,
    templates=None,
    constraints=statement_000005,
    extends=[statement_000009, ],
    implements=None,
    uses=None,
    statements=[statement_000016, statement_000022, statement_000028, statement_000034, statement_000040, statement_000042, statement_000044, statement_000046, statement_000053, statement_000058, statement_000063, statement_000068, statement_000073, statement_000078, statement_000083, statement_000090, statement_000097, statement_000102, statement_000107, statement_000112, statement_000117, statement_000119, statement_000121, statement_000123, statement_000125, statement_000127, statement_000129, statement_000131, statement_000133, statement_000135, statement_000137, statement_000139, statement_000141, statement_000146, statement_000151, statement_000156, statement_000161, statement_000166, statement_000171, statement_000188, statement_000205, statement_000217, statement_000229, statement_000241, statement_000253, statement_000265, statement_000277, statement_000279, statement_000281, statement_000283, statement_000285, statement_000287, statement_000289, statement_000297, statement_000305, statement_000313, statement_000315, statement_000317, statement_000319, statement_000331, statement_000343, statement_000344, statement_000345, statement_000346, statement_000347, statement_000348, statement_000349, statement_000350, statement_000351, statement_000352, ],
    constructor_visibility_param=VisibilityModifier.public,
    is_abstract=None,
    is_final=None,
)

public_exports = [
    statement_000353,
]
