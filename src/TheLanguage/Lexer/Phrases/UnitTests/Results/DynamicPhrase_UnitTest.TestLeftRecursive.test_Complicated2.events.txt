0) StartPhrase, "Dynamic Phrases"
1) StartPhrase, "Custom Display <Prefix>"
2) StartPhrase, "Lower"
3) OnInternalPhraseAsync, 0, 3
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 1] (0)"
      IterEnd: "[1, 4] (3)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
      Whitespace: None
    Phrase: "Lower"
4) EndPhrase, "Lower" [True]
5) StartPhrase, "Upper"
6) EndPhrase, "Upper" [False]
7) OnInternalPhraseAsync, 0, 3
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 1] (0)"
        IterEnd: "[1, 4] (3)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
8) EndPhrase, "Custom Display <Prefix>" [True]
9) StartPhrase, "Custom Display <Suffix>"
10) StartPhrase, "'+'"
11) OnInternalPhraseAsync, 4, 5
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 5] (4)"
      IterEnd: "[1, 6] (5)"
      Token: "'+'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
      Whitespace:
        - 3
        - 4
    Phrase: "'+'"
12) EndPhrase, "'+'" [True]
13) StartPhrase, "DynamicPhrasesType.Statements"
14) StartPhrase, "Phrases"
15) StartPhrase, "Lower"
16) OnInternalPhraseAsync, 6, 9
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 7] (6)"
      IterEnd: "[1, 10] (9)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
      Whitespace:
        - 5
        - 6
    Phrase: "Lower"
17) EndPhrase, "Lower" [True]
18) StartPhrase, "Upper"
19) EndPhrase, "Upper" [False]
20) StartPhrase, "Dynamic Phrases"
21) StartPhrase, "Custom Display <Prefix>"
22) StartPhrase, "Lower"
23) OnInternalPhraseAsync, 6, 9
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 7] (6)"
      IterEnd: "[1, 10] (9)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
      Whitespace:
        - 5
        - 6
    Phrase: "Lower"
24) EndPhrase, "Lower" [True]
25) StartPhrase, "Upper"
26) EndPhrase, "Upper" [False]
27) OnInternalPhraseAsync, 5, 9
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 7] (6)"
        IterEnd: "[1, 10] (9)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
        Whitespace:
          - 5
          - 6
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
28) EndPhrase, "Custom Display <Prefix>" [True]
29) StartPhrase, "Custom Display <Suffix>"
30) StartPhrase, "'+'"
31) EndPhrase, "'+'" [False]
32) StartPhrase, "'-'"
33) EndPhrase, "'-'" [False]
34) StartPhrase, "'*'"
35) EndPhrase, "'*'" [False]
36) StartPhrase, "'/'"
37) EndPhrase, "'/'" [False]
38) StartPhrase, "'if'"
39) EndPhrase, "'if'" [False]
40) StartPhrase, "'['"
41) OnInternalPhraseAsync, 9, 10
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 10] (9)"
      IterEnd: "[1, 11] (10)"
      Token: "'['"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
      Whitespace: None
    Phrase: "'['"
42) EndPhrase, "'['" [True]
43) StartPhrase, "DynamicPhrasesType.Statements"
44) StartPhrase, "Phrases"
45) StartPhrase, "Lower"
46) OnInternalPhraseAsync, 10, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 11] (10)"
      IterEnd: "[1, 12] (11)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
      Whitespace: None
    Phrase: "Lower"
47) EndPhrase, "Lower" [True]
48) StartPhrase, "Upper"
49) EndPhrase, "Upper" [False]
50) StartPhrase, "Dynamic Phrases"
51) StartPhrase, "Custom Display <Prefix>"
52) StartPhrase, "Lower"
53) OnInternalPhraseAsync, 10, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 11] (10)"
      IterEnd: "[1, 12] (11)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
      Whitespace: None
    Phrase: "Lower"
54) EndPhrase, "Lower" [True]
55) StartPhrase, "Upper"
56) EndPhrase, "Upper" [False]
57) OnInternalPhraseAsync, 10, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 11] (10)"
        IterEnd: "[1, 12] (11)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
58) EndPhrase, "Custom Display <Prefix>" [True]
59) StartPhrase, "Custom Display <Suffix>"
60) StartPhrase, "'+'"
61) EndPhrase, "'+'" [False]
62) StartPhrase, "'-'"
63) EndPhrase, "'-'" [False]
64) StartPhrase, "'*'"
65) EndPhrase, "'*'" [False]
66) StartPhrase, "'/'"
67) EndPhrase, "'/'" [False]
68) StartPhrase, "'if'"
69) EndPhrase, "'if'" [False]
70) StartPhrase, "'['"
71) EndPhrase, "'['" [False]
72) EndPhrase, "Custom Display <Suffix>" [False]
73) OnInternalPhraseAsync, 10, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
            IsIgnored: False
            IterBegin: "[1, 11] (10)"
            IterEnd: "[1, 12] (11)"
            Token: "Lower"
            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
              Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
            Whitespace: None
          Phrase: "Lower"
        Phrase: "Custom Display <Prefix>"
      Phrase: "Dynamic Phrases"
    Phrase: "Dynamic Phrases"
74) EndPhrase, "Dynamic Phrases" [True]
75) OnInternalPhraseAsync, 10, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 11] (10)"
        IterEnd: "[1, 12] (11)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Phrases"
76) EndPhrase, "Phrases" [True]
77) OnInternalPhraseAsync, 10, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 11] (10)"
          IterEnd: "[1, 12] (11)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
78) EndPhrase, "DynamicPhrasesType.Statements" [True]
79) StartPhrase, "']'"
80) OnInternalPhraseAsync, 11, 12
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 12] (11)"
      IterEnd: "[1, 13] (12)"
      Token: "']'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
      Whitespace: None
    Phrase: "']'"
81) EndPhrase, "']'" [True]
82) OnInternalPhraseAsync, 9, 12
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 7] (6)"
                  IterEnd: "[1, 10] (9)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                  Whitespace:
                    - 5
                    - 6
                Phrase: "Lower"
              Phrase: "Custom Display <Prefix>"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 10] (9)"
              IterEnd: "[1, 11] (10)"
              Token: "'['"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
              Whitespace: None
            Phrase: "'['"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 11] (10)"
                  IterEnd: "[1, 12] (11)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 12] (11)"
              IterEnd: "[1, 13] (12)"
              Token: "']'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
              Whitespace: None
            Phrase: "']'"
        IsComplete: True
      Phrase: "Index"
    Phrase: "Custom Display <Suffix>"
83) EndPhrase, "Custom Display <Suffix>" [True]
84) StartPhrase, "Custom Display <Suffix>"
85) StartPhrase, "'+'"
86) EndPhrase, "'+'" [False]
87) StartPhrase, "'-'"
88) EndPhrase, "'-'" [False]
89) StartPhrase, "'*'"
90) EndPhrase, "'*'" [False]
91) StartPhrase, "'/'"
92) EndPhrase, "'/'" [False]
93) StartPhrase, "'if'"
94) EndPhrase, "'if'" [False]
95) StartPhrase, "'['"
96) OnInternalPhraseAsync, 12, 13
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 13] (12)"
      IterEnd: "[1, 14] (13)"
      Token: "'['"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
      Whitespace: None
    Phrase: "'['"
97) EndPhrase, "'['" [True]
98) StartPhrase, "DynamicPhrasesType.Statements"
99) StartPhrase, "Phrases"
100) StartPhrase, "Lower"
101) OnInternalPhraseAsync, 13, 14
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 14] (13)"
      IterEnd: "[1, 15] (14)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
      Whitespace: None
    Phrase: "Lower"
102) EndPhrase, "Lower" [True]
103) StartPhrase, "Upper"
104) EndPhrase, "Upper" [False]
105) StartPhrase, "Dynamic Phrases"
106) StartPhrase, "Custom Display <Prefix>"
107) StartPhrase, "Lower"
108) OnInternalPhraseAsync, 13, 14
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 14] (13)"
      IterEnd: "[1, 15] (14)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
      Whitespace: None
    Phrase: "Lower"
109) EndPhrase, "Lower" [True]
110) StartPhrase, "Upper"
111) EndPhrase, "Upper" [False]
112) OnInternalPhraseAsync, 13, 14
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 14] (13)"
        IterEnd: "[1, 15] (14)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
113) EndPhrase, "Custom Display <Prefix>" [True]
114) StartPhrase, "Custom Display <Suffix>"
115) StartPhrase, "'+'"
116) EndPhrase, "'+'" [False]
117) StartPhrase, "'-'"
118) EndPhrase, "'-'" [False]
119) StartPhrase, "'*'"
120) EndPhrase, "'*'" [False]
121) StartPhrase, "'/'"
122) EndPhrase, "'/'" [False]
123) StartPhrase, "'if'"
124) EndPhrase, "'if'" [False]
125) StartPhrase, "'['"
126) EndPhrase, "'['" [False]
127) EndPhrase, "Custom Display <Suffix>" [False]
128) OnInternalPhraseAsync, 13, 14
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
            IsIgnored: False
            IterBegin: "[1, 14] (13)"
            IterEnd: "[1, 15] (14)"
            Token: "Lower"
            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
              Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
            Whitespace: None
          Phrase: "Lower"
        Phrase: "Custom Display <Prefix>"
      Phrase: "Dynamic Phrases"
    Phrase: "Dynamic Phrases"
129) EndPhrase, "Dynamic Phrases" [True]
130) OnInternalPhraseAsync, 13, 14
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 14] (13)"
        IterEnd: "[1, 15] (14)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Phrases"
131) EndPhrase, "Phrases" [True]
132) OnInternalPhraseAsync, 13, 14
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 14] (13)"
          IterEnd: "[1, 15] (14)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
133) EndPhrase, "DynamicPhrasesType.Statements" [True]
134) StartPhrase, "']'"
135) OnInternalPhraseAsync, 14, 15
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 15] (14)"
      IterEnd: "[1, 16] (15)"
      Token: "']'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
      Whitespace: None
    Phrase: "']'"
136) EndPhrase, "']'" [True]
137) OnInternalPhraseAsync, 12, 15
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 7] (6)"
                        IterEnd: "[1, 10] (9)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                        Whitespace:
                          - 5
                          - 6
                      Phrase: "Lower"
                    Phrase: "Custom Display <Prefix>"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 10] (9)"
                    IterEnd: "[1, 11] (10)"
                    Token: "'['"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                    Whitespace: None
                  Phrase: "'['"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 11] (10)"
                        IterEnd: "[1, 12] (11)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 12] (11)"
                    IterEnd: "[1, 13] (12)"
                    Token: "']'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                    Whitespace: None
                  Phrase: "']'"
              IsComplete: True
            Phrase: "Index"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 13] (12)"
              IterEnd: "[1, 14] (13)"
              Token: "'['"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
              Whitespace: None
            Phrase: "'['"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 14] (13)"
                  IterEnd: "[1, 15] (14)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 15] (14)"
              IterEnd: "[1, 16] (15)"
              Token: "']'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
              Whitespace: None
            Phrase: "']'"
        IsComplete: True
      Phrase: "Index"
    Phrase: "Custom Display <Suffix>"
138) EndPhrase, "Custom Display <Suffix>" [True]
139) StartPhrase, "Custom Display <Suffix>"
140) StartPhrase, "'+'"
141) EndPhrase, "'+'" [False]
142) StartPhrase, "'-'"
143) EndPhrase, "'-'" [False]
144) StartPhrase, "'*'"
145) EndPhrase, "'*'" [False]
146) StartPhrase, "'/'"
147) EndPhrase, "'/'" [False]
148) StartPhrase, "'if'"
149) EndPhrase, "'if'" [False]
150) StartPhrase, "'['"
151) OnInternalPhraseAsync, 15, 16
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 16] (15)"
      IterEnd: "[1, 17] (16)"
      Token: "'['"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
      Whitespace: None
    Phrase: "'['"
152) EndPhrase, "'['" [True]
153) StartPhrase, "DynamicPhrasesType.Statements"
154) StartPhrase, "Phrases"
155) StartPhrase, "Lower"
156) OnInternalPhraseAsync, 16, 17
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 17] (16)"
      IterEnd: "[1, 18] (17)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
      Whitespace: None
    Phrase: "Lower"
157) EndPhrase, "Lower" [True]
158) StartPhrase, "Upper"
159) EndPhrase, "Upper" [False]
160) StartPhrase, "Dynamic Phrases"
161) StartPhrase, "Custom Display <Prefix>"
162) StartPhrase, "Lower"
163) OnInternalPhraseAsync, 16, 17
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 17] (16)"
      IterEnd: "[1, 18] (17)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
      Whitespace: None
    Phrase: "Lower"
164) EndPhrase, "Lower" [True]
165) StartPhrase, "Upper"
166) EndPhrase, "Upper" [False]
167) OnInternalPhraseAsync, 16, 17
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 17] (16)"
        IterEnd: "[1, 18] (17)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
168) EndPhrase, "Custom Display <Prefix>" [True]
169) StartPhrase, "Custom Display <Suffix>"
170) StartPhrase, "'+'"
171) EndPhrase, "'+'" [False]
172) StartPhrase, "'-'"
173) EndPhrase, "'-'" [False]
174) StartPhrase, "'*'"
175) EndPhrase, "'*'" [False]
176) StartPhrase, "'/'"
177) EndPhrase, "'/'" [False]
178) StartPhrase, "'if'"
179) EndPhrase, "'if'" [False]
180) StartPhrase, "'['"
181) EndPhrase, "'['" [False]
182) EndPhrase, "Custom Display <Suffix>" [False]
183) OnInternalPhraseAsync, 16, 17
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
            IsIgnored: False
            IterBegin: "[1, 17] (16)"
            IterEnd: "[1, 18] (17)"
            Token: "Lower"
            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
              Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
            Whitespace: None
          Phrase: "Lower"
        Phrase: "Custom Display <Prefix>"
      Phrase: "Dynamic Phrases"
    Phrase: "Dynamic Phrases"
184) EndPhrase, "Dynamic Phrases" [True]
185) OnInternalPhraseAsync, 16, 17
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 17] (16)"
        IterEnd: "[1, 18] (17)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
        Whitespace: None
      Phrase: "Lower"
    Phrase: "Phrases"
186) EndPhrase, "Phrases" [True]
187) OnInternalPhraseAsync, 16, 17
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 17] (16)"
          IterEnd: "[1, 18] (17)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
          Whitespace: None
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
188) EndPhrase, "DynamicPhrasesType.Statements" [True]
189) StartPhrase, "']'"
190) OnInternalPhraseAsync, 17, 18
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 18] (17)"
      IterEnd: "[1, 19] (18)"
      Token: "']'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
      Whitespace: None
    Phrase: "']'"
191) EndPhrase, "']'" [True]
192) OnInternalPhraseAsync, 15, 18
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 7] (6)"
                              IterEnd: "[1, 10] (9)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                              Whitespace:
                                - 5
                                - 6
                            Phrase: "Lower"
                          Phrase: "Custom Display <Prefix>"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 10] (9)"
                          IterEnd: "[1, 11] (10)"
                          Token: "'['"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                          Whitespace: None
                        Phrase: "'['"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 11] (10)"
                              IterEnd: "[1, 12] (11)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                              Whitespace: None
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 12] (11)"
                          IterEnd: "[1, 13] (12)"
                          Token: "']'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                          Whitespace: None
                        Phrase: "']'"
                    IsComplete: True
                  Phrase: "Index"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 13] (12)"
                    IterEnd: "[1, 14] (13)"
                    Token: "'['"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
                    Whitespace: None
                  Phrase: "'['"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 14] (13)"
                        IterEnd: "[1, 15] (14)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 15] (14)"
                    IterEnd: "[1, 16] (15)"
                    Token: "']'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
                    Whitespace: None
                  Phrase: "']'"
              IsComplete: True
            Phrase: "Index"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 16] (15)"
              IterEnd: "[1, 17] (16)"
              Token: "'['"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
              Whitespace: None
            Phrase: "'['"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 17] (16)"
                  IterEnd: "[1, 18] (17)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 18] (17)"
              IterEnd: "[1, 19] (18)"
              Token: "']'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
              Whitespace: None
            Phrase: "']'"
        IsComplete: True
      Phrase: "Index"
    Phrase: "Custom Display <Suffix>"
193) EndPhrase, "Custom Display <Suffix>" [True]
194) StartPhrase, "Custom Display <Suffix>"
195) StartPhrase, "'+'"
196) OnInternalPhraseAsync, 19, 20
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 20] (19)"
      IterEnd: "[1, 21] (20)"
      Token: "'+'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(19, 20), match='+'>"
      Whitespace:
        - 18
        - 19
    Phrase: "'+'"
197) EndPhrase, "'+'" [True]
198) StartPhrase, "DynamicPhrasesType.Statements"
199) StartPhrase, "Phrases"
200) StartPhrase, "Lower"
201) OnInternalPhraseAsync, 21, 26
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 22] (21)"
      IterEnd: "[1, 27] (26)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
      Whitespace:
        - 20
        - 21
    Phrase: "Lower"
202) EndPhrase, "Lower" [True]
203) StartPhrase, "Upper"
204) EndPhrase, "Upper" [False]
205) StartPhrase, "Dynamic Phrases"
206) StartPhrase, "Custom Display <Prefix>"
207) StartPhrase, "Lower"
208) OnInternalPhraseAsync, 21, 26
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 22] (21)"
      IterEnd: "[1, 27] (26)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
      Whitespace:
        - 20
        - 21
    Phrase: "Lower"
209) EndPhrase, "Lower" [True]
210) StartPhrase, "Upper"
211) EndPhrase, "Upper" [False]
212) OnInternalPhraseAsync, 20, 26
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 22] (21)"
        IterEnd: "[1, 27] (26)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
        Whitespace:
          - 20
          - 21
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
213) EndPhrase, "Custom Display <Prefix>" [True]
214) StartPhrase, "Custom Display <Suffix>"
215) StartPhrase, "'+'"
216) OnInternalPhraseAsync, 27, 28
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 28] (27)"
      IterEnd: "[1, 29] (28)"
      Token: "'+'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
      Whitespace:
        - 26
        - 27
    Phrase: "'+'"
217) EndPhrase, "'+'" [True]
218) StartPhrase, "DynamicPhrasesType.Statements"
219) StartPhrase, "Phrases"
220) StartPhrase, "Lower"
221) OnInternalPhraseAsync, 29, 33
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 30] (29)"
      IterEnd: "[1, 34] (33)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
      Whitespace:
        - 28
        - 29
    Phrase: "Lower"
222) EndPhrase, "Lower" [True]
223) StartPhrase, "Upper"
224) EndPhrase, "Upper" [False]
225) StartPhrase, "Dynamic Phrases"
226) StartPhrase, "Custom Display <Prefix>"
227) StartPhrase, "Lower"
228) OnInternalPhraseAsync, 29, 33
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 30] (29)"
      IterEnd: "[1, 34] (33)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
      Whitespace:
        - 28
        - 29
    Phrase: "Lower"
229) EndPhrase, "Lower" [True]
230) StartPhrase, "Upper"
231) EndPhrase, "Upper" [False]
232) OnInternalPhraseAsync, 28, 33
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 30] (29)"
        IterEnd: "[1, 34] (33)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
        Whitespace:
          - 28
          - 29
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
233) EndPhrase, "Custom Display <Prefix>" [True]
234) StartPhrase, "Custom Display <Suffix>"
235) StartPhrase, "'+'"
236) EndPhrase, "'+'" [False]
237) StartPhrase, "'-'"
238) EndPhrase, "'-'" [False]
239) StartPhrase, "'*'"
240) EndPhrase, "'*'" [False]
241) StartPhrase, "'/'"
242) EndPhrase, "'/'" [False]
243) StartPhrase, "'if'"
244) OnInternalPhraseAsync, 34, 36
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 35] (34)"
      IterEnd: "[1, 37] (36)"
      Token: "'if'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
      Whitespace:
        - 33
        - 34
    Phrase: "'if'"
245) EndPhrase, "'if'" [True]
246) StartPhrase, "DynamicPhrasesType.Statements"
247) StartPhrase, "Phrases"
248) StartPhrase, "Lower"
249) EndPhrase, "Lower" [False]
250) StartPhrase, "Upper"
251) OnInternalPhraseAsync, 37, 46
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 38] (37)"
      IterEnd: "[1, 47] (46)"
      Token: "Upper"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
      Whitespace:
        - 36
        - 37
    Phrase: "Upper"
252) EndPhrase, "Upper" [True]
253) StartPhrase, "Dynamic Phrases"
254) StartPhrase, "Custom Display <Prefix>"
255) StartPhrase, "Lower"
256) EndPhrase, "Lower" [False]
257) StartPhrase, "Upper"
258) OnInternalPhraseAsync, 37, 46
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 38] (37)"
      IterEnd: "[1, 47] (46)"
      Token: "Upper"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
      Whitespace:
        - 36
        - 37
    Phrase: "Upper"
259) EndPhrase, "Upper" [True]
260) OnInternalPhraseAsync, 36, 46
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 38] (37)"
        IterEnd: "[1, 47] (46)"
        Token: "Upper"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
        Whitespace:
          - 36
          - 37
      Phrase: "Upper"
    Phrase: "Custom Display <Prefix>"
261) EndPhrase, "Custom Display <Prefix>" [True]
262) StartPhrase, "Custom Display <Suffix>"
263) StartPhrase, "'+'"
264) EndPhrase, "'+'" [False]
265) StartPhrase, "'-'"
266) EndPhrase, "'-'" [False]
267) StartPhrase, "'*'"
268) EndPhrase, "'*'" [False]
269) StartPhrase, "'/'"
270) EndPhrase, "'/'" [False]
271) StartPhrase, "'if'"
272) EndPhrase, "'if'" [False]
273) StartPhrase, "'['"
274) EndPhrase, "'['" [False]
275) EndPhrase, "Custom Display <Suffix>" [False]
276) OnInternalPhraseAsync, 36, 46
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
            IsIgnored: False
            IterBegin: "[1, 38] (37)"
            IterEnd: "[1, 47] (46)"
            Token: "Upper"
            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
              Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
            Whitespace:
              - 36
              - 37
          Phrase: "Upper"
        Phrase: "Custom Display <Prefix>"
      Phrase: "Dynamic Phrases"
    Phrase: "Dynamic Phrases"
277) EndPhrase, "Dynamic Phrases" [True]
278) OnInternalPhraseAsync, 36, 46
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 38] (37)"
        IterEnd: "[1, 47] (46)"
        Token: "Upper"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
        Whitespace:
          - 36
          - 37
      Phrase: "Upper"
    Phrase: "Phrases"
279) EndPhrase, "Phrases" [True]
280) OnInternalPhraseAsync, 36, 46
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 38] (37)"
          IterEnd: "[1, 47] (46)"
          Token: "Upper"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
          Whitespace:
            - 36
            - 37
        Phrase: "Upper"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
281) EndPhrase, "DynamicPhrasesType.Statements" [True]
282) StartPhrase, "'else'"
283) OnInternalPhraseAsync, 47, 51
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 48] (47)"
      IterEnd: "[1, 52] (51)"
      Token: "'else'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
      Whitespace:
        - 46
        - 47
    Phrase: "'else'"
284) EndPhrase, "'else'" [True]
285) StartPhrase, "DynamicPhrasesType.Statements"
286) StartPhrase, "Phrases"
287) StartPhrase, "Lower"
288) OnInternalPhraseAsync, 52, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 53] (52)"
      IterEnd: "[1, 57] (56)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
      Whitespace:
        - 51
        - 52
    Phrase: "Lower"
289) EndPhrase, "Lower" [True]
290) StartPhrase, "Upper"
291) EndPhrase, "Upper" [False]
292) StartPhrase, "Dynamic Phrases"
293) StartPhrase, "Custom Display <Prefix>"
294) StartPhrase, "Lower"
295) OnInternalPhraseAsync, 52, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 53] (52)"
      IterEnd: "[1, 57] (56)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
      Whitespace:
        - 51
        - 52
    Phrase: "Lower"
296) EndPhrase, "Lower" [True]
297) StartPhrase, "Upper"
298) EndPhrase, "Upper" [False]
299) OnInternalPhraseAsync, 51, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 53] (52)"
        IterEnd: "[1, 57] (56)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
        Whitespace:
          - 51
          - 52
      Phrase: "Lower"
    Phrase: "Custom Display <Prefix>"
300) EndPhrase, "Custom Display <Prefix>" [True]
301) StartPhrase, "Custom Display <Suffix>"
302) StartPhrase, "'+'"
303) EndPhrase, "'+'" [False]
304) StartPhrase, "'-'"
305) EndPhrase, "'-'" [False]
306) StartPhrase, "'*'"
307) EndPhrase, "'*'" [False]
308) StartPhrase, "'/'"
309) EndPhrase, "'/'" [False]
310) StartPhrase, "'if'"
311) EndPhrase, "'if'" [False]
312) StartPhrase, "'['"
313) EndPhrase, "'['" [False]
314) EndPhrase, "Custom Display <Suffix>" [False]
315) OnInternalPhraseAsync, 51, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
            IsIgnored: False
            IterBegin: "[1, 53] (52)"
            IterEnd: "[1, 57] (56)"
            Token: "Lower"
            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
              Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
            Whitespace:
              - 51
              - 52
          Phrase: "Lower"
        Phrase: "Custom Display <Prefix>"
      Phrase: "Dynamic Phrases"
    Phrase: "Dynamic Phrases"
316) EndPhrase, "Dynamic Phrases" [True]
317) OnInternalPhraseAsync, 51, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 53] (52)"
        IterEnd: "[1, 57] (56)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
        Whitespace:
          - 51
          - 52
      Phrase: "Lower"
    Phrase: "Phrases"
318) EndPhrase, "Phrases" [True]
319) OnInternalPhraseAsync, 51, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 53] (52)"
          IterEnd: "[1, 57] (56)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
          Whitespace:
            - 51
            - 52
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
320) EndPhrase, "DynamicPhrasesType.Statements" [True]
321) StartPhrase, "'['"
322) EndPhrase, "'['" [False]
323) OnInternalPhraseAsync, 33, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 30] (29)"
                  IterEnd: "[1, 34] (33)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                  Whitespace:
                    - 28
                    - 29
                Phrase: "Lower"
              Phrase: "Custom Display <Prefix>"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 35] (34)"
              IterEnd: "[1, 37] (36)"
              Token: "'if'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
              Whitespace:
                - 33
                - 34
            Phrase: "'if'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 38] (37)"
                  IterEnd: "[1, 47] (46)"
                  Token: "Upper"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                  Whitespace:
                    - 36
                    - 37
                Phrase: "Upper"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 48] (47)"
              IterEnd: "[1, 52] (51)"
              Token: "'else'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
              Whitespace:
                - 46
                - 47
            Phrase: "'else'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 53] (52)"
                  IterEnd: "[1, 57] (56)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                  Whitespace:
                    - 51
                    - 52
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Ter"
    Phrase: "Custom Display <Suffix>"
324) EndPhrase, "Custom Display <Suffix>" [True]
325) StartPhrase, "Custom Display <Suffix>"
326) StartPhrase, "'+'"
327) EndPhrase, "'+'" [False]
328) StartPhrase, "'-'"
329) EndPhrase, "'-'" [False]
330) StartPhrase, "'*'"
331) EndPhrase, "'*'" [False]
332) StartPhrase, "'/'"
333) EndPhrase, "'/'" [False]
334) StartPhrase, "'if'"
335) EndPhrase, "'if'" [False]
336) StartPhrase, "'['"
337) EndPhrase, "'['" [False]
338) EndPhrase, "Custom Display <Suffix>" [False]
339) OnInternalPhraseAsync, 28, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 30] (29)"
                  IterEnd: "[1, 34] (33)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                  Whitespace:
                    - 28
                    - 29
                Phrase: "Lower"
              Phrase: "Custom Display <Prefix>"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 35] (34)"
              IterEnd: "[1, 37] (36)"
              Token: "'if'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
              Whitespace:
                - 33
                - 34
            Phrase: "'if'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 38] (37)"
                  IterEnd: "[1, 47] (46)"
                  Token: "Upper"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                  Whitespace:
                    - 36
                    - 37
                Phrase: "Upper"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 48] (47)"
              IterEnd: "[1, 52] (51)"
              Token: "'else'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
              Whitespace:
                - 46
                - 47
            Phrase: "'else'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 53] (52)"
                  IterEnd: "[1, 57] (56)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                  Whitespace:
                    - 51
                    - 52
                Phrase: "Lower"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Ter"
    Phrase: "Dynamic Phrases"
340) EndPhrase, "Dynamic Phrases" [True]
341) OnInternalPhraseAsync, 28, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 30] (29)"
                    IterEnd: "[1, 34] (33)"
                    Token: "Lower"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                    Whitespace:
                      - 28
                      - 29
                  Phrase: "Lower"
                Phrase: "Custom Display <Prefix>"
              Phrase: "DynamicPhrasesType.Statements"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                IsIgnored: False
                IterBegin: "[1, 35] (34)"
                IterEnd: "[1, 37] (36)"
                Token: "'if'"
                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                Whitespace:
                  - 33
                  - 34
              Phrase: "'if'"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 38] (37)"
                    IterEnd: "[1, 47] (46)"
                    Token: "Upper"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                    Whitespace:
                      - 36
                      - 37
                  Phrase: "Upper"
                Phrase: "Phrases"
              Phrase: "DynamicPhrasesType.Statements"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                IsIgnored: False
                IterBegin: "[1, 48] (47)"
                IterEnd: "[1, 52] (51)"
                Token: "'else'"
                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                Whitespace:
                  - 46
                  - 47
              Phrase: "'else'"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 53] (52)"
                    IterEnd: "[1, 57] (56)"
                    Token: "Lower"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                    Whitespace:
                      - 51
                      - 52
                  Phrase: "Lower"
                Phrase: "Phrases"
              Phrase: "DynamicPhrasesType.Statements"
          IsComplete: True
        Phrase: "Ter"
      Phrase: "Dynamic Phrases"
    Phrase: "Phrases"
342) EndPhrase, "Phrases" [True]
343) OnInternalPhraseAsync, 28, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
            DataItems:
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[1, 30] (29)"
                      IterEnd: "[1, 34] (33)"
                      Token: "Lower"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                        Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                      Whitespace:
                        - 28
                        - 29
                    Phrase: "Lower"
                  Phrase: "Custom Display <Prefix>"
                Phrase: "DynamicPhrasesType.Statements"
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 35] (34)"
                  IterEnd: "[1, 37] (36)"
                  Token: "'if'"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                  Whitespace:
                    - 33
                    - 34
                Phrase: "'if'"
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[1, 38] (37)"
                      IterEnd: "[1, 47] (46)"
                      Token: "Upper"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                        Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                      Whitespace:
                        - 36
                        - 37
                    Phrase: "Upper"
                  Phrase: "Phrases"
                Phrase: "DynamicPhrasesType.Statements"
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 48] (47)"
                  IterEnd: "[1, 52] (51)"
                  Token: "'else'"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                  Whitespace:
                    - 46
                    - 47
                Phrase: "'else'"
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[1, 53] (52)"
                      IterEnd: "[1, 57] (56)"
                      Token: "Lower"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                        Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                      Whitespace:
                        - 51
                        - 52
                    Phrase: "Lower"
                  Phrase: "Phrases"
                Phrase: "DynamicPhrasesType.Statements"
            IsComplete: True
          Phrase: "Ter"
        Phrase: "Dynamic Phrases"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
344) EndPhrase, "DynamicPhrasesType.Statements" [True]
345) StartPhrase, "'-'"
346) EndPhrase, "'-'" [False]
347) StartPhrase, "'*'"
348) EndPhrase, "'*'" [False]
349) StartPhrase, "'/'"
350) EndPhrase, "'/'" [False]
351) StartPhrase, "'if'"
352) EndPhrase, "'if'" [False]
353) StartPhrase, "'['"
354) EndPhrase, "'['" [False]
355) OnInternalPhraseAsync, 26, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 22] (21)"
                  IterEnd: "[1, 27] (26)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                  Whitespace:
                    - 20
                    - 21
                Phrase: "Lower"
              Phrase: "Custom Display <Prefix>"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 28] (27)"
              IterEnd: "[1, 29] (28)"
              Token: "'+'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
              Whitespace:
                - 26
                - 27
            Phrase: "'+'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 30] (29)"
                              IterEnd: "[1, 34] (33)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                              Whitespace:
                                - 28
                                - 29
                            Phrase: "Lower"
                          Phrase: "Custom Display <Prefix>"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 35] (34)"
                          IterEnd: "[1, 37] (36)"
                          Token: "'if'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                          Whitespace:
                            - 33
                            - 34
                        Phrase: "'if'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 38] (37)"
                              IterEnd: "[1, 47] (46)"
                              Token: "Upper"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                              Whitespace:
                                - 36
                                - 37
                            Phrase: "Upper"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 48] (47)"
                          IterEnd: "[1, 52] (51)"
                          Token: "'else'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                          Whitespace:
                            - 46
                            - 47
                        Phrase: "'else'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 53] (52)"
                              IterEnd: "[1, 57] (56)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                              Whitespace:
                                - 51
                                - 52
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Ter"
                Phrase: "Dynamic Phrases"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Add"
    Phrase: "Custom Display <Suffix>"
356) EndPhrase, "Custom Display <Suffix>" [True]
357) StartPhrase, "Custom Display <Suffix>"
358) StartPhrase, "'+'"
359) EndPhrase, "'+'" [False]
360) StartPhrase, "'-'"
361) EndPhrase, "'-'" [False]
362) StartPhrase, "'*'"
363) EndPhrase, "'*'" [False]
364) StartPhrase, "'/'"
365) EndPhrase, "'/'" [False]
366) StartPhrase, "'if'"
367) EndPhrase, "'if'" [False]
368) StartPhrase, "'['"
369) EndPhrase, "'['" [False]
370) EndPhrase, "Custom Display <Suffix>" [False]
371) OnInternalPhraseAsync, 20, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 22] (21)"
                  IterEnd: "[1, 27] (26)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                  Whitespace:
                    - 20
                    - 21
                Phrase: "Lower"
              Phrase: "Custom Display <Prefix>"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 28] (27)"
              IterEnd: "[1, 29] (28)"
              Token: "'+'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
              Whitespace:
                - 26
                - 27
            Phrase: "'+'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 30] (29)"
                              IterEnd: "[1, 34] (33)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                              Whitespace:
                                - 28
                                - 29
                            Phrase: "Lower"
                          Phrase: "Custom Display <Prefix>"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 35] (34)"
                          IterEnd: "[1, 37] (36)"
                          Token: "'if'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                          Whitespace:
                            - 33
                            - 34
                        Phrase: "'if'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 38] (37)"
                              IterEnd: "[1, 47] (46)"
                              Token: "Upper"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                              Whitespace:
                                - 36
                                - 37
                            Phrase: "Upper"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 48] (47)"
                          IterEnd: "[1, 52] (51)"
                          Token: "'else'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                          Whitespace:
                            - 46
                            - 47
                        Phrase: "'else'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 53] (52)"
                              IterEnd: "[1, 57] (56)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                              Whitespace:
                                - 51
                                - 52
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Ter"
                Phrase: "Dynamic Phrases"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Add"
    Phrase: "Dynamic Phrases"
372) EndPhrase, "Dynamic Phrases" [True]
373) OnInternalPhraseAsync, 20, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 22] (21)"
                    IterEnd: "[1, 27] (26)"
                    Token: "Lower"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                    Whitespace:
                      - 20
                      - 21
                  Phrase: "Lower"
                Phrase: "Custom Display <Prefix>"
              Phrase: "DynamicPhrasesType.Statements"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                IsIgnored: False
                IterBegin: "[1, 28] (27)"
                IterEnd: "[1, 29] (28)"
                Token: "'+'"
                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
                Whitespace:
                  - 26
                  - 27
              Phrase: "'+'"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                      DataItems:
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 30] (29)"
                                IterEnd: "[1, 34] (33)"
                                Token: "Lower"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                                Whitespace:
                                  - 28
                                  - 29
                              Phrase: "Lower"
                            Phrase: "Custom Display <Prefix>"
                          Phrase: "DynamicPhrasesType.Statements"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                            IsIgnored: False
                            IterBegin: "[1, 35] (34)"
                            IterEnd: "[1, 37] (36)"
                            Token: "'if'"
                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                            Whitespace:
                              - 33
                              - 34
                          Phrase: "'if'"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 38] (37)"
                                IterEnd: "[1, 47] (46)"
                                Token: "Upper"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                                Whitespace:
                                  - 36
                                  - 37
                              Phrase: "Upper"
                            Phrase: "Phrases"
                          Phrase: "DynamicPhrasesType.Statements"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                            IsIgnored: False
                            IterBegin: "[1, 48] (47)"
                            IterEnd: "[1, 52] (51)"
                            Token: "'else'"
                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                            Whitespace:
                              - 46
                              - 47
                          Phrase: "'else'"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 53] (52)"
                                IterEnd: "[1, 57] (56)"
                                Token: "Lower"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                                Whitespace:
                                  - 51
                                  - 52
                              Phrase: "Lower"
                            Phrase: "Phrases"
                          Phrase: "DynamicPhrasesType.Statements"
                      IsComplete: True
                    Phrase: "Ter"
                  Phrase: "Dynamic Phrases"
                Phrase: "Phrases"
              Phrase: "DynamicPhrasesType.Statements"
          IsComplete: True
        Phrase: "Add"
      Phrase: "Dynamic Phrases"
    Phrase: "Phrases"
374) EndPhrase, "Phrases" [True]
375) OnInternalPhraseAsync, 20, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
            DataItems:
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[1, 22] (21)"
                      IterEnd: "[1, 27] (26)"
                      Token: "Lower"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                        Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                      Whitespace:
                        - 20
                        - 21
                    Phrase: "Lower"
                  Phrase: "Custom Display <Prefix>"
                Phrase: "DynamicPhrasesType.Statements"
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 28] (27)"
                  IterEnd: "[1, 29] (28)"
                  Token: "'+'"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
                  Whitespace:
                    - 26
                    - 27
                Phrase: "'+'"
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                        DataItems:
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                  IsIgnored: False
                                  IterBegin: "[1, 30] (29)"
                                  IterEnd: "[1, 34] (33)"
                                  Token: "Lower"
                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                                  Whitespace:
                                    - 28
                                    - 29
                                Phrase: "Lower"
                              Phrase: "Custom Display <Prefix>"
                            Phrase: "DynamicPhrasesType.Statements"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 35] (34)"
                              IterEnd: "[1, 37] (36)"
                              Token: "'if'"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                              Whitespace:
                                - 33
                                - 34
                            Phrase: "'if'"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                  IsIgnored: False
                                  IterBegin: "[1, 38] (37)"
                                  IterEnd: "[1, 47] (46)"
                                  Token: "Upper"
                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                                  Whitespace:
                                    - 36
                                    - 37
                                Phrase: "Upper"
                              Phrase: "Phrases"
                            Phrase: "DynamicPhrasesType.Statements"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 48] (47)"
                              IterEnd: "[1, 52] (51)"
                              Token: "'else'"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                              Whitespace:
                                - 46
                                - 47
                            Phrase: "'else'"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                  IsIgnored: False
                                  IterBegin: "[1, 53] (52)"
                                  IterEnd: "[1, 57] (56)"
                                  Token: "Lower"
                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                                  Whitespace:
                                    - 51
                                    - 52
                                Phrase: "Lower"
                              Phrase: "Phrases"
                            Phrase: "DynamicPhrasesType.Statements"
                        IsComplete: True
                      Phrase: "Ter"
                    Phrase: "Dynamic Phrases"
                  Phrase: "Phrases"
                Phrase: "DynamicPhrasesType.Statements"
            IsComplete: True
          Phrase: "Add"
        Phrase: "Dynamic Phrases"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
376) EndPhrase, "DynamicPhrasesType.Statements" [True]
377) StartPhrase, "'-'"
378) EndPhrase, "'-'" [False]
379) StartPhrase, "'*'"
380) EndPhrase, "'*'" [False]
381) StartPhrase, "'/'"
382) EndPhrase, "'/'" [False]
383) StartPhrase, "'if'"
384) EndPhrase, "'if'" [False]
385) StartPhrase, "'['"
386) EndPhrase, "'['" [False]
387) OnInternalPhraseAsync, 18, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 7] (6)"
                                    IterEnd: "[1, 10] (9)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                                    Whitespace:
                                      - 5
                                      - 6
                                  Phrase: "Lower"
                                Phrase: "Custom Display <Prefix>"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 10] (9)"
                                IterEnd: "[1, 11] (10)"
                                Token: "'['"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                                Whitespace: None
                              Phrase: "'['"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 11] (10)"
                                    IterEnd: "[1, 12] (11)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                                    Whitespace: None
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 12] (11)"
                                IterEnd: "[1, 13] (12)"
                                Token: "']'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                                Whitespace: None
                              Phrase: "']'"
                          IsComplete: True
                        Phrase: "Index"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 13] (12)"
                          IterEnd: "[1, 14] (13)"
                          Token: "'['"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
                          Whitespace: None
                        Phrase: "'['"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 14] (13)"
                              IterEnd: "[1, 15] (14)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
                              Whitespace: None
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 15] (14)"
                          IterEnd: "[1, 16] (15)"
                          Token: "']'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
                          Whitespace: None
                        Phrase: "']'"
                    IsComplete: True
                  Phrase: "Index"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 16] (15)"
                    IterEnd: "[1, 17] (16)"
                    Token: "'['"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
                    Whitespace: None
                  Phrase: "'['"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 17] (16)"
                        IterEnd: "[1, 18] (17)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 18] (17)"
                    IterEnd: "[1, 19] (18)"
                    Token: "']'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
                    Whitespace: None
                  Phrase: "']'"
              IsComplete: True
            Phrase: "Index"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 20] (19)"
              IterEnd: "[1, 21] (20)"
              Token: "'+'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(19, 20), match='+'>"
              Whitespace:
                - 18
                - 19
            Phrase: "'+'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 22] (21)"
                              IterEnd: "[1, 27] (26)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                              Whitespace:
                                - 20
                                - 21
                            Phrase: "Lower"
                          Phrase: "Custom Display <Prefix>"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 28] (27)"
                          IterEnd: "[1, 29] (28)"
                          Token: "'+'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
                          Whitespace:
                            - 26
                            - 27
                        Phrase: "'+'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 30] (29)"
                                          IterEnd: "[1, 34] (33)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                                          Whitespace:
                                            - 28
                                            - 29
                                        Phrase: "Lower"
                                      Phrase: "Custom Display <Prefix>"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 35] (34)"
                                      IterEnd: "[1, 37] (36)"
                                      Token: "'if'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                                      Whitespace:
                                        - 33
                                        - 34
                                    Phrase: "'if'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 38] (37)"
                                          IterEnd: "[1, 47] (46)"
                                          Token: "Upper"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                                          Whitespace:
                                            - 36
                                            - 37
                                        Phrase: "Upper"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 48] (47)"
                                      IterEnd: "[1, 52] (51)"
                                      Token: "'else'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                                      Whitespace:
                                        - 46
                                        - 47
                                    Phrase: "'else'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 53] (52)"
                                          IterEnd: "[1, 57] (56)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                                          Whitespace:
                                            - 51
                                            - 52
                                        Phrase: "Lower"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                IsComplete: True
                              Phrase: "Ter"
                            Phrase: "Dynamic Phrases"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Add"
                Phrase: "Dynamic Phrases"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Add"
    Phrase: "Custom Display <Suffix>"
388) EndPhrase, "Custom Display <Suffix>" [True]
389) StartPhrase, "Custom Display <Suffix>"
390) StartPhrase, "'+'"
391) EndPhrase, "'+'" [False]
392) StartPhrase, "'-'"
393) EndPhrase, "'-'" [False]
394) StartPhrase, "'*'"
395) EndPhrase, "'*'" [False]
396) StartPhrase, "'/'"
397) EndPhrase, "'/'" [False]
398) StartPhrase, "'if'"
399) EndPhrase, "'if'" [False]
400) StartPhrase, "'['"
401) EndPhrase, "'['" [False]
402) EndPhrase, "Custom Display <Suffix>" [False]
403) OnInternalPhraseAsync, 5, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
              DataItems:
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 7] (6)"
                                    IterEnd: "[1, 10] (9)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                                    Whitespace:
                                      - 5
                                      - 6
                                  Phrase: "Lower"
                                Phrase: "Custom Display <Prefix>"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 10] (9)"
                                IterEnd: "[1, 11] (10)"
                                Token: "'['"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                                Whitespace: None
                              Phrase: "'['"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 11] (10)"
                                    IterEnd: "[1, 12] (11)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                                    Whitespace: None
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 12] (11)"
                                IterEnd: "[1, 13] (12)"
                                Token: "']'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                                Whitespace: None
                              Phrase: "']'"
                          IsComplete: True
                        Phrase: "Index"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 13] (12)"
                          IterEnd: "[1, 14] (13)"
                          Token: "'['"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
                          Whitespace: None
                        Phrase: "'['"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 14] (13)"
                              IterEnd: "[1, 15] (14)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
                              Whitespace: None
                            Phrase: "Lower"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 15] (14)"
                          IterEnd: "[1, 16] (15)"
                          Token: "']'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
                          Whitespace: None
                        Phrase: "']'"
                    IsComplete: True
                  Phrase: "Index"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 16] (15)"
                    IterEnd: "[1, 17] (16)"
                    Token: "'['"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
                    Whitespace: None
                  Phrase: "'['"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 17] (16)"
                        IterEnd: "[1, 18] (17)"
                        Token: "Lower"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
                        Whitespace: None
                      Phrase: "Lower"
                    Phrase: "Phrases"
                  Phrase: "DynamicPhrasesType.Statements"
                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    IsIgnored: False
                    IterBegin: "[1, 18] (17)"
                    IterEnd: "[1, 19] (18)"
                    Token: "']'"
                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
                    Whitespace: None
                  Phrase: "']'"
              IsComplete: True
            Phrase: "Index"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 20] (19)"
              IterEnd: "[1, 21] (20)"
              Token: "'+'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(19, 20), match='+'>"
              Whitespace:
                - 18
                - 19
            Phrase: "'+'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 22] (21)"
                              IterEnd: "[1, 27] (26)"
                              Token: "Lower"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                              Whitespace:
                                - 20
                                - 21
                            Phrase: "Lower"
                          Phrase: "Custom Display <Prefix>"
                        Phrase: "DynamicPhrasesType.Statements"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 28] (27)"
                          IterEnd: "[1, 29] (28)"
                          Token: "'+'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
                          Whitespace:
                            - 26
                            - 27
                        Phrase: "'+'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 30] (29)"
                                          IterEnd: "[1, 34] (33)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                                          Whitespace:
                                            - 28
                                            - 29
                                        Phrase: "Lower"
                                      Phrase: "Custom Display <Prefix>"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 35] (34)"
                                      IterEnd: "[1, 37] (36)"
                                      Token: "'if'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                                      Whitespace:
                                        - 33
                                        - 34
                                    Phrase: "'if'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 38] (37)"
                                          IterEnd: "[1, 47] (46)"
                                          Token: "Upper"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                                          Whitespace:
                                            - 36
                                            - 37
                                        Phrase: "Upper"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 48] (47)"
                                      IterEnd: "[1, 52] (51)"
                                      Token: "'else'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                                      Whitespace:
                                        - 46
                                        - 47
                                    Phrase: "'else'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 53] (52)"
                                          IterEnd: "[1, 57] (56)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                                          Whitespace:
                                            - 51
                                            - 52
                                        Phrase: "Lower"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                IsComplete: True
                              Phrase: "Ter"
                            Phrase: "Dynamic Phrases"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Add"
                Phrase: "Dynamic Phrases"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Add"
    Phrase: "Dynamic Phrases"
404) EndPhrase, "Dynamic Phrases" [True]
405) OnInternalPhraseAsync, 5, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                DataItems:
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                      DataItems:
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                            DataItems:
                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 7] (6)"
                                      IterEnd: "[1, 10] (9)"
                                      Token: "Lower"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                                      Whitespace:
                                        - 5
                                        - 6
                                    Phrase: "Lower"
                                  Phrase: "Custom Display <Prefix>"
                                Phrase: "DynamicPhrasesType.Statements"
                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                  IsIgnored: False
                                  IterBegin: "[1, 10] (9)"
                                  IterEnd: "[1, 11] (10)"
                                  Token: "'['"
                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                                  Whitespace: None
                                Phrase: "'['"
                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 11] (10)"
                                      IterEnd: "[1, 12] (11)"
                                      Token: "Lower"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                                      Whitespace: None
                                    Phrase: "Lower"
                                  Phrase: "Phrases"
                                Phrase: "DynamicPhrasesType.Statements"
                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                  IsIgnored: False
                                  IterBegin: "[1, 12] (11)"
                                  IterEnd: "[1, 13] (12)"
                                  Token: "']'"
                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                                  Whitespace: None
                                Phrase: "']'"
                            IsComplete: True
                          Phrase: "Index"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                            IsIgnored: False
                            IterBegin: "[1, 13] (12)"
                            IterEnd: "[1, 14] (13)"
                            Token: "'['"
                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
                            Whitespace: None
                          Phrase: "'['"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 14] (13)"
                                IterEnd: "[1, 15] (14)"
                                Token: "Lower"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
                                Whitespace: None
                              Phrase: "Lower"
                            Phrase: "Phrases"
                          Phrase: "DynamicPhrasesType.Statements"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                            IsIgnored: False
                            IterBegin: "[1, 15] (14)"
                            IterEnd: "[1, 16] (15)"
                            Token: "']'"
                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
                            Whitespace: None
                          Phrase: "']'"
                      IsComplete: True
                    Phrase: "Index"
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[1, 16] (15)"
                      IterEnd: "[1, 17] (16)"
                      Token: "'['"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                        Match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
                      Whitespace: None
                    Phrase: "'['"
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 17] (16)"
                          IterEnd: "[1, 18] (17)"
                          Token: "Lower"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
                          Whitespace: None
                        Phrase: "Lower"
                      Phrase: "Phrases"
                    Phrase: "DynamicPhrasesType.Statements"
                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                      IsIgnored: False
                      IterBegin: "[1, 18] (17)"
                      IterEnd: "[1, 19] (18)"
                      Token: "']'"
                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                        Match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
                      Whitespace: None
                    Phrase: "']'"
                IsComplete: True
              Phrase: "Index"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                IsIgnored: False
                IterBegin: "[1, 20] (19)"
                IterEnd: "[1, 21] (20)"
                Token: "'+'"
                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(19, 20), match='+'>"
                Whitespace:
                  - 18
                  - 19
              Phrase: "'+'"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                      DataItems:
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 22] (21)"
                                IterEnd: "[1, 27] (26)"
                                Token: "Lower"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                                Whitespace:
                                  - 20
                                  - 21
                              Phrase: "Lower"
                            Phrase: "Custom Display <Prefix>"
                          Phrase: "DynamicPhrasesType.Statements"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                            IsIgnored: False
                            IterBegin: "[1, 28] (27)"
                            IterEnd: "[1, 29] (28)"
                            Token: "'+'"
                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
                            Whitespace:
                              - 26
                              - 27
                          Phrase: "'+'"
                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                  DataItems:
                                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 30] (29)"
                                            IterEnd: "[1, 34] (33)"
                                            Token: "Lower"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                                            Whitespace:
                                              - 28
                                              - 29
                                          Phrase: "Lower"
                                        Phrase: "Custom Display <Prefix>"
                                      Phrase: "DynamicPhrasesType.Statements"
                                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                        IsIgnored: False
                                        IterBegin: "[1, 35] (34)"
                                        IterEnd: "[1, 37] (36)"
                                        Token: "'if'"
                                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                                        Whitespace:
                                          - 33
                                          - 34
                                      Phrase: "'if'"
                                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 38] (37)"
                                            IterEnd: "[1, 47] (46)"
                                            Token: "Upper"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                                            Whitespace:
                                              - 36
                                              - 37
                                          Phrase: "Upper"
                                        Phrase: "Phrases"
                                      Phrase: "DynamicPhrasesType.Statements"
                                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                        IsIgnored: False
                                        IterBegin: "[1, 48] (47)"
                                        IterEnd: "[1, 52] (51)"
                                        Token: "'else'"
                                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                                        Whitespace:
                                          - 46
                                          - 47
                                      Phrase: "'else'"
                                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 53] (52)"
                                            IterEnd: "[1, 57] (56)"
                                            Token: "Lower"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                                            Whitespace:
                                              - 51
                                              - 52
                                          Phrase: "Lower"
                                        Phrase: "Phrases"
                                      Phrase: "DynamicPhrasesType.Statements"
                                  IsComplete: True
                                Phrase: "Ter"
                              Phrase: "Dynamic Phrases"
                            Phrase: "Phrases"
                          Phrase: "DynamicPhrasesType.Statements"
                      IsComplete: True
                    Phrase: "Add"
                  Phrase: "Dynamic Phrases"
                Phrase: "Phrases"
              Phrase: "DynamicPhrasesType.Statements"
          IsComplete: True
        Phrase: "Add"
      Phrase: "Dynamic Phrases"
    Phrase: "Phrases"
406) EndPhrase, "Phrases" [True]
407) OnInternalPhraseAsync, 5, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
            DataItems:
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                  DataItems:
                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                        DataItems:
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                              DataItems:
                                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                        IsIgnored: False
                                        IterBegin: "[1, 7] (6)"
                                        IterEnd: "[1, 10] (9)"
                                        Token: "Lower"
                                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                                        Whitespace:
                                          - 5
                                          - 6
                                      Phrase: "Lower"
                                    Phrase: "Custom Display <Prefix>"
                                  Phrase: "DynamicPhrasesType.Statements"
                                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 10] (9)"
                                    IterEnd: "[1, 11] (10)"
                                    Token: "'['"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                                    Whitespace: None
                                  Phrase: "'['"
                                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                        IsIgnored: False
                                        IterBegin: "[1, 11] (10)"
                                        IterEnd: "[1, 12] (11)"
                                        Token: "Lower"
                                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                                        Whitespace: None
                                      Phrase: "Lower"
                                    Phrase: "Phrases"
                                  Phrase: "DynamicPhrasesType.Statements"
                                - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 12] (11)"
                                    IterEnd: "[1, 13] (12)"
                                    Token: "']'"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                                    Whitespace: None
                                  Phrase: "']'"
                              IsComplete: True
                            Phrase: "Index"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 13] (12)"
                              IterEnd: "[1, 14] (13)"
                              Token: "'['"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
                              Whitespace: None
                            Phrase: "'['"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                  IsIgnored: False
                                  IterBegin: "[1, 14] (13)"
                                  IterEnd: "[1, 15] (14)"
                                  Token: "Lower"
                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
                                  Whitespace: None
                                Phrase: "Lower"
                              Phrase: "Phrases"
                            Phrase: "DynamicPhrasesType.Statements"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 15] (14)"
                              IterEnd: "[1, 16] (15)"
                              Token: "']'"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
                              Whitespace: None
                            Phrase: "']'"
                        IsComplete: True
                      Phrase: "Index"
                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 16] (15)"
                        IterEnd: "[1, 17] (16)"
                        Token: "'['"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
                        Whitespace: None
                      Phrase: "'['"
                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                            IsIgnored: False
                            IterBegin: "[1, 17] (16)"
                            IterEnd: "[1, 18] (17)"
                            Token: "Lower"
                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
                            Whitespace: None
                          Phrase: "Lower"
                        Phrase: "Phrases"
                      Phrase: "DynamicPhrasesType.Statements"
                    - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        IsIgnored: False
                        IterBegin: "[1, 18] (17)"
                        IterEnd: "[1, 19] (18)"
                        Token: "']'"
                        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
                        Whitespace: None
                      Phrase: "']'"
                  IsComplete: True
                Phrase: "Index"
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 20] (19)"
                  IterEnd: "[1, 21] (20)"
                  Token: "'+'"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(19, 20), match='+'>"
                  Whitespace:
                    - 18
                    - 19
                Phrase: "'+'"
              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                        DataItems:
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                  IsIgnored: False
                                  IterBegin: "[1, 22] (21)"
                                  IterEnd: "[1, 27] (26)"
                                  Token: "Lower"
                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                                  Whitespace:
                                    - 20
                                    - 21
                                Phrase: "Lower"
                              Phrase: "Custom Display <Prefix>"
                            Phrase: "DynamicPhrasesType.Statements"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                              IsIgnored: False
                              IterBegin: "[1, 28] (27)"
                              IterEnd: "[1, 29] (28)"
                              Token: "'+'"
                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
                              Whitespace:
                                - 26
                                - 27
                            Phrase: "'+'"
                          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                    DataItems:
                                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                              IsIgnored: False
                                              IterBegin: "[1, 30] (29)"
                                              IterEnd: "[1, 34] (33)"
                                              Token: "Lower"
                                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                                              Whitespace:
                                                - 28
                                                - 29
                                            Phrase: "Lower"
                                          Phrase: "Custom Display <Prefix>"
                                        Phrase: "DynamicPhrasesType.Statements"
                                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 35] (34)"
                                          IterEnd: "[1, 37] (36)"
                                          Token: "'if'"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                                          Whitespace:
                                            - 33
                                            - 34
                                        Phrase: "'if'"
                                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                              IsIgnored: False
                                              IterBegin: "[1, 38] (37)"
                                              IterEnd: "[1, 47] (46)"
                                              Token: "Upper"
                                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                                              Whitespace:
                                                - 36
                                                - 37
                                            Phrase: "Upper"
                                          Phrase: "Phrases"
                                        Phrase: "DynamicPhrasesType.Statements"
                                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 48] (47)"
                                          IterEnd: "[1, 52] (51)"
                                          Token: "'else'"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                                          Whitespace:
                                            - 46
                                            - 47
                                        Phrase: "'else'"
                                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                              IsIgnored: False
                                              IterBegin: "[1, 53] (52)"
                                              IterEnd: "[1, 57] (56)"
                                              Token: "Lower"
                                              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                                              Whitespace:
                                                - 51
                                                - 52
                                            Phrase: "Lower"
                                          Phrase: "Phrases"
                                        Phrase: "DynamicPhrasesType.Statements"
                                    IsComplete: True
                                  Phrase: "Ter"
                                Phrase: "Dynamic Phrases"
                              Phrase: "Phrases"
                            Phrase: "DynamicPhrasesType.Statements"
                        IsComplete: True
                      Phrase: "Add"
                    Phrase: "Dynamic Phrases"
                  Phrase: "Phrases"
                Phrase: "DynamicPhrasesType.Statements"
            IsComplete: True
          Phrase: "Add"
        Phrase: "Dynamic Phrases"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
408) EndPhrase, "DynamicPhrasesType.Statements" [True]
409) StartPhrase, "'-'"
410) EndPhrase, "'-'" [False]
411) StartPhrase, "'*'"
412) EndPhrase, "'*'" [False]
413) StartPhrase, "'/'"
414) EndPhrase, "'/'" [False]
415) StartPhrase, "'if'"
416) EndPhrase, "'if'" [False]
417) StartPhrase, "'['"
418) EndPhrase, "'['" [False]
419) OnInternalPhraseAsync, 3, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 1] (0)"
                  IterEnd: "[1, 4] (3)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Custom Display <Prefix>"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 5] (4)"
              IterEnd: "[1, 6] (5)"
              Token: "'+'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
              Whitespace:
                - 3
                - 4
            Phrase: "'+'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                      DataItems:
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 7] (6)"
                                                IterEnd: "[1, 10] (9)"
                                                Token: "Lower"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                                                Whitespace:
                                                  - 5
                                                  - 6
                                              Phrase: "Lower"
                                            Phrase: "Custom Display <Prefix>"
                                          Phrase: "DynamicPhrasesType.Statements"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 10] (9)"
                                            IterEnd: "[1, 11] (10)"
                                            Token: "'['"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                                            Whitespace: None
                                          Phrase: "'['"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 11] (10)"
                                                IterEnd: "[1, 12] (11)"
                                                Token: "Lower"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                                                Whitespace: None
                                              Phrase: "Lower"
                                            Phrase: "Phrases"
                                          Phrase: "DynamicPhrasesType.Statements"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 12] (11)"
                                            IterEnd: "[1, 13] (12)"
                                            Token: "']'"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                                            Whitespace: None
                                          Phrase: "']'"
                                      IsComplete: True
                                    Phrase: "Index"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 13] (12)"
                                      IterEnd: "[1, 14] (13)"
                                      Token: "'['"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
                                      Whitespace: None
                                    Phrase: "'['"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 14] (13)"
                                          IterEnd: "[1, 15] (14)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
                                          Whitespace: None
                                        Phrase: "Lower"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 15] (14)"
                                      IterEnd: "[1, 16] (15)"
                                      Token: "']'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
                                      Whitespace: None
                                    Phrase: "']'"
                                IsComplete: True
                              Phrase: "Index"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 16] (15)"
                                IterEnd: "[1, 17] (16)"
                                Token: "'['"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
                                Whitespace: None
                              Phrase: "'['"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 17] (16)"
                                    IterEnd: "[1, 18] (17)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
                                    Whitespace: None
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 18] (17)"
                                IterEnd: "[1, 19] (18)"
                                Token: "']'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
                                Whitespace: None
                              Phrase: "']'"
                          IsComplete: True
                        Phrase: "Index"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 20] (19)"
                          IterEnd: "[1, 21] (20)"
                          Token: "'+'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(19, 20), match='+'>"
                          Whitespace:
                            - 18
                            - 19
                        Phrase: "'+'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 22] (21)"
                                          IterEnd: "[1, 27] (26)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                                          Whitespace:
                                            - 20
                                            - 21
                                        Phrase: "Lower"
                                      Phrase: "Custom Display <Prefix>"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 28] (27)"
                                      IterEnd: "[1, 29] (28)"
                                      Token: "'+'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
                                      Whitespace:
                                        - 26
                                        - 27
                                    Phrase: "'+'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                            DataItems:
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 30] (29)"
                                                      IterEnd: "[1, 34] (33)"
                                                      Token: "Lower"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                                                      Whitespace:
                                                        - 28
                                                        - 29
                                                    Phrase: "Lower"
                                                  Phrase: "Custom Display <Prefix>"
                                                Phrase: "DynamicPhrasesType.Statements"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                  IsIgnored: False
                                                  IterBegin: "[1, 35] (34)"
                                                  IterEnd: "[1, 37] (36)"
                                                  Token: "'if'"
                                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                    Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                                                  Whitespace:
                                                    - 33
                                                    - 34
                                                Phrase: "'if'"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 38] (37)"
                                                      IterEnd: "[1, 47] (46)"
                                                      Token: "Upper"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                                                      Whitespace:
                                                        - 36
                                                        - 37
                                                    Phrase: "Upper"
                                                  Phrase: "Phrases"
                                                Phrase: "DynamicPhrasesType.Statements"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                  IsIgnored: False
                                                  IterBegin: "[1, 48] (47)"
                                                  IterEnd: "[1, 52] (51)"
                                                  Token: "'else'"
                                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                    Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                                                  Whitespace:
                                                    - 46
                                                    - 47
                                                Phrase: "'else'"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 53] (52)"
                                                      IterEnd: "[1, 57] (56)"
                                                      Token: "Lower"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                                                      Whitespace:
                                                        - 51
                                                        - 52
                                                    Phrase: "Lower"
                                                  Phrase: "Phrases"
                                                Phrase: "DynamicPhrasesType.Statements"
                                            IsComplete: True
                                          Phrase: "Ter"
                                        Phrase: "Dynamic Phrases"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                IsComplete: True
                              Phrase: "Add"
                            Phrase: "Dynamic Phrases"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Add"
                Phrase: "Dynamic Phrases"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Add"
    Phrase: "Custom Display <Suffix>"
420) EndPhrase, "Custom Display <Suffix>" [True]
421) StartPhrase, "Custom Display <Suffix>"
422) StartPhrase, "'+'"
423) EndPhrase, "'+'" [False]
424) StartPhrase, "'-'"
425) EndPhrase, "'-'" [False]
426) StartPhrase, "'*'"
427) EndPhrase, "'*'" [False]
428) StartPhrase, "'/'"
429) EndPhrase, "'/'" [False]
430) StartPhrase, "'if'"
431) EndPhrase, "'if'" [False]
432) StartPhrase, "'['"
433) EndPhrase, "'['" [False]
434) EndPhrase, "Custom Display <Suffix>" [False]
435) OnInternalPhraseAsync, 0, 56
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
        DataItems:
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                  IsIgnored: False
                  IterBegin: "[1, 1] (0)"
                  IterEnd: "[1, 4] (3)"
                  Token: "Lower"
                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                    Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                  Whitespace: None
                Phrase: "Lower"
              Phrase: "Custom Display <Prefix>"
            Phrase: "DynamicPhrasesType.Statements"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
              IsIgnored: False
              IterBegin: "[1, 5] (4)"
              IterEnd: "[1, 6] (5)"
              Token: "'+'"
              Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                Match: "<_sre.SRE_Match object; span=(4, 5), match='+'>"
              Whitespace:
                - 3
                - 4
            Phrase: "'+'"
          - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                    DataItems:
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                          DataItems:
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                      DataItems:
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 7] (6)"
                                                IterEnd: "[1, 10] (9)"
                                                Token: "Lower"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(6, 9), match='var'>"
                                                Whitespace:
                                                  - 5
                                                  - 6
                                              Phrase: "Lower"
                                            Phrase: "Custom Display <Prefix>"
                                          Phrase: "DynamicPhrasesType.Statements"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 10] (9)"
                                            IterEnd: "[1, 11] (10)"
                                            Token: "'['"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                                            Whitespace: None
                                          Phrase: "'['"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                IsIgnored: False
                                                IterBegin: "[1, 11] (10)"
                                                IterEnd: "[1, 12] (11)"
                                                Token: "Lower"
                                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(10, 11), match='a'>"
                                                Whitespace: None
                                              Phrase: "Lower"
                                            Phrase: "Phrases"
                                          Phrase: "DynamicPhrasesType.Statements"
                                        - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            IsIgnored: False
                                            IterBegin: "[1, 12] (11)"
                                            IterEnd: "[1, 13] (12)"
                                            Token: "']'"
                                            Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                                            Whitespace: None
                                          Phrase: "']'"
                                      IsComplete: True
                                    Phrase: "Index"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 13] (12)"
                                      IterEnd: "[1, 14] (13)"
                                      Token: "'['"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
                                      Whitespace: None
                                    Phrase: "'['"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 14] (13)"
                                          IterEnd: "[1, 15] (14)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(13, 14), match='b'>"
                                          Whitespace: None
                                        Phrase: "Lower"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 15] (14)"
                                      IterEnd: "[1, 16] (15)"
                                      Token: "']'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
                                      Whitespace: None
                                    Phrase: "']'"
                                IsComplete: True
                              Phrase: "Index"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 16] (15)"
                                IterEnd: "[1, 17] (16)"
                                Token: "'['"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
                                Whitespace: None
                              Phrase: "'['"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    IsIgnored: False
                                    IterBegin: "[1, 17] (16)"
                                    IterEnd: "[1, 18] (17)"
                                    Token: "Lower"
                                    Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(16, 17), match='c'>"
                                    Whitespace: None
                                  Phrase: "Lower"
                                Phrase: "Phrases"
                              Phrase: "DynamicPhrasesType.Statements"
                            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                IsIgnored: False
                                IterBegin: "[1, 18] (17)"
                                IterEnd: "[1, 19] (18)"
                                Token: "']'"
                                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
                                Whitespace: None
                              Phrase: "']'"
                          IsComplete: True
                        Phrase: "Index"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                          IsIgnored: False
                          IterBegin: "[1, 20] (19)"
                          IterEnd: "[1, 21] (20)"
                          Token: "'+'"
                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                            Match: "<_sre.SRE_Match object; span=(19, 20), match='+'>"
                          Whitespace:
                            - 18
                            - 19
                        Phrase: "'+'"
                      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                            Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                DataItems:
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                          IsIgnored: False
                                          IterBegin: "[1, 22] (21)"
                                          IterEnd: "[1, 27] (26)"
                                          Token: "Lower"
                                          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(21, 26), match='three'>"
                                          Whitespace:
                                            - 20
                                            - 21
                                        Phrase: "Lower"
                                      Phrase: "Custom Display <Prefix>"
                                    Phrase: "DynamicPhrasesType.Statements"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                      IsIgnored: False
                                      IterBegin: "[1, 28] (27)"
                                      IterEnd: "[1, 29] (28)"
                                      Token: "'+'"
                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(27, 28), match='+'>"
                                      Whitespace:
                                        - 26
                                        - 27
                                    Phrase: "'+'"
                                  - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                          Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
                                            DataItems:
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 30] (29)"
                                                      IterEnd: "[1, 34] (33)"
                                                      Token: "Lower"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(29, 33), match='four'>"
                                                      Whitespace:
                                                        - 28
                                                        - 29
                                                    Phrase: "Lower"
                                                  Phrase: "Custom Display <Prefix>"
                                                Phrase: "DynamicPhrasesType.Statements"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                  IsIgnored: False
                                                  IterBegin: "[1, 35] (34)"
                                                  IterEnd: "[1, 37] (36)"
                                                  Token: "'if'"
                                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                    Match: "<_sre.SRE_Match object; span=(34, 36), match='if'>"
                                                  Whitespace:
                                                    - 33
                                                    - 34
                                                Phrase: "'if'"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 38] (37)"
                                                      IterEnd: "[1, 47] (46)"
                                                      Token: "Upper"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(37, 46), match='CONDITION'>"
                                                      Whitespace:
                                                        - 36
                                                        - 37
                                                    Phrase: "Upper"
                                                  Phrase: "Phrases"
                                                Phrase: "DynamicPhrasesType.Statements"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                  IsIgnored: False
                                                  IterBegin: "[1, 48] (47)"
                                                  IterEnd: "[1, 52] (51)"
                                                  Token: "'else'"
                                                  Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                    Match: "<_sre.SRE_Match object; span=(47, 51), match='else'>"
                                                  Whitespace:
                                                    - 46
                                                    - 47
                                                Phrase: "'else'"
                                              - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
                                                    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                      IsIgnored: False
                                                      IterBegin: "[1, 53] (52)"
                                                      IterEnd: "[1, 57] (56)"
                                                      Token: "Lower"
                                                      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                                                        Match: "<_sre.SRE_Match object; span=(52, 56), match='five'>"
                                                      Whitespace:
                                                        - 51
                                                        - 52
                                                    Phrase: "Lower"
                                                  Phrase: "Phrases"
                                                Phrase: "DynamicPhrasesType.Statements"
                                            IsComplete: True
                                          Phrase: "Ter"
                                        Phrase: "Dynamic Phrases"
                                      Phrase: "Phrases"
                                    Phrase: "DynamicPhrasesType.Statements"
                                IsComplete: True
                              Phrase: "Add"
                            Phrase: "Dynamic Phrases"
                          Phrase: "Phrases"
                        Phrase: "DynamicPhrasesType.Statements"
                    IsComplete: True
                  Phrase: "Add"
                Phrase: "Dynamic Phrases"
              Phrase: "Phrases"
            Phrase: "DynamicPhrasesType.Statements"
        IsComplete: True
      Phrase: "Add"
    Phrase: "Dynamic Phrases"
436) EndPhrase, "Dynamic Phrases" [True]
