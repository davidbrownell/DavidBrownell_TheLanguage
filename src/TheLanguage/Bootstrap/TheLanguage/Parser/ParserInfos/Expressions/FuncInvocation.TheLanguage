# ----------------------------------------------------------------------
# |
# |  FuncInvocation.TheLanguage
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2021-11-12 11:45:39
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2021
# |  Distributed under the Boost Software License, Version 1.0. See
# |  accompanying file LICENSE_1_0.txt or copy at
# |  http://www.boost.org/LICENSE_1_0.txt.
# |
# ----------------------------------------------------------------------
from .Expression import ExpressionParserInfo, ExpressionParserInfoRegions
from ..ParserInfo import Region
from ..Common.FuncArgument import FuncArgumentParserInfo, FuncArgumentParserInfoRegions


# ----------------------------------------------------------------------
public immutable class FuncInvocationExpressionParserInfo
    extends ExpressionParserInfo
:
    public ExpressionParserInfo val expression
    public (List<FuncArgumentParserInfo>{ min_length'=1 } | Bool) val arguments
    [Keyword] public (Bool | None) val is_perfect_forwarding

    # ----------------------------------------------------------------------
    private None __Init?__():
        ensure self.arguments is not Bool or self.arguments is False
        ensure self.is_perfect_forwarding is None or self.is_perfect_forwarding is True
        ensure self.is_perfect_forwarding is None or self.arguments is False


# ----------------------------------------------------------------------
public immutable class FuncInvocationExpressionParserInfoRegions
    extends ExpressionParserInfoRegions
:
    public ExpressionParserInfoRegions val expression
    public (List<FuncArgumentParserInfoRegions>{ min_length'=1 } | Region) val arguments
    [Keyword] public (Region | None) val is_perfect_forwarding

    # ----------------------------------------------------------------------
    private None __Init?__():
        ensure self.is_perfect_forwarding is None or self.arguments is Region
