<class 'TheLanguage.Parser.Components.AST.RootNode'>
Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 3] (2)
                                                                        IterBefore : [1, 1] (0)
                                                                        Type       : Number <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(0, 2), match='33'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 1] (3)
                                                                        IterBefore : [1, 3] (2)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 3
                                                                                     Start : 2
                                                                        Whitespace : None
                                                      IterAfter  : [2, 1] (3)
                                                      IterBefore : [1, 1] (0)
                                                      Type       : Number Phrase <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [2, 1] (3)
                                    IterBefore : [1, 1] (0)
                                    Type       : (Upper Phrase, Lower Phrase, Number Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [2, 1] (3)
                  IterBefore : [1, 1] (0)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 12] (14)
                                                                        IterBefore : [2, 1] (3)
                                                                        Type       : Lower <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(3, 14), match='twooooooooo'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [3, 1] (15)
                                                                        IterBefore : [2, 12] (14)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 15
                                                                                     Start : 14
                                                                        Whitespace : None
                                                      IterAfter  : [3, 1] (15)
                                                      IterBefore : [2, 1] (3)
                                                      Type       : Lower Phrase <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [3, 1] (15)
                                    IterBefore : [2, 1] (3)
                                    Type       : (Upper Phrase, Lower Phrase, Number Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [3, 1] (15)
                  IterBefore : [2, 1] (3)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [3, 4] (18)
                                                                        IterBefore : [3, 1] (15)
                                                                        Type       : Upper <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(15, 18), match='ONE'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 1] (19)
                                                                        IterBefore : [3, 4] (18)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 19
                                                                                     Start : 18
                                                                        Whitespace : None
                                                      IterAfter  : [4, 1] (19)
                                                      IterBefore : [3, 1] (15)
                                                      Type       : Upper Phrase <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [4, 1] (19)
                                    IterBefore : [3, 1] (15)
                                    Type       : (Upper Phrase, Lower Phrase, Number Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [4, 1] (19)
                  IterBefore : [3, 1] (15)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
IterAfter  : [4, 1] (19)
IterBefore : [1, 1] (0)
Type       : <None>
