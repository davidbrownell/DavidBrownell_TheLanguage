# <class 'Bootstrap.Lexer.Components.AST.Node'>
Children:
  - # <class 'Bootstrap.Lexer.Components.AST.Node'>
    Children:
      - # <class 'Bootstrap.Lexer.Components.AST.Node'>
        Children:
          - # <class 'Bootstrap.Lexer.Components.AST.Node'>
            Children:
              - # <class 'Bootstrap.Lexer.Components.AST.Node'>
                Children:
                  - # <class 'Bootstrap.Lexer.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 4] (3)"
                    Type: "Lower <class 'Bootstrap.Lexer.Components.Token.RegexToken'>"
                    Value: # <class 'Bootstrap.Lexer.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(0, 3), match='one'>"
                    Whitespace: None
                  - # <class 'Bootstrap.Lexer.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 4] (3)"
                    IterEnd: "[5, 1] (7)"
                    Type: "Newline+ <class 'Bootstrap.Lexer.Components.Token.NewlineToken'>"
                    Value: # <class 'Bootstrap.Lexer.Components.Token.NewlineToken.MatchResult'>
                      End: 7
                      Start: 3
                    Whitespace: None
                IsIgnored: False
                IterBegin: "[1, 1] (0)"
                IterEnd: "[5, 1] (7)"
                Type: "[Lower, Newline+] <class 'Bootstrap.Lexer.Phrases.SequencePhrase.SequencePhrase'>"
            IsIgnored: False
            IterBegin: "[1, 1] (0)"
            IterEnd: "[5, 1] (7)"
            Type: "Phrase <class 'Bootstrap.Lexer.Phrases.RepeatPhrase.RepeatPhrase'>"
        IsIgnored: False
        IterBegin: "[1, 1] (0)"
        IterEnd: "[5, 1] (7)"
        Type: "(Phrase) Statements <class 'Bootstrap.Lexer.Phrases.OrPhrase.OrPhrase'>"
    IsIgnored: False
    IterBegin: "[1, 1] (0)"
    IterEnd: "[5, 1] (7)"
    Type: "Dynamic Phrase <class 'Bootstrap.Lexer.Phrases.DynamicPhrase.DynamicPhrase'>"
IsIgnored: False
IterBegin: "[1, 1] (0)"
IterEnd: "[5, 1] (7)"
Type: "<None>"
