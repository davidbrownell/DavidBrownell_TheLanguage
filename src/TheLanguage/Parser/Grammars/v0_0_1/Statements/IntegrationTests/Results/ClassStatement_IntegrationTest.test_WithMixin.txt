<class 'TheLanguage.Parser.Components.AST.RootNode'>
Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                          IsIgnored  : False
                                                                                          IterAfter  : [1, 6] (5)
                                                                                          IterBefore : [1, 1] (0)
                                                                                          Type       : 'class' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                          Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                       Match : <_sre.SRE_Match object; span=(0, 5), match='class'>
                                                                                          Whitespace : None
                                                                        IterAfter  : [1, 6] (5)
                                                                        IterBefore : [1, 1] (0)
                                                                        Type       : Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 13] (12)
                                                                        IterBefore : [1, 7] (6)
                                                                        Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(6, 12), match='Class1'>
                                                                        Whitespace : 0)   5
                                                                                     1)   6
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 14] (13)
                                                                        IterBefore : [1, 13] (12)
                                                                        Type       : '(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(12, 13), match='('>
                                                                        Whitespace : None
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 15] (14)
                                                                        IterBefore : [1, 14] (13)
                                                                        Type       : ')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(13, 14), match=')'>
                                                                        Whitespace : None
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                              IsIgnored  : False
                                                                                                                              IterAfter  : [1, 20] (19)
                                                                                                                              IterBefore : [1, 16] (15)
                                                                                                                              Type       : 'uses' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                           Match : <_sre.SRE_Match object; span=(15, 19), match='uses'>
                                                                                                                              Whitespace : 0)   14
                                                                                                                                           1)   15
                                                                                                            IterAfter  : [1, 20] (19)
                                                                                                            IterBefore : [1, 16] (15)
                                                                                                            Type       : Or: ('implements', 'uses') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                                  IsIgnored  : False
                                                                                                                                                                  IterAfter  : [1, 27] (26)
                                                                                                                                                                  IterBefore : [1, 21] (20)
                                                                                                                                                                  Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                                  Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                                               Match : <_sre.SRE_Match object; span=(20, 26), match='Mixin1'>
                                                                                                                                                                  Whitespace : 0)   19
                                                                                                                                                                               1)   20
                                                                                                                                                IterAfter  : [1, 27] (26)
                                                                                                                                                IterBefore : [1, 21] (20)
                                                                                                                                                Type       : Base Item <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                                              IterAfter  : [1, 27] (26)
                                                                                                                              IterBefore : [1, 21] (20)
                                                                                                                              Type       : Base Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [1, 27] (26)
                                                                                                            IterBefore : [1, 21] (20)
                                                                                                            Type       : Or: (Grouped, Base Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                          IterAfter  : [1, 27] (26)
                                                                                          IterBefore : [1, 16] (15)
                                                                                          Type       : Implements and Uses <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : [1, 27] (26)
                                                                        IterBefore : [1, 16] (15)
                                                                        Type       : Repeat: {Implements and Uses, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                   5)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 28] (27)
                                                                        IterBefore : [1, 27] (26)
                                                                        Type       : ':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(26, 27), match=':'>
                                                                        Whitespace : None
                                                                   6)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 1] (28)
                                                                        IterBefore : [1, 28] (27)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 28
                                                                                     Start : 27
                                                                        Whitespace : None
                                                                   7)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 5] (32)
                                                                        IterBefore : [2, 1] (28)
                                                                        Type       : Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                                                                                     End   : 32
                                                                                     Start : 28
                                                                                     Value : 4
                                                                        Whitespace : None
                                                                   8)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [2, 9] (36)
                                                                                                                                                IterBefore : [2, 5] (32)
                                                                                                                                                Type       : 'pass' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(32, 36), match='pass'>
                                                                                                                                                Whitespace : None
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [4, 1] (38)
                                                                                                                                                IterBefore : [2, 9] (36)
                                                                                                                                                Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                                                             End   : 38
                                                                                                                                                             Start : 36
                                                                                                                                                Whitespace : None
                                                                                                                              IterAfter  : [4, 1] (38)
                                                                                                                              IterBefore : [2, 5] (32)
                                                                                                                              Type       : Pass Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [4, 1] (38)
                                                                                                            IterBefore : [2, 5] (32)
                                                                                                            Type       : 0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                          IterAfter  : [4, 1] (38)
                                                                                          IterBefore : [2, 5] (32)
                                                                                          Type       : Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                        IterAfter  : [4, 1] (38)
                                                                        IterBefore : [2, 5] (32)
                                                                        Type       : Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                   9)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 1] (38)
                                                                        IterBefore : [4, 1] (38)
                                                                        Type       : Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                                                                                     -- empty dict --
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ClassStatement.ClassStatement.NodeInfo'>
                                                                   Base       : None
                                                                   Interfaces : -- empty list --
                                                                   Mixins     : 0)   <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ClassStatement.ClassStatement.BaseInfo'>
                                                                                     Name       : Mixin1
                                                                                     Visibility : VisibilityModifier.private
                                                                   Name       : Class1
                                                                   Type       : ClassType.Class
                                                                   Visibility : VisibilityModifier.private
                                                      IterAfter  : [4, 1] (38)
                                                      IterBefore : [1, 1] (0)
                                                      Type       : Class Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [4, 1] (38)
                                    IterBefore : [1, 1] (0)
                                    Type       : 0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [4, 1] (38)
                  IterBefore : [1, 1] (0)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                          IsIgnored  : False
                                                                                          IterAfter  : [4, 6] (43)
                                                                                          IterBefore : [4, 1] (38)
                                                                                          Type       : 'class' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                          Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                       Match : <_sre.SRE_Match object; span=(38, 43), match='class'>
                                                                                          Whitespace : None
                                                                        IterAfter  : [4, 6] (43)
                                                                        IterBefore : [4, 1] (38)
                                                                        Type       : Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 13] (50)
                                                                        IterBefore : [4, 7] (44)
                                                                        Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(44, 50), match='Class2'>
                                                                        Whitespace : 0)   43
                                                                                     1)   44
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 14] (51)
                                                                        IterBefore : [4, 13] (50)
                                                                        Type       : '(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(50, 51), match='('>
                                                                        Whitespace : None
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 15] (52)
                                                                        IterBefore : [4, 14] (51)
                                                                        Type       : ')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(51, 52), match=')'>
                                                                        Whitespace : None
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                              IsIgnored  : False
                                                                                                                              IterAfter  : [4, 20] (57)
                                                                                                                              IterBefore : [4, 16] (53)
                                                                                                                              Type       : 'uses' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                           Match : <_sre.SRE_Match object; span=(53, 57), match='uses'>
                                                                                                                              Whitespace : 0)   52
                                                                                                                                           1)   53
                                                                                                            IterAfter  : [4, 20] (57)
                                                                                                            IterBefore : [4, 16] (53)
                                                                                                            Type       : Or: ('implements', 'uses') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                                  IsIgnored  : False
                                                                                                                                                                  IterAfter  : [4, 27] (64)
                                                                                                                                                                  IterBefore : [4, 21] (58)
                                                                                                                                                                  Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                                  Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                                               Match : <_sre.SRE_Match object; span=(58, 64), match='Mixin2'>
                                                                                                                                                                  Whitespace : 0)   57
                                                                                                                                                                               1)   58
                                                                                                                                                IterAfter  : [4, 27] (64)
                                                                                                                                                IterBefore : [4, 21] (58)
                                                                                                                                                Type       : Base Item <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                                  IsIgnored  : False
                                                                                                                                                                  IterAfter  : [4, 28] (65)
                                                                                                                                                                  IterBefore : [4, 27] (64)
                                                                                                                                                                  Type       : Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                                  Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                                               Match : <_sre.SRE_Match object; span=(64, 65), match=','>
                                                                                                                                                                  Whitespace : None
                                                                                                                                                IterAfter  : [4, 28] (65)
                                                                                                                                                IterBefore : [4, 27] (64)
                                                                                                                                                Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                                              IterAfter  : [4, 28] (65)
                                                                                                                              IterBefore : [4, 21] (58)
                                                                                                                              Type       : Base Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [4, 28] (65)
                                                                                                            IterBefore : [4, 21] (58)
                                                                                                            Type       : Or: (Grouped, Base Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                          IterAfter  : [4, 28] (65)
                                                                                          IterBefore : [4, 16] (53)
                                                                                          Type       : Implements and Uses <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : [4, 28] (65)
                                                                        IterBefore : [4, 16] (53)
                                                                        Type       : Repeat: {Implements and Uses, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                   5)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [4, 29] (66)
                                                                        IterBefore : [4, 28] (65)
                                                                        Type       : ':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(65, 66), match=':'>
                                                                        Whitespace : None
                                                                   6)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [5, 1] (67)
                                                                        IterBefore : [4, 29] (66)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 67
                                                                                     Start : 66
                                                                        Whitespace : None
                                                                   7)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [5, 5] (71)
                                                                        IterBefore : [5, 1] (67)
                                                                        Type       : Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                                                                                     End   : 71
                                                                                     Start : 67
                                                                                     Value : 4
                                                                        Whitespace : None
                                                                   8)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [5, 9] (75)
                                                                                                                                                IterBefore : [5, 5] (71)
                                                                                                                                                Type       : 'pass' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(71, 75), match='pass'>
                                                                                                                                                Whitespace : None
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [7, 1] (77)
                                                                                                                                                IterBefore : [5, 9] (75)
                                                                                                                                                Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                                                             End   : 77
                                                                                                                                                             Start : 75
                                                                                                                                                Whitespace : None
                                                                                                                              IterAfter  : [7, 1] (77)
                                                                                                                              IterBefore : [5, 5] (71)
                                                                                                                              Type       : Pass Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [7, 1] (77)
                                                                                                            IterBefore : [5, 5] (71)
                                                                                                            Type       : 0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                          IterAfter  : [7, 1] (77)
                                                                                          IterBefore : [5, 5] (71)
                                                                                          Type       : Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                        IterAfter  : [7, 1] (77)
                                                                        IterBefore : [5, 5] (71)
                                                                        Type       : Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                   9)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [7, 1] (77)
                                                                        IterBefore : [7, 1] (77)
                                                                        Type       : Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                                                                                     -- empty dict --
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ClassStatement.ClassStatement.NodeInfo'>
                                                                   Base       : None
                                                                   Interfaces : -- empty list --
                                                                   Mixins     : 0)   <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ClassStatement.ClassStatement.BaseInfo'>
                                                                                     Name       : Mixin2
                                                                                     Visibility : VisibilityModifier.private
                                                                   Name       : Class2
                                                                   Type       : ClassType.Class
                                                                   Visibility : VisibilityModifier.private
                                                      IterAfter  : [7, 1] (77)
                                                      IterBefore : [4, 1] (38)
                                                      Type       : Class Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [7, 1] (77)
                                    IterBefore : [4, 1] (38)
                                    Type       : 0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [7, 1] (77)
                  IterBefore : [4, 1] (38)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             2)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                          IsIgnored  : False
                                                                                          IterAfter  : [7, 6] (82)
                                                                                          IterBefore : [7, 1] (77)
                                                                                          Type       : 'class' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                          Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                       Match : <_sre.SRE_Match object; span=(77, 82), match='class'>
                                                                                          Whitespace : None
                                                                        IterAfter  : [7, 6] (82)
                                                                        IterBefore : [7, 1] (77)
                                                                        Type       : Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [7, 13] (89)
                                                                        IterBefore : [7, 7] (83)
                                                                        Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(83, 89), match='Class3'>
                                                                        Whitespace : 0)   82
                                                                                     1)   83
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [7, 14] (90)
                                                                        IterBefore : [7, 13] (89)
                                                                        Type       : '(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(89, 90), match='('>
                                                                        Whitespace : None
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [7, 15] (91)
                                                                        IterBefore : [7, 14] (90)
                                                                        Type       : ')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(90, 91), match=')'>
                                                                        Whitespace : None
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                              IsIgnored  : False
                                                                                                                              IterAfter  : [7, 20] (96)
                                                                                                                              IterBefore : [7, 16] (92)
                                                                                                                              Type       : 'uses' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                           Match : <_sre.SRE_Match object; span=(92, 96), match='uses'>
                                                                                                                              Whitespace : 0)   91
                                                                                                                                           1)   92
                                                                                                            IterAfter  : [7, 20] (96)
                                                                                                            IterBefore : [7, 16] (92)
                                                                                                            Type       : Or: ('implements', 'uses') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [7, 22] (98)
                                                                                                                                                IterBefore : [7, 21] (97)
                                                                                                                                                Type       : '(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(97, 98), match='('>
                                                                                                                                                Whitespace : 0)   96
                                                                                                                                                             1)   97
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                                                    IsIgnored  : False
                                                                                                                                                                                    IterAfter  : [8, 11] (109)
                                                                                                                                                                                    IterBefore : [8, 5] (103)
                                                                                                                                                                                    Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                                                    Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                                                                 Match : <_sre.SRE_Match object; span=(103, 109), match='Mixin3'>
                                                                                                                                                                                    Whitespace : None
                                                                                                                                                                  IterAfter  : [8, 11] (109)
                                                                                                                                                                  IterBefore : [8, 5] (103)
                                                                                                                                                                  Type       : Base Item <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                                                                             1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                                                    IsIgnored  : False
                                                                                                                                                                                    IterAfter  : [8, 12] (110)
                                                                                                                                                                                    IterBefore : [8, 11] (109)
                                                                                                                                                                                    Type       : Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                                                    Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                                                                 Match : <_sre.SRE_Match object; span=(109, 110), match=','>
                                                                                                                                                                                    Whitespace : None
                                                                                                                                                                  IterAfter  : [8, 12] (110)
                                                                                                                                                                  IterBefore : [8, 11] (109)
                                                                                                                                                                  Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                                                                IterAfter  : [8, 12] (110)
                                                                                                                                                IterBefore : [8, 5] (103)
                                                                                                                                                Type       : Base Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                                                           2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [9, 2] (112)
                                                                                                                                                IterBefore : [9, 1] (111)
                                                                                                                                                Type       : ')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(111, 112), match=')'>
                                                                                                                                                Whitespace : None
                                                                                                                              IterAfter  : [9, 2] (112)
                                                                                                                              IterBefore : [7, 21] (97)
                                                                                                                              Type       : Grouped <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [9, 2] (112)
                                                                                                            IterBefore : [7, 21] (97)
                                                                                                            Type       : Or: (Grouped, Base Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                          IterAfter  : [9, 2] (112)
                                                                                          IterBefore : [7, 16] (92)
                                                                                          Type       : Implements and Uses <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : [9, 2] (112)
                                                                        IterBefore : [7, 16] (92)
                                                                        Type       : Repeat: {Implements and Uses, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                   5)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [9, 3] (113)
                                                                        IterBefore : [9, 2] (112)
                                                                        Type       : ':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(112, 113), match=':'>
                                                                        Whitespace : None
                                                                   6)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [10, 1] (114)
                                                                        IterBefore : [9, 3] (113)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 114
                                                                                     Start : 113
                                                                        Whitespace : None
                                                                   7)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [10, 5] (118)
                                                                        IterBefore : [10, 1] (114)
                                                                        Type       : Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                                                                                     End   : 118
                                                                                     Start : 114
                                                                                     Value : 4
                                                                        Whitespace : None
                                                                   8)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [10, 9] (122)
                                                                                                                                                IterBefore : [10, 5] (118)
                                                                                                                                                Type       : 'pass' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(118, 122), match='pass'>
                                                                                                                                                Whitespace : None
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [12, 1] (124)
                                                                                                                                                IterBefore : [10, 9] (122)
                                                                                                                                                Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                                                             End   : 124
                                                                                                                                                             Start : 122
                                                                                                                                                Whitespace : None
                                                                                                                              IterAfter  : [12, 1] (124)
                                                                                                                              IterBefore : [10, 5] (118)
                                                                                                                              Type       : Pass Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [12, 1] (124)
                                                                                                            IterBefore : [10, 5] (118)
                                                                                                            Type       : 0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                          IterAfter  : [12, 1] (124)
                                                                                          IterBefore : [10, 5] (118)
                                                                                          Type       : Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                        IterAfter  : [12, 1] (124)
                                                                        IterBefore : [10, 5] (118)
                                                                        Type       : Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                   9)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [12, 1] (124)
                                                                        IterBefore : [12, 1] (124)
                                                                        Type       : Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                                                                                     -- empty dict --
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ClassStatement.ClassStatement.NodeInfo'>
                                                                   Base       : None
                                                                   Interfaces : -- empty list --
                                                                   Mixins     : 0)   <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ClassStatement.ClassStatement.BaseInfo'>
                                                                                     Name       : Mixin3
                                                                                     Visibility : VisibilityModifier.private
                                                                   Name       : Class3
                                                                   Type       : ClassType.Class
                                                                   Visibility : VisibilityModifier.private
                                                      IterAfter  : [12, 1] (124)
                                                      IterBefore : [7, 1] (77)
                                                      Type       : Class Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [12, 1] (124)
                                    IterBefore : [7, 1] (77)
                                    Type       : 0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [12, 1] (124)
                  IterBefore : [7, 1] (77)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
             3)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                          IsIgnored  : False
                                                                                          IterAfter  : [12, 6] (129)
                                                                                          IterBefore : [12, 1] (124)
                                                                                          Type       : 'class' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                          Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                       Match : <_sre.SRE_Match object; span=(124, 129), match='class'>
                                                                                          Whitespace : None
                                                                        IterAfter  : [12, 6] (129)
                                                                        IterBefore : [12, 1] (124)
                                                                        Type       : Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [12, 13] (136)
                                                                        IterBefore : [12, 7] (130)
                                                                        Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(130, 136), match='Class4'>
                                                                        Whitespace : 0)   129
                                                                                     1)   130
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [12, 14] (137)
                                                                        IterBefore : [12, 13] (136)
                                                                        Type       : '(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(136, 137), match='('>
                                                                        Whitespace : None
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [12, 15] (138)
                                                                        IterBefore : [12, 14] (137)
                                                                        Type       : ')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(137, 138), match=')'>
                                                                        Whitespace : None
                                                                   4)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                              IsIgnored  : False
                                                                                                                              IterAfter  : [12, 20] (143)
                                                                                                                              IterBefore : [12, 16] (139)
                                                                                                                              Type       : 'uses' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                           Match : <_sre.SRE_Match object; span=(139, 143), match='uses'>
                                                                                                                              Whitespace : 0)   138
                                                                                                                                           1)   139
                                                                                                            IterAfter  : [12, 20] (143)
                                                                                                            IterBefore : [12, 16] (139)
                                                                                                            Type       : Or: ('implements', 'uses') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                                       1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [12, 22] (145)
                                                                                                                                                IterBefore : [12, 21] (144)
                                                                                                                                                Type       : '(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(144, 145), match='('>
                                                                                                                                                Whitespace : 0)   143
                                                                                                                                                             1)   144
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                                                                      IsIgnored  : False
                                                                                                                                                                                                      IterAfter  : [13, 11] (156)
                                                                                                                                                                                                      IterBefore : [13, 5] (150)
                                                                                                                                                                                                      Type       : Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                                                                                   Match : <_sre.SRE_Match object; span=(150, 156), match='public'>
                                                                                                                                                                                                      Whitespace : None
                                                                                                                                                                                    IterAfter  : [13, 11] (156)
                                                                                                                                                                                    IterBefore : [13, 5] (150)
                                                                                                                                                                                    Type       : Repeat: {Visibility, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                                                                                               1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                                                    IsIgnored  : False
                                                                                                                                                                                    IterAfter  : [13, 18] (163)
                                                                                                                                                                                    IterBefore : [13, 12] (157)
                                                                                                                                                                                    Type       : <generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                                                    Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                                                                 Match : <_sre.SRE_Match object; span=(157, 163), match='Mixin4'>
                                                                                                                                                                                    Whitespace : 0)   156
                                                                                                                                                                                                 1)   157
                                                                                                                                                                  IterAfter  : [13, 18] (163)
                                                                                                                                                                  IterBefore : [13, 5] (150)
                                                                                                                                                                  Type       : Base Item <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                                                                             1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                                                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                                                    IsIgnored  : False
                                                                                                                                                                                    IterAfter  : [13, 19] (164)
                                                                                                                                                                                    IterBefore : [13, 18] (163)
                                                                                                                                                                                    Type       : Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                                                    Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                                                                 Match : <_sre.SRE_Match object; span=(163, 164), match=','>
                                                                                                                                                                                    Whitespace : None
                                                                                                                                                                  IterAfter  : [13, 19] (164)
                                                                                                                                                                  IterBefore : [13, 18] (163)
                                                                                                                                                                  Type       : Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                                                                                                IterAfter  : [13, 19] (164)
                                                                                                                                                IterBefore : [13, 5] (150)
                                                                                                                                                Type       : Base Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                                                           2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [14, 2] (166)
                                                                                                                                                IterBefore : [14, 1] (165)
                                                                                                                                                Type       : ')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(165, 166), match=')'>
                                                                                                                                                Whitespace : None
                                                                                                                              IterAfter  : [14, 2] (166)
                                                                                                                              IterBefore : [12, 21] (144)
                                                                                                                              Type       : Grouped <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [14, 2] (166)
                                                                                                            IterBefore : [12, 21] (144)
                                                                                                            Type       : Or: (Grouped, Base Items) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                          IterAfter  : [14, 2] (166)
                                                                                          IterBefore : [12, 16] (139)
                                                                                          Type       : Implements and Uses <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                        IterAfter  : [14, 2] (166)
                                                                        IterBefore : [12, 16] (139)
                                                                        Type       : Repeat: {Implements and Uses, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                   5)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [14, 3] (167)
                                                                        IterBefore : [14, 2] (166)
                                                                        Type       : ':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(166, 167), match=':'>
                                                                        Whitespace : None
                                                                   6)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [15, 1] (168)
                                                                        IterBefore : [14, 3] (167)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 168
                                                                                     Start : 167
                                                                        Whitespace : None
                                                                   7)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [15, 5] (172)
                                                                        IterBefore : [15, 1] (168)
                                                                        Type       : Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                                                                                     End   : 172
                                                                                     Start : 168
                                                                                     Value : 4
                                                                        Whitespace : None
                                                                   8)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                              Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [15, 9] (176)
                                                                                                                                                IterBefore : [15, 5] (172)
                                                                                                                                                Type       : 'pass' <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                                             Match : <_sre.SRE_Match object; span=(172, 176), match='pass'>
                                                                                                                                                Whitespace : None
                                                                                                                                           1)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                                IsIgnored  : False
                                                                                                                                                IterAfter  : [16, 1] (177)
                                                                                                                                                IterBefore : [15, 9] (176)
                                                                                                                                                Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                                                                                                Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                                                             End   : 177
                                                                                                                                                             Start : 176
                                                                                                                                                Whitespace : None
                                                                                                                              IterAfter  : [16, 1] (177)
                                                                                                                              IterBefore : [15, 5] (172)
                                                                                                                              Type       : Pass Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                                                                                            IterAfter  : [16, 1] (177)
                                                                                                            IterBefore : [15, 5] (172)
                                                                                                            Type       : 0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                                          IterAfter  : [16, 1] (177)
                                                                                          IterBefore : [15, 5] (172)
                                                                                          Type       : Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                        IterAfter  : [16, 1] (177)
                                                                        IterBefore : [15, 5] (172)
                                                                        Type       : Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>
                                                                   9)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [16, 1] (177)
                                                                        IterBefore : [16, 1] (177)
                                                                        Type       : Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                                                                                     -- empty dict --
                                                                        Whitespace : None
                                                      Info       : <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ClassStatement.ClassStatement.NodeInfo'>
                                                                   Base       : None
                                                                   Interfaces : -- empty list --
                                                                   Mixins     : 0)   <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.ClassStatement.ClassStatement.BaseInfo'>
                                                                                     Name       : Mixin4
                                                                                     Visibility : VisibilityModifier.public
                                                                   Name       : Class4
                                                                   Type       : ClassType.Class
                                                                   Visibility : VisibilityModifier.private
                                                      IterAfter  : [16, 1] (177)
                                                      IterBefore : [12, 1] (124)
                                                      Type       : Class Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [16, 1] (177)
                                    IterBefore : [12, 1] (124)
                                    Type       : 0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [16, 1] (177)
                  IterBefore : [12, 1] (124)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
IterAfter  : [16, 1] (177)
IterBefore : [1, 1] (0)
Type       : <None>
