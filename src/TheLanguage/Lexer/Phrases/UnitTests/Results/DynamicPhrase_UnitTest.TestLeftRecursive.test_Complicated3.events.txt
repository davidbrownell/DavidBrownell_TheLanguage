0) StartPhrase, "Dynamic Phrases"
1) StartPhrase, "Custom Display <Prefix>"
2) StartPhrase, "Lower"
3) EndPhrase, "Lower" [False]
4) StartPhrase, "Upper"
5) OnInternalPhraseAsync, 0, 4
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 1] (0)"
      IterEnd: "[1, 5] (4)"
      Token: "Upper"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(0, 4), match='TRUE'>"
      Whitespace: None
    Phrase: "Upper"
6) EndPhrase, "Upper" [True]
7) OnInternalPhraseAsync, 0, 4
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 1] (0)"
        IterEnd: "[1, 5] (4)"
        Token: "Upper"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(0, 4), match='TRUE'>"
        Whitespace: None
      Phrase: "Upper"
    Phrase: "Custom Display <Prefix>"
8) EndPhrase, "Custom Display <Prefix>" [True]
9) StartPhrase, "Custom Display <Suffix>"
10) StartPhrase, "'+'"
11) EndPhrase, "'+'" [False]
12) StartPhrase, "'-'"
13) EndPhrase, "'-'" [False]
14) StartPhrase, "'*'"
15) EndPhrase, "'*'" [False]
16) StartPhrase, "'/'"
17) EndPhrase, "'/'" [False]
18) StartPhrase, "'if'"
19) OnInternalPhraseAsync, 5, 7
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 6] (5)"
      IterEnd: "[1, 8] (7)"
      Token: "'if'"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(5, 7), match='if'>"
      Whitespace:
        - 4
        - 5
    Phrase: "'if'"
20) EndPhrase, "'if'" [True]
21) StartPhrase, "DynamicPhrasesType.Statements"
22) StartPhrase, "Phrases"
23) StartPhrase, "Lower"
24) OnInternalPhraseAsync, 8, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 9] (8)"
      IterEnd: "[1, 12] (11)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(8, 11), match='var'>"
      Whitespace:
        - 7
        - 8
    Phrase: "Lower"
25) EndPhrase, "Lower" [True]
26) StartPhrase, "Upper"
27) EndPhrase, "Upper" [False]
28) StartPhrase, "Dynamic Phrases"
29) StartPhrase, "Custom Display"
30) StartPhrase, "Lower"
31) OnInternalPhraseAsync, 8, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
      IsIgnored: False
      IterBegin: "[1, 9] (8)"
      IterEnd: "[1, 12] (11)"
      Token: "Lower"
      Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
        Match: "<_sre.SRE_Match object; span=(8, 11), match='var'>"
      Whitespace:
        - 7
        - 8
    Phrase: "Lower"
32) EndPhrase, "Lower" [True]
33) StartPhrase, "Upper"
34) EndPhrase, "Upper" [False]
35) OnInternalPhraseAsync, 7, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 9] (8)"
        IterEnd: "[1, 12] (11)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(8, 11), match='var'>"
        Whitespace:
          - 7
          - 8
      Phrase: "Lower"
    Phrase: "Custom Display"
36) EndPhrase, "Custom Display" [True]
37) OnInternalPhraseAsync, 7, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 9] (8)"
          IterEnd: "[1, 12] (11)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(8, 11), match='var'>"
          Whitespace:
            - 7
            - 8
        Phrase: "Lower"
      Phrase: "Custom Display"
    Phrase: "Dynamic Phrases"
38) EndPhrase, "Dynamic Phrases" [True]
39) OnInternalPhraseAsync, 7, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
        IsIgnored: False
        IterBegin: "[1, 9] (8)"
        IterEnd: "[1, 12] (11)"
        Token: "Lower"
        Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
          Match: "<_sre.SRE_Match object; span=(8, 11), match='var'>"
        Whitespace:
          - 7
          - 8
      Phrase: "Lower"
    Phrase: "Phrases"
40) EndPhrase, "Phrases" [True]
41) OnInternalPhraseAsync, 7, 11
    # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
    Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
      Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 9] (8)"
          IterEnd: "[1, 12] (11)"
          Token: "Lower"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(8, 11), match='var'>"
          Whitespace:
            - 7
            - 8
        Phrase: "Lower"
      Phrase: "Phrases"
    Phrase: "DynamicPhrasesType.Statements"
42) EndPhrase, "DynamicPhrasesType.Statements" [True]
43) StartPhrase, "'else'"
44) EndPhrase, "'else'" [False]
45) StartPhrase, "'['"
46) EndPhrase, "'['" [False]
47) EndPhrase, "Custom Display <Suffix>" [False]
48) EndPhrase, "Dynamic Phrases" [True]
