# <class 'v1.Lexer.Components.Phrase.Phrase.LexResult'>
data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
  data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
    data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
      data:
        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
          data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
            data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
              data:
                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                    data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                      data:
                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                            data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                              data:
                                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                    data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                      data:
                                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                            data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                              data:
                                                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                    data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                      data:
                                                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                            data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                              data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                                is_ignored: False
                                                                token: "Lower"
                                                                value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                                                  match: "<_sre.SRE_Match object; span=(0, 3), match='var'>"
                                                              phrase: "Lower"
                                                            phrase: "All Phrases"
                                                          phrase: "Dynamic Phrase"
                                                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                            is_ignored: False
                                                            token: "'['"
                                                            value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                                              match: "<_sre.SRE_Match object; span=(3, 4), match='['>"
                                                          phrase: "'['"
                                                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                            data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                              data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                                is_ignored: False
                                                                token: "Lower"
                                                                value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                                                  match: "<_sre.SRE_Match object; span=(4, 5), match='a'>"
                                                              phrase: "Lower"
                                                            phrase: "All Phrases"
                                                          phrase: "DynamicPhrasesType.Statements"
                                                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                            is_ignored: False
                                                            token: "']'"
                                                            value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                                              match: "<_sre.SRE_Match object; span=(5, 6), match=']'>"
                                                          phrase: "']'"
                                                      phrase: "Index"
                                                    phrase: "All Phrases"
                                                  phrase: "Dynamic Phrase"
                                                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                    is_ignored: False
                                                    token: "'['"
                                                    value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                                      match: "<_sre.SRE_Match object; span=(6, 7), match='['>"
                                                  phrase: "'['"
                                                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                    data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                      data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                        is_ignored: False
                                                        token: "Lower"
                                                        value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                                          match: "<_sre.SRE_Match object; span=(7, 8), match='b'>"
                                                      phrase: "Lower"
                                                    phrase: "All Phrases"
                                                  phrase: "DynamicPhrasesType.Statements"
                                                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                    is_ignored: False
                                                    token: "']'"
                                                    value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                                      match: "<_sre.SRE_Match object; span=(8, 9), match=']'>"
                                                  phrase: "']'"
                                              phrase: "Index"
                                            phrase: "All Phrases"
                                          phrase: "Dynamic Phrase"
                                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            is_ignored: False
                                            token: "'['"
                                            value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                              match: "<_sre.SRE_Match object; span=(9, 10), match='['>"
                                          phrase: "'['"
                                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                            data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                              data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                                is_ignored: False
                                                token: "Lower"
                                                value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                                  match: "<_sre.SRE_Match object; span=(10, 11), match='c'>"
                                              phrase: "Lower"
                                            phrase: "All Phrases"
                                          phrase: "DynamicPhrasesType.Statements"
                                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                            is_ignored: False
                                            token: "']'"
                                            value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                              match: "<_sre.SRE_Match object; span=(11, 12), match=']'>"
                                          phrase: "']'"
                                      phrase: "Index"
                                    phrase: "All Phrases"
                                  phrase: "Dynamic Phrase"
                                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    is_ignored: False
                                    token: "'['"
                                    value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                      match: "<_sre.SRE_Match object; span=(12, 13), match='['>"
                                  phrase: "'['"
                                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                    data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                      data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                        is_ignored: False
                                        token: "Lower"
                                        value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                          match: "<_sre.SRE_Match object; span=(13, 14), match='d'>"
                                      phrase: "Lower"
                                    phrase: "All Phrases"
                                  phrase: "DynamicPhrasesType.Statements"
                                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                    is_ignored: False
                                    token: "']'"
                                    value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                      match: "<_sre.SRE_Match object; span=(14, 15), match=']'>"
                                  phrase: "']'"
                              phrase: "Index"
                            phrase: "All Phrases"
                          phrase: "Dynamic Phrase"
                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                            is_ignored: False
                            token: "'['"
                            value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                              match: "<_sre.SRE_Match object; span=(15, 16), match='['>"
                          phrase: "'['"
                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                            data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                              data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                                is_ignored: False
                                token: "Lower"
                                value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                                  match: "<_sre.SRE_Match object; span=(16, 17), match='e'>"
                              phrase: "Lower"
                            phrase: "All Phrases"
                          phrase: "DynamicPhrasesType.Statements"
                        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                          data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                            is_ignored: False
                            token: "']'"
                            value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                              match: "<_sre.SRE_Match object; span=(17, 18), match=']'>"
                          phrase: "']'"
                      phrase: "Index"
                    phrase: "All Phrases"
                  phrase: "Dynamic Phrase"
                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    is_ignored: False
                    token: "'['"
                    value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                      match: "<_sre.SRE_Match object; span=(18, 19), match='['>"
                  phrase: "'['"
                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                    data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                      data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                        is_ignored: False
                        token: "Lower"
                        value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                          match: "<_sre.SRE_Match object; span=(19, 20), match='f'>"
                      phrase: "Lower"
                    phrase: "All Phrases"
                  phrase: "DynamicPhrasesType.Statements"
                - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
                  data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                    is_ignored: False
                    token: "']'"
                    value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                      match: "<_sre.SRE_Match object; span=(20, 21), match=']'>"
                  phrase: "']'"
              phrase: "Index"
            phrase: "All Phrases"
          phrase: "Dynamic Phrase"
        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
          data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
            is_ignored: False
            token: "'['"
            value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
              match: "<_sre.SRE_Match object; span=(21, 22), match='['>"
          phrase: "'['"
        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
          data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
            data: # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
              data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                is_ignored: False
                token: "Lower"
                value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
                  match: "<_sre.SRE_Match object; span=(22, 23), match='g'>"
              phrase: "Lower"
            phrase: "All Phrases"
          phrase: "DynamicPhrasesType.Statements"
        - # <class 'v1.Lexer.Components.Phrase.Phrase.LexResultData'>
          data: # <class 'v1.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
            is_ignored: False
            token: "']'"
            value: # <class 'v1.Lexer.Components.Tokens.RegexToken.MatchResult'>
              match: "<_sre.SRE_Match object; span=(23, 24), match=']'>"
          phrase: "']'"
      phrase: "Index"
    phrase: "All Phrases"
  phrase: "Dynamic Phrase"
iter_range: # <class 'v1.Lexer.Components.Phrase.Phrase.NormalizedIteratorRange'>
  begin: "[1, 1] (0)"
  end: "[1, 1] (0)"
success: True
