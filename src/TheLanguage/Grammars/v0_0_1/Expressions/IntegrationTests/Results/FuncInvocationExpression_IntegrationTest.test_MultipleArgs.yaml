# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 1] (0)"
                            IterEnd: "[1, 7] (6)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(0, 6), match='value1'>"
                            Whitespace: None
                        Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                            Name: "value1"
                          Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 7
                                Line: 1
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 7
                                Line: 1
                        IterBegin: "[1, 1] (0)"
                        IterEnd: "[1, 7] (6)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 7] (6)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 7] (6)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 8] (7)"
                IterEnd: "[1, 9] (8)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(7, 8), match='='>"
                Whitespace:
                  - 6
                  - 7
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 10] (9)"
                            IterEnd: "[1, 15] (14)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(9, 14), match='Func1'>"
                            Whitespace:
                              - 8
                              - 9
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 15] (14)"
                                IterEnd: "[1, 16] (15)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(14, 15), match='('>"
                                Whitespace: None
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[1, 16] (15)"
                                                                IterEnd: "[1, 17] (16)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(15, 16), match='a'>"
                                                                Whitespace: None
                                                            Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                Name: "a"
                                                              Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 16
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 17
                                                                    Line: 1
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 16
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 17
                                                                    Line: 1
                                                            IterBegin: "[1, 16] (15)"
                                                            IterEnd: "[1, 17] (16)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[1, 16] (15)"
                                                        IterEnd: "[1, 17] (16)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                        Name: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                          Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                            Name: "a"
                                                          Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 16
                                                                Line: 1
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 17
                                                                Line: 1
                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 16
                                                                Line: 1
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 17
                                                                Line: 1
                                                      Regions: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 16
                                                            Line: 1
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 1
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 16
                                                            Line: 1
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 1
                                                    IterBegin: "[1, 16] (15)"
                                                    IterEnd: "[1, 17] (16)"
                                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[1, 16] (15)"
                                                IterEnd: "[1, 17] (16)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[1, 16] (15)"
                                            IterEnd: "[1, 17] (16)"
                                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                        IterBegin: "[1, 16] (15)"
                                        IterEnd: "[1, 17] (16)"
                                        Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[1, 17] (16)"
                                                IterEnd: "[1, 18] (17)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(16, 17), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[1, 19] (18)"
                                                                        IterEnd: "[1, 20] (19)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(18, 19), match='b'>"
                                                                        Whitespace:
                                                                          - 17
                                                                          - 18
                                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "b"
                                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 19
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 20
                                                                            Line: 1
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 19
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 20
                                                                            Line: 1
                                                                    IterBegin: "[1, 19] (18)"
                                                                    IterEnd: "[1, 20] (19)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[1, 19] (18)"
                                                                IterEnd: "[1, 20] (19)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            Info: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                Name: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                  Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                    Name: "b"
                                                                  Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 19
                                                                        Line: 1
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 20
                                                                        Line: 1
                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 19
                                                                        Line: 1
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 20
                                                                        Line: 1
                                                              Regions: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 19
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 20
                                                                    Line: 1
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 19
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 20
                                                                    Line: 1
                                                            IterBegin: "[1, 19] (18)"
                                                            IterEnd: "[1, 20] (19)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[1, 19] (18)"
                                                        IterEnd: "[1, 20] (19)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[1, 19] (18)"
                                                    IterEnd: "[1, 20] (19)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[1, 19] (18)"
                                                IterEnd: "[1, 20] (19)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[1, 17] (16)"
                                            IterEnd: "[1, 20] (19)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[1, 20] (19)"
                                                IterEnd: "[1, 21] (20)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(19, 20), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[1, 22] (21)"
                                                                        IterEnd: "[1, 23] (22)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(21, 22), match='c'>"
                                                                        Whitespace:
                                                                          - 20
                                                                          - 21
                                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "c"
                                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 22
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 23
                                                                            Line: 1
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 22
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 23
                                                                            Line: 1
                                                                    IterBegin: "[1, 22] (21)"
                                                                    IterEnd: "[1, 23] (22)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[1, 22] (21)"
                                                                IterEnd: "[1, 23] (22)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            Info: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                Name: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                  Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                    Name: "c"
                                                                  Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 22
                                                                        Line: 1
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 23
                                                                        Line: 1
                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 22
                                                                        Line: 1
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 23
                                                                        Line: 1
                                                              Regions: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 22
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 23
                                                                    Line: 1
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 22
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 23
                                                                    Line: 1
                                                            IterBegin: "[1, 22] (21)"
                                                            IterEnd: "[1, 23] (22)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[1, 22] (21)"
                                                        IterEnd: "[1, 23] (22)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[1, 22] (21)"
                                                    IterEnd: "[1, 23] (22)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[1, 22] (21)"
                                                IterEnd: "[1, 23] (22)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[1, 20] (19)"
                                            IterEnd: "[1, 23] (22)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[1, 17] (16)"
                                        IterEnd: "[1, 23] (22)"
                                        Type: "Repeat: {Comma and Argument, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                    IterBegin: "[1, 16] (15)"
                                    IterEnd: "[1, 23] (22)"
                                    Type: "Argument Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[1, 16] (15)"
                                IterEnd: "[1, 23] (22)"
                                Type: "Repeat: {Argument Items, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 23] (22)"
                                IterEnd: "[1, 24] (23)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(22, 23), match=')'>"
                                Whitespace: None
                            IterBegin: "[1, 15] (14)"
                            IterEnd: "[1, 24] (23)"
                            Type: "Arguments <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[1, 10] (9)"
                        IterEnd: "[1, 24] (23)"
                        Type: "Func Invocation Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 10] (9)"
                    IterEnd: "[1, 24] (23)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 10] (9)"
                IterEnd: "[1, 24] (23)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 24] (23)"
                IterEnd: "[2, 1] (24)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 24
                  Start: 23
                Whitespace: None
            IterBegin: "[1, 1] (0)"
            IterEnd: "[2, 1] (24)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[2, 1] (24)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[2, 1] (24)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 1] (24)"
                            IterEnd: "[2, 7] (30)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(24, 30), match='value2'>"
                            Whitespace: None
                        Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                            Name: "value2"
                          Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 2
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 7
                                Line: 2
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 2
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 7
                                Line: 2
                        IterBegin: "[2, 1] (24)"
                        IterEnd: "[2, 7] (30)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[2, 1] (24)"
                    IterEnd: "[2, 7] (30)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 1] (24)"
                IterEnd: "[2, 7] (30)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 8] (31)"
                IterEnd: "[2, 9] (32)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(31, 32), match='='>"
                Whitespace:
                  - 30
                  - 31
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 10] (33)"
                            IterEnd: "[2, 15] (38)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(33, 38), match='Func2'>"
                            Whitespace:
                              - 32
                              - 33
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[2, 15] (38)"
                                IterEnd: "[2, 16] (39)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(38, 39), match='('>"
                                Whitespace: None
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[2, 16] (39)"
                                                                IterEnd: "[2, 17] (40)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(39, 40), match='e'>"
                                                                Whitespace: None
                                                            Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                Name: "e"
                                                              Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 16
                                                                    Line: 2
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 17
                                                                    Line: 2
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 16
                                                                    Line: 2
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 17
                                                                    Line: 2
                                                            IterBegin: "[2, 16] (39)"
                                                            IterEnd: "[2, 17] (40)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[2, 16] (39)"
                                                        IterEnd: "[2, 17] (40)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                        Name: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                          Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                            Name: "e"
                                                          Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 16
                                                                Line: 2
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 17
                                                                Line: 2
                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 16
                                                                Line: 2
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 17
                                                                Line: 2
                                                      Regions: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 16
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 2
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 16
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 2
                                                    IterBegin: "[2, 16] (39)"
                                                    IterEnd: "[2, 17] (40)"
                                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[2, 16] (39)"
                                                IterEnd: "[2, 17] (40)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[2, 16] (39)"
                                            IterEnd: "[2, 17] (40)"
                                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                        IterBegin: "[2, 16] (39)"
                                        IterEnd: "[2, 17] (40)"
                                        Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 17] (40)"
                                                IterEnd: "[2, 18] (41)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(40, 41), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[2, 19] (42)"
                                                                IterEnd: "[2, 28] (51)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(42, 51), match='InnerFunc'>"
                                                                Whitespace:
                                                                  - 41
                                                                  - 42
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                    IsIgnored: False
                                                                    IterBegin: "[2, 28] (51)"
                                                                    IterEnd: "[2, 29] (52)"
                                                                    Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                      Match: "<_sre.SRE_Match object; span=(51, 52), match='('>"
                                                                    Whitespace: None
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                            Children:
                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                Children:
                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                    IsIgnored: False
                                                                                                    IterBegin: "[2, 29] (52)"
                                                                                                    IterEnd: "[2, 30] (53)"
                                                                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                      Match: "<_sre.SRE_Match object; span=(52, 53), match='f'>"
                                                                                                    Whitespace: None
                                                                                                Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                                  Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                    Name: "f"
                                                                                                  Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 29
                                                                                                        Line: 2
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 30
                                                                                                        Line: 2
                                                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 29
                                                                                                        Line: 2
                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                        Column: 30
                                                                                                        Line: 2
                                                                                                IterBegin: "[2, 29] (52)"
                                                                                                IterEnd: "[2, 30] (53)"
                                                                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                            IterBegin: "[2, 29] (52)"
                                                                                            IterEnd: "[2, 30] (53)"
                                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                        Info: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                                                          Data: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                                            Name: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                              Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                Name: "f"
                                                                                              Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                    Column: 29
                                                                                                    Line: 2
                                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                    Column: 30
                                                                                                    Line: 2
                                                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                    Column: 29
                                                                                                    Line: 2
                                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                    Column: 30
                                                                                                    Line: 2
                                                                                          Regions: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 29
                                                                                                Line: 2
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 30
                                                                                                Line: 2
                                                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 29
                                                                                                Line: 2
                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                Column: 30
                                                                                                Line: 2
                                                                                        IterBegin: "[2, 29] (52)"
                                                                                        IterEnd: "[2, 30] (53)"
                                                                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                    IterBegin: "[2, 29] (52)"
                                                                                    IterEnd: "[2, 30] (53)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[2, 29] (52)"
                                                                                IterEnd: "[2, 30] (53)"
                                                                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                            IterBegin: "[2, 29] (52)"
                                                                            IterEnd: "[2, 30] (53)"
                                                                            Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                    IsIgnored: False
                                                                                    IterBegin: "[2, 30] (53)"
                                                                                    IterEnd: "[2, 31] (54)"
                                                                                    Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                      Match: "<_sre.SRE_Match object; span=(53, 54), match=','>"
                                                                                    Whitespace: None
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                            Children:
                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                Children:
                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                    Children:
                                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                        IsIgnored: False
                                                                                                        IterBegin: "[2, 32] (55)"
                                                                                                        IterEnd: "[2, 33] (56)"
                                                                                                        Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                          Match: "<_sre.SRE_Match object; span=(55, 56), match='('>"
                                                                                                        Whitespace:
                                                                                                          - 54
                                                                                                          - 55
                                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                        Children:
                                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children:
                                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                Children:
                                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                    Children:
                                                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                        Children:
                                                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                            IsIgnored: False
                                                                                                                            IterBegin: "[2, 33] (56)"
                                                                                                                            IterEnd: "[2, 34] (57)"
                                                                                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                              Match: "<_sre.SRE_Match object; span=(56, 57), match='g'>"
                                                                                                                            Whitespace: None
                                                                                                                        Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                                                          Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                                            Name: "g"
                                                                                                                          Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                Column: 33
                                                                                                                                Line: 2
                                                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                Column: 34
                                                                                                                                Line: 2
                                                                                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                Column: 33
                                                                                                                                Line: 2
                                                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                Column: 34
                                                                                                                                Line: 2
                                                                                                                        IterBegin: "[2, 33] (56)"
                                                                                                                        IterEnd: "[2, 34] (57)"
                                                                                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                                                    IterBegin: "[2, 33] (56)"
                                                                                                                    IterEnd: "[2, 34] (57)"
                                                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                                                Info: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                                                                                  Data: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                                                                    Name: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                                        Name: "g"
                                                                                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                            Column: 33
                                                                                                                            Line: 2
                                                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                            Column: 34
                                                                                                                            Line: 2
                                                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                            Column: 33
                                                                                                                            Line: 2
                                                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                            Column: 34
                                                                                                                            Line: 2
                                                                                                                  Regions: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                        Column: 33
                                                                                                                        Line: 2
                                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                        Column: 34
                                                                                                                        Line: 2
                                                                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                        Column: 33
                                                                                                                        Line: 2
                                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                        Column: 34
                                                                                                                        Line: 2
                                                                                                                IterBegin: "[2, 33] (56)"
                                                                                                                IterEnd: "[2, 34] (57)"
                                                                                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                                            IterBegin: "[2, 33] (56)"
                                                                                                            IterEnd: "[2, 34] (57)"
                                                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                                        IterBegin: "[2, 33] (56)"
                                                                                                        IterEnd: "[2, 34] (57)"
                                                                                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                        Children:
                                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                            Children:
                                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                IsIgnored: False
                                                                                                                IterBegin: "[2, 34] (57)"
                                                                                                                IterEnd: "[2, 35] (58)"
                                                                                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                  Match: "<_sre.SRE_Match object; span=(57, 58), match=','>"
                                                                                                                Whitespace: None
                                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                Children:
                                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                    Children:
                                                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                        Children:
                                                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                            Children:
                                                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                                                                Children:
                                                                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                                                    IsIgnored: False
                                                                                                                                    IterBegin: "[2, 36] (59)"
                                                                                                                                    IterEnd: "[2, 37] (60)"
                                                                                                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                                      Match: "<_sre.SRE_Match object; span=(59, 60), match='h'>"
                                                                                                                                    Whitespace:
                                                                                                                                      - 58
                                                                                                                                      - 59
                                                                                                                                Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                                                                  Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                                                    Name: "h"
                                                                                                                                  Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                        Column: 36
                                                                                                                                        Line: 2
                                                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                        Column: 37
                                                                                                                                        Line: 2
                                                                                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                        Column: 36
                                                                                                                                        Line: 2
                                                                                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                        Column: 37
                                                                                                                                        Line: 2
                                                                                                                                IterBegin: "[2, 36] (59)"
                                                                                                                                IterEnd: "[2, 37] (60)"
                                                                                                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                                                            IterBegin: "[2, 36] (59)"
                                                                                                                            IterEnd: "[2, 37] (60)"
                                                                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                                                        Info: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                                                                                          Data: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                                                                            Name: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                                                              Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                                                                Name: "h"
                                                                                                                              Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                    Column: 36
                                                                                                                                    Line: 2
                                                                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                    Column: 37
                                                                                                                                    Line: 2
                                                                                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                    Column: 36
                                                                                                                                    Line: 2
                                                                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                    Column: 37
                                                                                                                                    Line: 2
                                                                                                                          Regions: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                Column: 36
                                                                                                                                Line: 2
                                                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                Column: 37
                                                                                                                                Line: 2
                                                                                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                Column: 36
                                                                                                                                Line: 2
                                                                                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                                                                Column: 37
                                                                                                                                Line: 2
                                                                                                                        IterBegin: "[2, 36] (59)"
                                                                                                                        IterEnd: "[2, 37] (60)"
                                                                                                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                                                    IterBegin: "[2, 36] (59)"
                                                                                                                    IterEnd: "[2, 37] (60)"
                                                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                                                IterBegin: "[2, 36] (59)"
                                                                                                                IterEnd: "[2, 37] (60)"
                                                                                                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                                            IterBegin: "[2, 34] (57)"
                                                                                                            IterEnd: "[2, 37] (60)"
                                                                                                            Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                                        IterBegin: "[2, 34] (57)"
                                                                                                        IterEnd: "[2, 37] (60)"
                                                                                                        Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                        IsIgnored: False
                                                                                                        IterBegin: "[2, 37] (60)"
                                                                                                        IterEnd: "[2, 38] (61)"
                                                                                                        Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                          Match: "<_sre.SRE_Match object; span=(60, 61), match=')'>"
                                                                                                        Whitespace: None
                                                                                                    IterBegin: "[2, 32] (55)"
                                                                                                    IterEnd: "[2, 38] (61)"
                                                                                                    Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                                IterBegin: "[2, 32] (55)"
                                                                                                IterEnd: "[2, 38] (61)"
                                                                                                Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                            IterBegin: "[2, 32] (55)"
                                                                                            IterEnd: "[2, 38] (61)"
                                                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                        IterBegin: "[2, 32] (55)"
                                                                                        IterEnd: "[2, 38] (61)"
                                                                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                                    IterBegin: "[2, 32] (55)"
                                                                                    IterEnd: "[2, 38] (61)"
                                                                                    Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[2, 30] (53)"
                                                                                IterEnd: "[2, 38] (61)"
                                                                                Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                            IterBegin: "[2, 30] (53)"
                                                                            IterEnd: "[2, 38] (61)"
                                                                            Type: "Repeat: {Comma and Argument, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                        IterBegin: "[2, 29] (52)"
                                                                        IterEnd: "[2, 38] (61)"
                                                                        Type: "Argument Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[2, 29] (52)"
                                                                    IterEnd: "[2, 38] (61)"
                                                                    Type: "Repeat: {Argument Items, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                    IsIgnored: False
                                                                    IterBegin: "[2, 38] (61)"
                                                                    IterEnd: "[2, 39] (62)"
                                                                    Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                      Match: "<_sre.SRE_Match object; span=(61, 62), match=')'>"
                                                                    Whitespace: None
                                                                IterBegin: "[2, 28] (51)"
                                                                IterEnd: "[2, 39] (62)"
                                                                Type: "Arguments <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            IterBegin: "[2, 19] (42)"
                                                            IterEnd: "[2, 39] (62)"
                                                            Type: "Func Invocation Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[2, 19] (42)"
                                                        IterEnd: "[2, 39] (62)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[2, 19] (42)"
                                                    IterEnd: "[2, 39] (62)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[2, 19] (42)"
                                                IterEnd: "[2, 39] (62)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[2, 17] (40)"
                                            IterEnd: "[2, 39] (62)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 39] (62)"
                                                IterEnd: "[2, 40] (63)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(62, 63), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[2, 41] (64)"
                                                                        IterEnd: "[2, 42] (65)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(64, 65), match='i'>"
                                                                        Whitespace:
                                                                          - 63
                                                                          - 64
                                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "i"
                                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 41
                                                                            Line: 2
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 42
                                                                            Line: 2
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 41
                                                                            Line: 2
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 42
                                                                            Line: 2
                                                                    IterBegin: "[2, 41] (64)"
                                                                    IterEnd: "[2, 42] (65)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[2, 41] (64)"
                                                                IterEnd: "[2, 42] (65)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            Info: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                Name: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                  Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                    Name: "i"
                                                                  Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 41
                                                                        Line: 2
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 42
                                                                        Line: 2
                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 41
                                                                        Line: 2
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 42
                                                                        Line: 2
                                                              Regions: # <class 'TheLanguage.Lexer.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 41
                                                                    Line: 2
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 42
                                                                    Line: 2
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 41
                                                                    Line: 2
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 42
                                                                    Line: 2
                                                            IterBegin: "[2, 41] (64)"
                                                            IterEnd: "[2, 42] (65)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[2, 41] (64)"
                                                        IterEnd: "[2, 42] (65)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[2, 41] (64)"
                                                    IterEnd: "[2, 42] (65)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[2, 41] (64)"
                                                IterEnd: "[2, 42] (65)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[2, 39] (62)"
                                            IterEnd: "[2, 42] (65)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[2, 17] (40)"
                                        IterEnd: "[2, 42] (65)"
                                        Type: "Repeat: {Comma and Argument, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                    IterBegin: "[2, 16] (39)"
                                    IterEnd: "[2, 42] (65)"
                                    Type: "Argument Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[2, 16] (39)"
                                IterEnd: "[2, 42] (65)"
                                Type: "Repeat: {Argument Items, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[2, 42] (65)"
                                IterEnd: "[2, 43] (66)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(65, 66), match=')'>"
                                Whitespace: None
                            IterBegin: "[2, 15] (38)"
                            IterEnd: "[2, 43] (66)"
                            Type: "Arguments <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[2, 10] (33)"
                        IterEnd: "[2, 43] (66)"
                        Type: "Func Invocation Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[2, 10] (33)"
                    IterEnd: "[2, 43] (66)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 10] (33)"
                IterEnd: "[2, 43] (66)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 43] (66)"
                IterEnd: "[3, 1] (67)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 67
                  Start: 66
                Whitespace: None
            IterBegin: "[2, 1] (24)"
            IterEnd: "[3, 1] (67)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[2, 1] (24)"
        IterEnd: "[3, 1] (67)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 1] (24)"
    IterEnd: "[3, 1] (67)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[3, 1] (67)"
Type: "<None>"
