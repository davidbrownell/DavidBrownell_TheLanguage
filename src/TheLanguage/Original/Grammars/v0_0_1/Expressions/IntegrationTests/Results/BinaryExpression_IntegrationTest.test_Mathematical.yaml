# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Documentation: None
Regions__: # <class 'types.RootParserInfoRegions'>
  Documentation: None
  Self__: "[Ln 1, Col 1] -> [Ln 10, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "one"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
            Self__: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
          Self__: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
      Operator: "OperatorType.Add"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
        Operator: "[Ln 1, Col 12] -> [Ln 1, Col 13]"
        Right: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
        Self__: "[Ln 1, Col 8] -> [Ln 1, Col 17]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "two"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
            Self__: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
          Self__: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var1"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
        Self__: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 1, Col 8] -> [Ln 1, Col 17]"
      Modifier: None
      Name: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
      Self__: "[Ln 1, Col 1] -> [Ln 2, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "three"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
            Self__: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
          Self__: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
      Operator: "OperatorType.Subtract"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 2, Col 8] -> [Ln 2, Col 13]"
        Operator: "[Ln 2, Col 14] -> [Ln 2, Col 15]"
        Right: "[Ln 2, Col 16] -> [Ln 2, Col 20]"
        Self__: "[Ln 2, Col 8] -> [Ln 2, Col 20]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "four"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 2, Col 16] -> [Ln 2, Col 20]"
            Self__: "[Ln 2, Col 16] -> [Ln 2, Col 20]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 2, Col 16] -> [Ln 2, Col 20]"
          Self__: "[Ln 2, Col 16] -> [Ln 2, Col 20]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var2"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 2, Col 1] -> [Ln 2, Col 5]"
        Self__: "[Ln 2, Col 1] -> [Ln 2, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 2, Col 8] -> [Ln 2, Col 20]"
      Modifier: None
      Name: "[Ln 2, Col 1] -> [Ln 2, Col 5]"
      Self__: "[Ln 2, Col 1] -> [Ln 3, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "five"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
            Self__: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
          Self__: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
      Operator: "OperatorType.Multiply"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 3, Col 8] -> [Ln 3, Col 12]"
        Operator: "[Ln 3, Col 13] -> [Ln 3, Col 14]"
        Right: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
        Self__: "[Ln 3, Col 8] -> [Ln 3, Col 18]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "six"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
            Self__: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
          Self__: "[Ln 3, Col 15] -> [Ln 3, Col 18]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var3"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 3, Col 1] -> [Ln 3, Col 5]"
        Self__: "[Ln 3, Col 1] -> [Ln 3, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 3, Col 8] -> [Ln 3, Col 18]"
      Modifier: None
      Name: "[Ln 3, Col 1] -> [Ln 3, Col 5]"
      Self__: "[Ln 3, Col 1] -> [Ln 4, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "seven"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
            Self__: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
          Self__: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
      Operator: "OperatorType.Power"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 4, Col 8] -> [Ln 4, Col 13]"
        Operator: "[Ln 4, Col 14] -> [Ln 4, Col 16]"
        Right: "[Ln 4, Col 17] -> [Ln 4, Col 22]"
        Self__: "[Ln 4, Col 8] -> [Ln 4, Col 22]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "eight"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 4, Col 17] -> [Ln 4, Col 22]"
            Self__: "[Ln 4, Col 17] -> [Ln 4, Col 22]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 4, Col 17] -> [Ln 4, Col 22]"
          Self__: "[Ln 4, Col 17] -> [Ln 4, Col 22]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var4"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 4, Col 1] -> [Ln 4, Col 5]"
        Self__: "[Ln 4, Col 1] -> [Ln 4, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 4, Col 8] -> [Ln 4, Col 22]"
      Modifier: None
      Name: "[Ln 4, Col 1] -> [Ln 4, Col 5]"
      Self__: "[Ln 4, Col 1] -> [Ln 5, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "nine"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
            Self__: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
          Self__: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
      Operator: "OperatorType.Divide"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 5, Col 8] -> [Ln 5, Col 12]"
        Operator: "[Ln 5, Col 13] -> [Ln 5, Col 14]"
        Right: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
        Self__: "[Ln 5, Col 8] -> [Ln 5, Col 18]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "ten"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
            Self__: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
          Self__: "[Ln 5, Col 15] -> [Ln 5, Col 18]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var5"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 5, Col 1] -> [Ln 5, Col 5]"
        Self__: "[Ln 5, Col 1] -> [Ln 5, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 5, Col 8] -> [Ln 5, Col 18]"
      Modifier: None
      Name: "[Ln 5, Col 1] -> [Ln 5, Col 5]"
      Self__: "[Ln 5, Col 1] -> [Ln 6, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "eleven"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 6, Col 8] -> [Ln 6, Col 14]"
            Self__: "[Ln 6, Col 8] -> [Ln 6, Col 14]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 6, Col 8] -> [Ln 6, Col 14]"
          Self__: "[Ln 6, Col 8] -> [Ln 6, Col 14]"
      Operator: "OperatorType.DivideFloor"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 6, Col 8] -> [Ln 6, Col 14]"
        Operator: "[Ln 6, Col 15] -> [Ln 6, Col 17]"
        Right: "[Ln 6, Col 18] -> [Ln 6, Col 24]"
        Self__: "[Ln 6, Col 8] -> [Ln 6, Col 24]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "twelve"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 6, Col 18] -> [Ln 6, Col 24]"
            Self__: "[Ln 6, Col 18] -> [Ln 6, Col 24]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 6, Col 18] -> [Ln 6, Col 24]"
          Self__: "[Ln 6, Col 18] -> [Ln 6, Col 24]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var6"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 6, Col 1] -> [Ln 6, Col 5]"
        Self__: "[Ln 6, Col 1] -> [Ln 6, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 6, Col 8] -> [Ln 6, Col 24]"
      Modifier: None
      Name: "[Ln 6, Col 1] -> [Ln 6, Col 5]"
      Self__: "[Ln 6, Col 1] -> [Ln 7, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "thirteen"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 7, Col 8] -> [Ln 7, Col 16]"
            Self__: "[Ln 7, Col 8] -> [Ln 7, Col 16]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 7, Col 8] -> [Ln 7, Col 16]"
          Self__: "[Ln 7, Col 8] -> [Ln 7, Col 16]"
      Operator: "OperatorType.Modulo"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 7, Col 8] -> [Ln 7, Col 16]"
        Operator: "[Ln 7, Col 17] -> [Ln 7, Col 18]"
        Right: "[Ln 7, Col 19] -> [Ln 7, Col 27]"
        Self__: "[Ln 7, Col 8] -> [Ln 7, Col 27]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "fourteen"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 7, Col 19] -> [Ln 7, Col 27]"
            Self__: "[Ln 7, Col 19] -> [Ln 7, Col 27]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 7, Col 19] -> [Ln 7, Col 27]"
          Self__: "[Ln 7, Col 19] -> [Ln 7, Col 27]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var7"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 7, Col 1] -> [Ln 7, Col 5]"
        Self__: "[Ln 7, Col 1] -> [Ln 7, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 7, Col 8] -> [Ln 7, Col 27]"
      Modifier: None
      Name: "[Ln 7, Col 1] -> [Ln 7, Col 5]"
      Self__: "[Ln 7, Col 1] -> [Ln 9, Col 1]"
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
        Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
          Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
            Name: "one"
            Regions__: # <class 'types.VariableNameParserInfoRegions'>
              Name: "[Ln 9, Col 9] -> [Ln 9, Col 12]"
              Self__: "[Ln 9, Col 9] -> [Ln 9, Col 12]"
          Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
            Name: "[Ln 9, Col 9] -> [Ln 9, Col 12]"
            Self__: "[Ln 9, Col 9] -> [Ln 9, Col 12]"
        Operator: "OperatorType.Add"
        Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
          Left: "[Ln 9, Col 9] -> [Ln 9, Col 12]"
          Operator: "[Ln 9, Col 13] -> [Ln 9, Col 14]"
          Right: "[Ln 9, Col 15] -> [Ln 9, Col 18]"
          Self__: "[Ln 9, Col 9] -> [Ln 9, Col 18]"
        Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
          Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
            Name: "two"
            Regions__: # <class 'types.VariableNameParserInfoRegions'>
              Name: "[Ln 9, Col 15] -> [Ln 9, Col 18]"
              Self__: "[Ln 9, Col 15] -> [Ln 9, Col 18]"
          Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
            Name: "[Ln 9, Col 15] -> [Ln 9, Col 18]"
            Self__: "[Ln 9, Col 15] -> [Ln 9, Col 18]"
      Operator: "OperatorType.Subtract"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 9, Col 9] -> [Ln 9, Col 18]"
        Operator: "[Ln 9, Col 19] -> [Ln 9, Col 20]"
        Right: "[Ln 9, Col 21] -> [Ln 9, Col 26]"
        Self__: "[Ln 9, Col 9] -> [Ln 9, Col 26]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "three"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 9, Col 21] -> [Ln 9, Col 26]"
            Self__: "[Ln 9, Col 21] -> [Ln 9, Col 26]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 9, Col 21] -> [Ln 9, Col 26]"
          Self__: "[Ln 9, Col 21] -> [Ln 9, Col 26]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var10"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 9, Col 1] -> [Ln 9, Col 6]"
        Self__: "[Ln 9, Col 1] -> [Ln 9, Col 6]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 9, Col 9] -> [Ln 9, Col 26]"
      Modifier: None
      Name: "[Ln 9, Col 1] -> [Ln 9, Col 6]"
      Self__: "[Ln 9, Col 1] -> [Ln 10, Col 1]"
