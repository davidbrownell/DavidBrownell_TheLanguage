# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Regions__: # <class 'types.RootParserInfoRegions'>
  Self__: "[Ln 1, Col 1] -> [Ln 7, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.MatchValueExpressionParserInfo.MatchValueExpressionParserInfo'>
      CasePhrases:
        - # <class 'Original.Parser.Expressions.MatchValueExpressionParserInfo.MatchValueExpressionClauseParserInfo'>
          Cases:
            - # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "three"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 3, Col 14] -> [Ln 3, Col 19]"
                  Self__: "[Ln 3, Col 14] -> [Ln 3, Col 19]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 3, Col 14] -> [Ln 3, Col 19]"
                Self__: "[Ln 3, Col 14] -> [Ln 3, Col 19]"
          Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "expected1"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 3, Col 21] -> [Ln 3, Col 30]"
                Self__: "[Ln 3, Col 21] -> [Ln 3, Col 30]"
            Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
              Name: "[Ln 3, Col 21] -> [Ln 3, Col 30]"
              Self__: "[Ln 3, Col 21] -> [Ln 3, Col 30]"
          Regions__: # <class 'types.MatchValueExpressionClauseParserInfoRegions'>
            Cases: "[Ln 3, Col 14] -> [Ln 3, Col 19]"
            Expression: "[Ln 3, Col 21] -> [Ln 4, Col 1]"
            Self__: "[Ln 3, Col 9] -> [Ln 4, Col 1]"
        - # <class 'Original.Parser.Expressions.MatchValueExpressionParserInfo.MatchValueExpressionClauseParserInfo'>
          Cases:
            - # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "four"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 4, Col 14] -> [Ln 4, Col 18]"
                  Self__: "[Ln 4, Col 14] -> [Ln 4, Col 18]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 4, Col 14] -> [Ln 4, Col 18]"
                Self__: "[Ln 4, Col 14] -> [Ln 4, Col 18]"
          Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "unexpected1"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 5, Col 13] -> [Ln 5, Col 24]"
                Self__: "[Ln 5, Col 13] -> [Ln 5, Col 24]"
            Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
              Name: "[Ln 5, Col 13] -> [Ln 5, Col 24]"
              Self__: "[Ln 5, Col 13] -> [Ln 5, Col 24]"
          Regions__: # <class 'types.MatchValueExpressionClauseParserInfoRegions'>
            Cases: "[Ln 4, Col 14] -> [Ln 4, Col 18]"
            Expression: "[Ln 4, Col 19] -> [Ln 6, Col 1]"
            Self__: "[Ln 4, Col 9] -> [Ln 6, Col 1]"
      Default: None
      Expression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
        Arguments:
          - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "one"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 2, Col 22] -> [Ln 2, Col 25]"
                  Self__: "[Ln 2, Col 22] -> [Ln 2, Col 25]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 2, Col 22] -> [Ln 2, Col 25]"
                Self__: "[Ln 2, Col 22] -> [Ln 2, Col 25]"
            Keyword: None
            Regions__: # <class 'types.ArgumentParserInfoRegions'>
              Expression: "[Ln 2, Col 22] -> [Ln 2, Col 25]"
              Keyword: None
              Self__: "[Ln 2, Col 22] -> [Ln 2, Col 25]"
          - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "two"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 2, Col 27] -> [Ln 2, Col 30]"
                  Self__: "[Ln 2, Col 27] -> [Ln 2, Col 30]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 2, Col 27] -> [Ln 2, Col 30]"
                Self__: "[Ln 2, Col 27] -> [Ln 2, Col 30]"
            Keyword: None
            Regions__: # <class 'types.ArgumentParserInfoRegions'>
              Expression: "[Ln 2, Col 27] -> [Ln 2, Col 30]"
              Keyword: None
              Self__: "[Ln 2, Col 27] -> [Ln 2, Col 30]"
        Expression: # <class 'Original.Parser.Expressions.FuncNameExpressionParserInfo.FuncNameExpressionParserInfo'>
          Name: "Add1"
          Regions__: # <class 'types.FuncNameExpressionParserInfoRegions'>
            Name: "[Ln 2, Col 17] -> [Ln 2, Col 21]"
            Self__: "[Ln 2, Col 17] -> [Ln 2, Col 21]"
        Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
          Arguments: "[Ln 2, Col 21] -> [Ln 2, Col 31]"
          Expression: "[Ln 2, Col 17] -> [Ln 2, Col 21]"
          Self__: "[Ln 2, Col 17] -> [Ln 2, Col 31]"
      Regions__: # <class 'types.MatchValueExpressionParserInfoRegions'>
        CasePhrases: "[Ln 3, Col 9] -> [Ln 6, Col 1]"
        Default: None
        Expression: "[Ln 2, Col 17] -> [Ln 2, Col 31]"
        Self__: "[Ln 1, Col 10] -> [Ln 6, Col 2]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "value1"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 1, Col 1] -> [Ln 1, Col 7]"
        Self__: "[Ln 1, Col 1] -> [Ln 1, Col 7]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 1, Col 10] -> [Ln 6, Col 2]"
      Modifier: None
      Name: "[Ln 1, Col 1] -> [Ln 1, Col 7]"
      Self__: "[Ln 1, Col 1] -> [Ln 7, Col 1]"
