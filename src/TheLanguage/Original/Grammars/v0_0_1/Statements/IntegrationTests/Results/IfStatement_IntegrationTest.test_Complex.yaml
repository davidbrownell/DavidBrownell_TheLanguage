# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Regions__: # <class 'types.RootParserInfoRegions'>
  Self__: "[Ln 1, Col 1] -> [Ln 23, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementParserInfo'>
    Clauses:
      - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementClauseParserInfo'>
        Condition: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
          Left: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
            Arguments: False
            Expression: # <class 'Original.Parser.Expressions.FuncNameExpressionParserInfo.FuncNameExpressionParserInfo'>
              Name: "Condition1"
              Regions__: # <class 'types.FuncNameExpressionParserInfoRegions'>
                Name: "[Ln 1, Col 4] -> [Ln 1, Col 14]"
                Self__: "[Ln 1, Col 4] -> [Ln 1, Col 14]"
            Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
              Arguments: "[Ln 1, Col 14] -> [Ln 1, Col 16]"
              Expression: "[Ln 1, Col 4] -> [Ln 1, Col 14]"
              Self__: "[Ln 1, Col 4] -> [Ln 1, Col 16]"
          Operator: "OperatorType.LogicalAnd"
          Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
            Left: "[Ln 1, Col 4] -> [Ln 1, Col 16]"
            Operator: "[Ln 1, Col 17] -> [Ln 1, Col 20]"
            Right: "[Ln 1, Col 21] -> [Ln 1, Col 33]"
            Self__: "[Ln 1, Col 4] -> [Ln 1, Col 33]"
          Right: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
            Arguments: False
            Expression: # <class 'Original.Parser.Expressions.FuncNameExpressionParserInfo.FuncNameExpressionParserInfo'>
              Name: "Condition2"
              Regions__: # <class 'types.FuncNameExpressionParserInfoRegions'>
                Name: "[Ln 1, Col 21] -> [Ln 1, Col 31]"
                Self__: "[Ln 1, Col 21] -> [Ln 1, Col 31]"
            Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
              Arguments: "[Ln 1, Col 31] -> [Ln 1, Col 33]"
              Expression: "[Ln 1, Col 21] -> [Ln 1, Col 31]"
              Self__: "[Ln 1, Col 21] -> [Ln 1, Col 33]"
        Regions__: # <class 'types.IfStatementClauseParserInfoRegions'>
          Condition: "[Ln 1, Col 4] -> [Ln 1, Col 33]"
          Self__: "[Ln 1, Col 1] -> [Ln 23, Col 1]"
          Statements: "[Ln 1, Col 33] -> [Ln 7, Col 1]"
        Statements:
          - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "one_a"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 2, Col 15] -> [Ln 2, Col 20]"
                  Self__: "[Ln 2, Col 15] -> [Ln 2, Col 20]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 2, Col 15] -> [Ln 2, Col 20]"
                Self__: "[Ln 2, Col 15] -> [Ln 2, Col 20]"
            Modifier: None
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "value1a"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 2, Col 5] -> [Ln 2, Col 12]"
                Self__: "[Ln 2, Col 5] -> [Ln 2, Col 12]"
            Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
              Expression: "[Ln 2, Col 15] -> [Ln 2, Col 20]"
              Modifier: None
              Name: "[Ln 2, Col 5] -> [Ln 2, Col 12]"
              Self__: "[Ln 2, Col 5] -> [Ln 4, Col 1]"
          - # <class 'Original.Parser.Statements.NoopStatementParserInfo.NoopStatementParserInfo'>
            Regions__: # <class 'types.NoopStatementParserInfoRegions'>
              Self__: "[Ln 5, Col 5] -> [Ln 7, Col 1]"
      - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementClauseParserInfo'>
        Condition: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
          Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
            Name: "cond3"
            Regions__: # <class 'types.VariableNameParserInfoRegions'>
              Name: "[Ln 7, Col 6] -> [Ln 7, Col 11]"
              Self__: "[Ln 7, Col 6] -> [Ln 7, Col 11]"
          Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
            Name: "[Ln 7, Col 6] -> [Ln 7, Col 11]"
            Self__: "[Ln 7, Col 6] -> [Ln 7, Col 11]"
        Regions__: # <class 'types.IfStatementClauseParserInfoRegions'>
          Condition: "[Ln 7, Col 6] -> [Ln 7, Col 11]"
          Self__: "[Ln 7, Col 1] -> [Ln 18, Col 1]"
          Statements: "[Ln 7, Col 11] -> [Ln 18, Col 1]"
        Statements:
          - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "two_a"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 8, Col 15] -> [Ln 8, Col 20]"
                  Self__: "[Ln 8, Col 15] -> [Ln 8, Col 20]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 8, Col 15] -> [Ln 8, Col 20]"
                Self__: "[Ln 8, Col 15] -> [Ln 8, Col 20]"
            Modifier: None
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "value2a"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 8, Col 5] -> [Ln 8, Col 12]"
                Self__: "[Ln 8, Col 5] -> [Ln 8, Col 12]"
            Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
              Expression: "[Ln 8, Col 15] -> [Ln 8, Col 20]"
              Modifier: None
              Name: "[Ln 8, Col 5] -> [Ln 8, Col 12]"
              Self__: "[Ln 8, Col 5] -> [Ln 9, Col 1]"
          - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "two_b"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 9, Col 15] -> [Ln 9, Col 20]"
                  Self__: "[Ln 9, Col 15] -> [Ln 9, Col 20]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 9, Col 15] -> [Ln 9, Col 20]"
                Self__: "[Ln 9, Col 15] -> [Ln 9, Col 20]"
            Modifier: None
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "value2b"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 9, Col 5] -> [Ln 9, Col 12]"
                Self__: "[Ln 9, Col 5] -> [Ln 9, Col 12]"
            Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
              Expression: "[Ln 9, Col 15] -> [Ln 9, Col 20]"
              Modifier: None
              Name: "[Ln 9, Col 5] -> [Ln 9, Col 12]"
              Self__: "[Ln 9, Col 5] -> [Ln 11, Col 1]"
          - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementParserInfo'>
            Clauses:
              - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementClauseParserInfo'>
                Condition: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
                  Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                    Name: "nested_cond1"
                    Regions__: # <class 'types.VariableNameParserInfoRegions'>
                      Name: "[Ln 11, Col 8] -> [Ln 11, Col 20]"
                      Self__: "[Ln 11, Col 8] -> [Ln 11, Col 20]"
                  Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                    Name: "[Ln 11, Col 8] -> [Ln 11, Col 20]"
                    Self__: "[Ln 11, Col 8] -> [Ln 11, Col 20]"
                Regions__: # <class 'types.IfStatementClauseParserInfoRegions'>
                  Condition: "[Ln 11, Col 8] -> [Ln 11, Col 20]"
                  Self__: "[Ln 11, Col 5] -> [Ln 16, Col 5]"
                  Statements: "[Ln 11, Col 20] -> [Ln 13, Col 5]"
                Statements:
                  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
                    Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
                      Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                        Name: "two_c"
                        Regions__: # <class 'types.VariableNameParserInfoRegions'>
                          Name: "[Ln 12, Col 19] -> [Ln 12, Col 24]"
                          Self__: "[Ln 12, Col 19] -> [Ln 12, Col 24]"
                      Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                        Name: "[Ln 12, Col 19] -> [Ln 12, Col 24]"
                        Self__: "[Ln 12, Col 19] -> [Ln 12, Col 24]"
                    Modifier: None
                    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                      Name: "value2c"
                      Regions__: # <class 'types.VariableNameParserInfoRegions'>
                        Name: "[Ln 12, Col 9] -> [Ln 12, Col 16]"
                        Self__: "[Ln 12, Col 9] -> [Ln 12, Col 16]"
                    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
                      Expression: "[Ln 12, Col 19] -> [Ln 12, Col 24]"
                      Modifier: None
                      Name: "[Ln 12, Col 9] -> [Ln 12, Col 16]"
                      Self__: "[Ln 12, Col 9] -> [Ln 13, Col 1]"
            ElseStatements:
              - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
                Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
                  Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                    Name: "two_d"
                    Regions__: # <class 'types.VariableNameParserInfoRegions'>
                      Name: "[Ln 14, Col 19] -> [Ln 14, Col 24]"
                      Self__: "[Ln 14, Col 19] -> [Ln 14, Col 24]"
                  Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                    Name: "[Ln 14, Col 19] -> [Ln 14, Col 24]"
                    Self__: "[Ln 14, Col 19] -> [Ln 14, Col 24]"
                Modifier: None
                Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                  Name: "value2d"
                  Regions__: # <class 'types.VariableNameParserInfoRegions'>
                    Name: "[Ln 14, Col 9] -> [Ln 14, Col 16]"
                    Self__: "[Ln 14, Col 9] -> [Ln 14, Col 16]"
                Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
                  Expression: "[Ln 14, Col 19] -> [Ln 14, Col 24]"
                  Modifier: None
                  Name: "[Ln 14, Col 9] -> [Ln 14, Col 16]"
                  Self__: "[Ln 14, Col 9] -> [Ln 16, Col 1]"
            Regions__: # <class 'types.IfStatementParserInfoRegions'>
              ElseStatements: "[Ln 13, Col 5] -> [Ln 16, Col 5]"
              Self__: "[Ln 11, Col 5] -> [Ln 16, Col 5]"
          - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "two_e"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 16, Col 15] -> [Ln 16, Col 20]"
                  Self__: "[Ln 16, Col 15] -> [Ln 16, Col 20]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 16, Col 15] -> [Ln 16, Col 20]"
                Self__: "[Ln 16, Col 15] -> [Ln 16, Col 20]"
            Modifier: None
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "value2e"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 16, Col 5] -> [Ln 16, Col 12]"
                Self__: "[Ln 16, Col 5] -> [Ln 16, Col 12]"
            Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
              Expression: "[Ln 16, Col 15] -> [Ln 16, Col 20]"
              Modifier: None
              Name: "[Ln 16, Col 5] -> [Ln 16, Col 12]"
              Self__: "[Ln 16, Col 5] -> [Ln 18, Col 1]"
      - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementClauseParserInfo'>
        Condition: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
          Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
            Name: "cond4"
            Regions__: # <class 'types.VariableNameParserInfoRegions'>
              Name: "[Ln 18, Col 6] -> [Ln 18, Col 11]"
              Self__: "[Ln 18, Col 6] -> [Ln 18, Col 11]"
          Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
            Name: "[Ln 18, Col 6] -> [Ln 18, Col 11]"
            Self__: "[Ln 18, Col 6] -> [Ln 18, Col 11]"
        Regions__: # <class 'types.IfStatementClauseParserInfoRegions'>
          Condition: "[Ln 18, Col 6] -> [Ln 18, Col 11]"
          Self__: "[Ln 18, Col 1] -> [Ln 21, Col 1]"
          Statements: "[Ln 18, Col 11] -> [Ln 21, Col 1]"
        Statements:
          - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "three_a"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 19, Col 15] -> [Ln 19, Col 22]"
                  Self__: "[Ln 19, Col 15] -> [Ln 19, Col 22]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 19, Col 15] -> [Ln 19, Col 22]"
                Self__: "[Ln 19, Col 15] -> [Ln 19, Col 22]"
            Modifier: None
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "value3a"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 19, Col 5] -> [Ln 19, Col 12]"
                Self__: "[Ln 19, Col 5] -> [Ln 19, Col 12]"
            Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
              Expression: "[Ln 19, Col 15] -> [Ln 19, Col 22]"
              Modifier: None
              Name: "[Ln 19, Col 5] -> [Ln 19, Col 12]"
              Self__: "[Ln 19, Col 5] -> [Ln 21, Col 1]"
    ElseStatements:
      - # <class 'Original.Parser.Statements.NoopStatementParserInfo.NoopStatementParserInfo'>
        Regions__: # <class 'types.NoopStatementParserInfoRegions'>
          Self__: "[Ln 22, Col 5] -> [Ln 23, Col 1]"
    Regions__: # <class 'types.IfStatementParserInfoRegions'>
      ElseStatements: "[Ln 21, Col 1] -> [Ln 23, Col 1]"
      Self__: "[Ln 1, Col 1] -> [Ln 23, Col 1]"
