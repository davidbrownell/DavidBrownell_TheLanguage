# ----------------------------------------------------------------------
# |
# |  MutableInt.TheLanguage
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2022-04-19 11:14:42
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2022
# |  Distributed under the Boost Software License, Version 1.0. See
# |  accompanying file LICENSE_1_0.txt or copy at
# |  http://www.boost.org/LICENSE_1_0.txt.
# |
# ----------------------------------------------------------------------
from .Int import Int

# TODO: Use perfect forwarding

# ----------------------------------------------------------------------
public mutable concept MutableInt {
    (Int | None) min_value! = None,
    (Int | None) max_value! = None,
}
    extends Int { min_value!, max_value! }
:
    public None __Serialize?__<TEMPLATE ArchiveT TEMPLATE>(ArchiveT ref archive) var
    public None __Accept?__<TEMPLATE VisitorT TEMPLATE>(VisitorT ref visitor) var

    public None __BitFlipInplace?__() var

    public None __DivideFloorInplace?__(Int immutable divisor) var
    public None __ModuloInplace?__(Int immutable divisor) var
    public None __MultiplyInplace?__(Int immutable multiplier) var
    public None __PowerInplace?__(Int immutable exponent) var

    public None __AddInplace?__(Int immutable value) var
    public None __SubtractInplace?__(Int immutable value) var

    public None __BitShiftLeftInplace?__(Int immutable places) var
    public None __BitShiftRightInplace?__(Int immutable places) var

    public None __BitAndInplace?__(Int immutable value) var
    public None __BitXOrInplace?__(Int immutable value) var
    public None __BitOrInplace?__(Int immutable value) var
