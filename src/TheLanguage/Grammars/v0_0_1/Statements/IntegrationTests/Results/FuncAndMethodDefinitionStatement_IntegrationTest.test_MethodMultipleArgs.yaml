# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 6] (5)"
                    Type: "'class' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(0, 5), match='class'>"
                    Whitespace: None
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 6] (5)"
                Type: "Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 7] (6)"
                IterEnd: "[1, 10] (9)"
                Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(6, 9), match='Foo'>"
                Whitespace:
                  - 5
                  - 6
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 10] (9)"
                IterEnd: "[1, 11] (10)"
                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(9, 10), match='('>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 11] (10)"
                IterEnd: "[1, 12] (11)"
                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(10, 11), match=')'>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 12] (11)"
                    IterEnd: "[1, 13] (12)"
                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(11, 12), match=':'>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 13] (12)"
                            IterEnd: "[2, 1] (13)"
                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                              End: 13
                              Start: 12
                            Whitespace: None
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 1] (13)"
                            IterEnd: "[2, 5] (17)"
                            Type: "Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                              End: 17
                              Start: 13
                              Value: 4
                            Whitespace: None
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 5] (17)"
                                                        IterEnd: "[2, 8] (20)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(17, 20), match='Int'>"
                                                        Whitespace: None
                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 8
                                                            Line: 2
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 8
                                                            Line: 2
                                                    IterBegin: "[2, 5] (17)"
                                                    IterEnd: "[2, 8] (20)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[2, 5] (17)"
                                                IterEnd: "[2, 8] (20)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[2, 5] (17)"
                                            IterEnd: "[2, 8] (20)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[2, 9] (21)"
                                            IterEnd: "[2, 16] (28)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(21, 28), match='Method1'>"
                                            Whitespace:
                                              - 20
                                              - 21
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 16] (28)"
                                                IterEnd: "[2, 17] (29)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(28, 29), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                IsIgnored: False
                                                                                IterBegin: "[2, 17] (29)"
                                                                                IterEnd: "[2, 21] (33)"
                                                                                Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                  Match: "<_sre.SRE_Match object; span=(29, 33), match='Bool'>"
                                                                                Whitespace: None
                                                                            Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                                              Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                                                Modifier: None
                                                                                TypeName: "Bool"
                                                                              Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                                                Modifier: None
                                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 17
                                                                                    Line: 2
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 21
                                                                                    Line: 2
                                                                                TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 17
                                                                                    Line: 2
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 21
                                                                                    Line: 2
                                                                            IterBegin: "[2, 17] (29)"
                                                                            IterEnd: "[2, 21] (33)"
                                                                            Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                        IterBegin: "[2, 17] (29)"
                                                                        IterEnd: "[2, 21] (33)"
                                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                    IterBegin: "[2, 17] (29)"
                                                                    IterEnd: "[2, 21] (33)"
                                                                    Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                IsIgnored: False
                                                                                IterBegin: "[2, 22] (34)"
                                                                                IterEnd: "[2, 24] (36)"
                                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                  Match: "<_sre.SRE_Match object; span=(34, 36), match='b1'>"
                                                                                Whitespace:
                                                                                  - 33
                                                                                  - 34
                                                                            Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                              Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                Name: "b1"
                                                                              Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 22
                                                                                    Line: 2
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 24
                                                                                    Line: 2
                                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 22
                                                                                    Line: 2
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 24
                                                                                    Line: 2
                                                                            IterBegin: "[2, 22] (34)"
                                                                            IterEnd: "[2, 24] (36)"
                                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                        IterBegin: "[2, 22] (34)"
                                                                        IterEnd: "[2, 24] (36)"
                                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                    IterBegin: "[2, 22] (34)"
                                                                    IterEnd: "[2, 24] (36)"
                                                                    Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                IterBegin: "[2, 17] (29)"
                                                                IterEnd: "[2, 24] (36)"
                                                                Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            IterBegin: "[2, 17] (29)"
                                                            IterEnd: "[2, 24] (36)"
                                                            Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                    IsIgnored: False
                                                                    IterBegin: "[2, 24] (36)"
                                                                    IterEnd: "[2, 25] (37)"
                                                                    Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                      Match: "<_sre.SRE_Match object; span=(36, 37), match=','>"
                                                                    Whitespace: None
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[2, 26] (38)"
                                                                                        IterEnd: "[2, 30] (42)"
                                                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(38, 42), match='Char'>"
                                                                                        Whitespace:
                                                                                          - 37
                                                                                          - 38
                                                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                                                        Modifier: None
                                                                                        TypeName: "Char"
                                                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                                                        Modifier: None
                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 26
                                                                                            Line: 2
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 30
                                                                                            Line: 2
                                                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 26
                                                                                            Line: 2
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 30
                                                                                            Line: 2
                                                                                    IterBegin: "[2, 26] (38)"
                                                                                    IterEnd: "[2, 30] (42)"
                                                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[2, 26] (38)"
                                                                                IterEnd: "[2, 30] (42)"
                                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                            IterBegin: "[2, 26] (38)"
                                                                            IterEnd: "[2, 30] (42)"
                                                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[2, 31] (43)"
                                                                                        IterEnd: "[2, 33] (45)"
                                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(43, 45), match='c1'>"
                                                                                        Whitespace:
                                                                                          - 42
                                                                                          - 43
                                                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                        Name: "c1"
                                                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 31
                                                                                            Line: 2
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 33
                                                                                            Line: 2
                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 31
                                                                                            Line: 2
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 33
                                                                                            Line: 2
                                                                                    IterBegin: "[2, 31] (43)"
                                                                                    IterEnd: "[2, 33] (45)"
                                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[2, 31] (43)"
                                                                                IterEnd: "[2, 33] (45)"
                                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                            IterBegin: "[2, 31] (43)"
                                                                            IterEnd: "[2, 33] (45)"
                                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                        IterBegin: "[2, 26] (38)"
                                                                        IterEnd: "[2, 33] (45)"
                                                                        Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[2, 26] (38)"
                                                                    IterEnd: "[2, 33] (45)"
                                                                    Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                IterBegin: "[2, 24] (36)"
                                                                IterEnd: "[2, 33] (45)"
                                                                Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                    IsIgnored: False
                                                                    IterBegin: "[2, 33] (45)"
                                                                    IterEnd: "[2, 34] (46)"
                                                                    Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                      Match: "<_sre.SRE_Match object; span=(45, 46), match=','>"
                                                                    Whitespace: None
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[2, 35] (47)"
                                                                                        IterEnd: "[2, 41] (53)"
                                                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(47, 53), match='Double'>"
                                                                                        Whitespace:
                                                                                          - 46
                                                                                          - 47
                                                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                                                        Modifier: None
                                                                                        TypeName: "Double"
                                                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                                                        Modifier: None
                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 35
                                                                                            Line: 2
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 41
                                                                                            Line: 2
                                                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 35
                                                                                            Line: 2
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 41
                                                                                            Line: 2
                                                                                    IterBegin: "[2, 35] (47)"
                                                                                    IterEnd: "[2, 41] (53)"
                                                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[2, 35] (47)"
                                                                                IterEnd: "[2, 41] (53)"
                                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                            IterBegin: "[2, 35] (47)"
                                                                            IterEnd: "[2, 41] (53)"
                                                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[2, 42] (54)"
                                                                                        IterEnd: "[2, 44] (56)"
                                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(54, 56), match='d1'>"
                                                                                        Whitespace:
                                                                                          - 53
                                                                                          - 54
                                                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                        Name: "d1"
                                                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 42
                                                                                            Line: 2
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 44
                                                                                            Line: 2
                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 42
                                                                                            Line: 2
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 44
                                                                                            Line: 2
                                                                                    IterBegin: "[2, 42] (54)"
                                                                                    IterEnd: "[2, 44] (56)"
                                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[2, 42] (54)"
                                                                                IterEnd: "[2, 44] (56)"
                                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                            IterBegin: "[2, 42] (54)"
                                                                            IterEnd: "[2, 44] (56)"
                                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                        IterBegin: "[2, 35] (47)"
                                                                        IterEnd: "[2, 44] (56)"
                                                                        Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[2, 35] (47)"
                                                                    IterEnd: "[2, 44] (56)"
                                                                    Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                IterBegin: "[2, 33] (45)"
                                                                IterEnd: "[2, 44] (56)"
                                                                Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            IterBegin: "[2, 24] (36)"
                                                            IterEnd: "[2, 44] (56)"
                                                            Type: "Repeat: {Comma and Parameter, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                        IterBegin: "[2, 17] (29)"
                                                        IterEnd: "[2, 44] (56)"
                                                        Type: "Traditional <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[2, 17] (29)"
                                                    IterEnd: "[2, 44] (56)"
                                                    Type: "Or: (Repeat: {New Style, 1, None}, Traditional) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[2, 17] (29)"
                                                IterEnd: "[2, 44] (56)"
                                                Type: "Repeat: {Or: (Repeat: {New Style, 1, None}, Traditional), 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 44] (56)"
                                                IterEnd: "[2, 45] (57)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(56, 57), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[2, 16] (28)"
                                            IterEnd: "[2, 45] (57)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[2, 45] (57)"
                                                    IterEnd: "[2, 46] (58)"
                                                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(57, 58), match=':'>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[2, 46] (58)"
                                                            IterEnd: "[3, 1] (59)"
                                                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                              End: 59
                                                              Start: 58
                                                            Whitespace: None
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[3, 1] (59)"
                                                            IterEnd: "[3, 9] (67)"
                                                            Type: "Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                                                              End: 67
                                                              Start: 59
                                                              Value: 8
                                                            Whitespace: None
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[3, 9] (67)"
                                                                            IterEnd: "[3, 13] (71)"
                                                                            Type: "'pass' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                              Match: "<_sre.SRE_Match object; span=(67, 71), match='pass'>"
                                                                            Whitespace: None
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[3, 13] (71)"
                                                                            IterEnd: "[5, 1] (73)"
                                                                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                              End: 73
                                                                              Start: 71
                                                                            Whitespace: None
                                                                        IterBegin: "[3, 9] (67)"
                                                                        IterEnd: "[5, 1] (73)"
                                                                        Type: "Pass Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[3, 9] (67)"
                                                                    IterEnd: "[5, 1] (73)"
                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                IterBegin: "[3, 9] (67)"
                                                                IterEnd: "[5, 1] (73)"
                                                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                            IterBegin: "[3, 9] (67)"
                                                            IterEnd: "[5, 1] (73)"
                                                            Type: "Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[5, 1] (73)"
                                                            IterEnd: "[5, 5] (77)"
                                                            Type: "Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                                                              {}
                                                            Whitespace: None
                                                        IterBegin: "[2, 46] (58)"
                                                        IterEnd: "[5, 5] (77)"
                                                        Type: "Multi-line <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[2, 46] (58)"
                                                    IterEnd: "[5, 5] (77)"
                                                    Type: "Or: (Multi-line, DynamicPhrasesType.Statements) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[2, 45] (57)"
                                                IterEnd: "[5, 5] (77)"
                                                Type: "Statements <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[2, 45] (57)"
                                            IterEnd: "[5, 5] (77)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.standard"
                                            Name: "Method1"
                                            Parameters:
                                              ParametersType.any:
                                                - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                                  Default: None
                                                  IsVarArgs: False
                                                  Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 22] (34)"
                                                        IterEnd: "[2, 24] (36)"
                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(34, 36), match='b1'>"
                                                        Whitespace:
                                                          - 33
                                                          - 34
                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                        Name: "b1"
                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 22
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 24
                                                            Line: 2
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 22
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 24
                                                            Line: 2
                                                    IterBegin: "[2, 22] (34)"
                                                    IterEnd: "[2, 24] (36)"
                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                  Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 17] (29)"
                                                        IterEnd: "[2, 21] (33)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(29, 33), match='Bool'>"
                                                        Whitespace: None
                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Bool"
                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 21
                                                            Line: 2
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 17
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 21
                                                            Line: 2
                                                    IterBegin: "[2, 17] (29)"
                                                    IterEnd: "[2, 21] (33)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                                  Default: None
                                                  IsVarArgs: False
                                                  Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 31] (43)"
                                                        IterEnd: "[2, 33] (45)"
                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(43, 45), match='c1'>"
                                                        Whitespace:
                                                          - 42
                                                          - 43
                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                        Name: "c1"
                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 31
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 33
                                                            Line: 2
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 31
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 33
                                                            Line: 2
                                                    IterBegin: "[2, 31] (43)"
                                                    IterEnd: "[2, 33] (45)"
                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                  Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 26] (38)"
                                                        IterEnd: "[2, 30] (42)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(38, 42), match='Char'>"
                                                        Whitespace:
                                                          - 37
                                                          - 38
                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Char"
                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 26
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 30
                                                            Line: 2
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 26
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 30
                                                            Line: 2
                                                    IterBegin: "[2, 26] (38)"
                                                    IterEnd: "[2, 30] (42)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                                  Default: None
                                                  IsVarArgs: False
                                                  Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 42] (54)"
                                                        IterEnd: "[2, 44] (56)"
                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(54, 56), match='d1'>"
                                                        Whitespace:
                                                          - 53
                                                          - 54
                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                        Name: "d1"
                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 42
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 44
                                                            Line: 2
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 42
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 44
                                                            Line: 2
                                                    IterBegin: "[2, 42] (54)"
                                                    IterEnd: "[2, 44] (56)"
                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                  Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 35] (47)"
                                                        IterEnd: "[2, 41] (53)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(47, 53), match='Double'>"
                                                        Whitespace:
                                                          - 46
                                                          - 47
                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: None
                                                        TypeName: "Double"
                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: None
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 35
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 41
                                                            Line: 2
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 35
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 41
                                                            Line: 2
                                                    IterBegin: "[2, 35] (47)"
                                                    IterEnd: "[2, 41] (53)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 9
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 16
                                                Line: 2
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 16
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 45
                                                Line: 2
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 2
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                        IterBegin: "[2, 5] (17)"
                                        IterEnd: "[5, 5] (77)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[2, 5] (17)"
                                    IterEnd: "[5, 5] (77)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[2, 5] (17)"
                                IterEnd: "[5, 5] (77)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 5] (77)"
                                                        IterEnd: "[5, 8] (80)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(77, 80), match='Int'>"
                                                        Whitespace: None
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[5, 9] (81)"
                                                                IterEnd: "[5, 12] (84)"
                                                                Type: "'var' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(81, 84), match='var'>"
                                                                Whitespace:
                                                                  - 80
                                                                  - 81
                                                            IterBegin: "[5, 9] (81)"
                                                            IterEnd: "[5, 12] (84)"
                                                            Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[5, 9] (81)"
                                                        IterEnd: "[5, 12] (84)"
                                                        Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: TypeModifier.var
                                                        TypeName: "Int"
                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 9
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 12
                                                            Line: 5
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 12
                                                            Line: 5
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 8
                                                            Line: 5
                                                    IterBegin: "[5, 5] (77)"
                                                    IterEnd: "[5, 12] (84)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[5, 5] (77)"
                                                IterEnd: "[5, 12] (84)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[5, 5] (77)"
                                            IterEnd: "[5, 12] (84)"
                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[5, 13] (85)"
                                            IterEnd: "[5, 20] (92)"
                                            Type: "<method_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(85, 92), match='Method2'>"
                                            Whitespace:
                                              - 84
                                              - 85
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 20] (92)"
                                                IterEnd: "[5, 21] (93)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(92, 93), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                IsIgnored: False
                                                                                IterBegin: "[5, 21] (93)"
                                                                                IterEnd: "[5, 25] (97)"
                                                                                Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                  Match: "<_sre.SRE_Match object; span=(93, 97), match='Bool'>"
                                                                                Whitespace: None
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[5, 26] (98)"
                                                                                        IterEnd: "[5, 29] (101)"
                                                                                        Type: "'var' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(98, 101), match='var'>"
                                                                                        Whitespace:
                                                                                          - 97
                                                                                          - 98
                                                                                    IterBegin: "[5, 26] (98)"
                                                                                    IterEnd: "[5, 29] (101)"
                                                                                    Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[5, 26] (98)"
                                                                                IterEnd: "[5, 29] (101)"
                                                                                Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                            Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                                              Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                                                Modifier: TypeModifier.var
                                                                                TypeName: "Bool"
                                                                              Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                                                Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 26
                                                                                    Line: 5
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 29
                                                                                    Line: 5
                                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 21
                                                                                    Line: 5
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 29
                                                                                    Line: 5
                                                                                TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 21
                                                                                    Line: 5
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 25
                                                                                    Line: 5
                                                                            IterBegin: "[5, 21] (93)"
                                                                            IterEnd: "[5, 29] (101)"
                                                                            Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                        IterBegin: "[5, 21] (93)"
                                                                        IterEnd: "[5, 29] (101)"
                                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                    IterBegin: "[5, 21] (93)"
                                                                    IterEnd: "[5, 29] (101)"
                                                                    Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                IsIgnored: False
                                                                                IterBegin: "[5, 30] (102)"
                                                                                IterEnd: "[5, 32] (104)"
                                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                  Match: "<_sre.SRE_Match object; span=(102, 104), match='b2'>"
                                                                                Whitespace:
                                                                                  - 101
                                                                                  - 102
                                                                            Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                              Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                Name: "b2"
                                                                              Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 30
                                                                                    Line: 5
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 32
                                                                                    Line: 5
                                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 30
                                                                                    Line: 5
                                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                    Column: 32
                                                                                    Line: 5
                                                                            IterBegin: "[5, 30] (102)"
                                                                            IterEnd: "[5, 32] (104)"
                                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                        IterBegin: "[5, 30] (102)"
                                                                        IterEnd: "[5, 32] (104)"
                                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                    IterBegin: "[5, 30] (102)"
                                                                    IterEnd: "[5, 32] (104)"
                                                                    Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                IterBegin: "[5, 21] (93)"
                                                                IterEnd: "[5, 32] (104)"
                                                                Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            IterBegin: "[5, 21] (93)"
                                                            IterEnd: "[5, 32] (104)"
                                                            Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                    IsIgnored: False
                                                                    IterBegin: "[5, 32] (104)"
                                                                    IterEnd: "[5, 33] (105)"
                                                                    Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                      Match: "<_sre.SRE_Match object; span=(104, 105), match=','>"
                                                                    Whitespace: None
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[5, 34] (106)"
                                                                                        IterEnd: "[5, 38] (110)"
                                                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(106, 110), match='Char'>"
                                                                                        Whitespace:
                                                                                          - 105
                                                                                          - 106
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                            Children:
                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                IsIgnored: False
                                                                                                IterBegin: "[5, 39] (111)"
                                                                                                IterEnd: "[5, 43] (115)"
                                                                                                Type: "'view' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                  Match: "<_sre.SRE_Match object; span=(111, 115), match='view'>"
                                                                                                Whitespace:
                                                                                                  - 110
                                                                                                  - 111
                                                                                            IterBegin: "[5, 39] (111)"
                                                                                            IterEnd: "[5, 43] (115)"
                                                                                            Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                        IterBegin: "[5, 39] (111)"
                                                                                        IterEnd: "[5, 43] (115)"
                                                                                        Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                                                        Modifier: TypeModifier.view
                                                                                        TypeName: "Char"
                                                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                                                        Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 39
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 43
                                                                                            Line: 5
                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 34
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 43
                                                                                            Line: 5
                                                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 34
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 38
                                                                                            Line: 5
                                                                                    IterBegin: "[5, 34] (106)"
                                                                                    IterEnd: "[5, 43] (115)"
                                                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[5, 34] (106)"
                                                                                IterEnd: "[5, 43] (115)"
                                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                            IterBegin: "[5, 34] (106)"
                                                                            IterEnd: "[5, 43] (115)"
                                                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[5, 44] (116)"
                                                                                        IterEnd: "[5, 46] (118)"
                                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(116, 118), match='c2'>"
                                                                                        Whitespace:
                                                                                          - 115
                                                                                          - 116
                                                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                        Name: "c2"
                                                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 44
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 46
                                                                                            Line: 5
                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 44
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 46
                                                                                            Line: 5
                                                                                    IterBegin: "[5, 44] (116)"
                                                                                    IterEnd: "[5, 46] (118)"
                                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[5, 44] (116)"
                                                                                IterEnd: "[5, 46] (118)"
                                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                            IterBegin: "[5, 44] (116)"
                                                                            IterEnd: "[5, 46] (118)"
                                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                        IterBegin: "[5, 34] (106)"
                                                                        IterEnd: "[5, 46] (118)"
                                                                        Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[5, 34] (106)"
                                                                    IterEnd: "[5, 46] (118)"
                                                                    Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                IterBegin: "[5, 32] (104)"
                                                                IterEnd: "[5, 46] (118)"
                                                                Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                    IsIgnored: False
                                                                    IterBegin: "[5, 46] (118)"
                                                                    IterEnd: "[5, 47] (119)"
                                                                    Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                      Match: "<_sre.SRE_Match object; span=(118, 119), match=','>"
                                                                    Whitespace: None
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[5, 48] (120)"
                                                                                        IterEnd: "[5, 54] (126)"
                                                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(120, 126), match='Double'>"
                                                                                        Whitespace:
                                                                                          - 119
                                                                                          - 120
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                            Children:
                                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                IsIgnored: False
                                                                                                IterBegin: "[5, 55] (127)"
                                                                                                IterEnd: "[5, 58] (130)"
                                                                                                Type: "'val' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                  Match: "<_sre.SRE_Match object; span=(127, 130), match='val'>"
                                                                                                Whitespace:
                                                                                                  - 126
                                                                                                  - 127
                                                                                            IterBegin: "[5, 55] (127)"
                                                                                            IterEnd: "[5, 58] (130)"
                                                                                            Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                        IterBegin: "[5, 55] (127)"
                                                                                        IterEnd: "[5, 58] (130)"
                                                                                        Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                                                        Modifier: TypeModifier.val
                                                                                        TypeName: "Double"
                                                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                                                        Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 55
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 58
                                                                                            Line: 5
                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 48
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 58
                                                                                            Line: 5
                                                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 48
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 54
                                                                                            Line: 5
                                                                                    IterBegin: "[5, 48] (120)"
                                                                                    IterEnd: "[5, 58] (130)"
                                                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[5, 48] (120)"
                                                                                IterEnd: "[5, 58] (130)"
                                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                            IterBegin: "[5, 48] (120)"
                                                                            IterEnd: "[5, 58] (130)"
                                                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                        IsIgnored: False
                                                                                        IterBegin: "[5, 59] (131)"
                                                                                        IterEnd: "[5, 61] (133)"
                                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                          Match: "<_sre.SRE_Match object; span=(131, 133), match='d2'>"
                                                                                        Whitespace:
                                                                                          - 130
                                                                                          - 131
                                                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                                        Name: "d2"
                                                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 59
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 61
                                                                                            Line: 5
                                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 59
                                                                                            Line: 5
                                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                                            Column: 61
                                                                                            Line: 5
                                                                                    IterBegin: "[5, 59] (131)"
                                                                                    IterEnd: "[5, 61] (133)"
                                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                IterBegin: "[5, 59] (131)"
                                                                                IterEnd: "[5, 61] (133)"
                                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                            IterBegin: "[5, 59] (131)"
                                                                            IterEnd: "[5, 61] (133)"
                                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                        IterBegin: "[5, 48] (120)"
                                                                        IterEnd: "[5, 61] (133)"
                                                                        Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[5, 48] (120)"
                                                                    IterEnd: "[5, 61] (133)"
                                                                    Type: "Or: (Parameter, '/', '*') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                IterBegin: "[5, 46] (118)"
                                                                IterEnd: "[5, 61] (133)"
                                                                Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            IterBegin: "[5, 32] (104)"
                                                            IterEnd: "[5, 61] (133)"
                                                            Type: "Repeat: {Comma and Parameter, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                        IterBegin: "[5, 21] (93)"
                                                        IterEnd: "[5, 61] (133)"
                                                        Type: "Traditional <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[5, 21] (93)"
                                                    IterEnd: "[5, 61] (133)"
                                                    Type: "Or: (Repeat: {New Style, 1, None}, Traditional) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[5, 21] (93)"
                                                IterEnd: "[5, 61] (133)"
                                                Type: "Repeat: {Or: (Repeat: {New Style, 1, None}, Traditional), 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 61] (133)"
                                                IterEnd: "[5, 62] (134)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(133, 134), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[5, 20] (92)"
                                            IterEnd: "[5, 62] (134)"
                                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[5, 62] (134)"
                                                    IterEnd: "[5, 63] (135)"
                                                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(134, 135), match=':'>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[5, 63] (135)"
                                                            IterEnd: "[6, 1] (136)"
                                                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                              End: 136
                                                              Start: 135
                                                            Whitespace: None
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[6, 1] (136)"
                                                            IterEnd: "[6, 9] (144)"
                                                            Type: "Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
                                                              End: 144
                                                              Start: 136
                                                              Value: 8
                                                            Whitespace: None
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[6, 9] (144)"
                                                                            IterEnd: "[6, 13] (148)"
                                                                            Type: "'pass' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                              Match: "<_sre.SRE_Match object; span=(144, 148), match='pass'>"
                                                                            Whitespace: None
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[6, 13] (148)"
                                                                            IterEnd: "[7, 1] (149)"
                                                                            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                              End: 149
                                                                              Start: 148
                                                                            Whitespace: None
                                                                        IterBegin: "[6, 9] (144)"
                                                                        IterEnd: "[7, 1] (149)"
                                                                        Type: "Pass Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[6, 9] (144)"
                                                                    IterEnd: "[7, 1] (149)"
                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                IterBegin: "[6, 9] (144)"
                                                                IterEnd: "[7, 1] (149)"
                                                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                            IterBegin: "[6, 9] (144)"
                                                            IterEnd: "[7, 1] (149)"
                                                            Type: "Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[7, 1] (149)"
                                                            IterEnd: "[7, 1] (149)"
                                                            Type: "Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                                                              {}
                                                            Whitespace: None
                                                        IterBegin: "[5, 63] (135)"
                                                        IterEnd: "[7, 1] (149)"
                                                        Type: "Multi-line <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[5, 63] (135)"
                                                    IterEnd: "[7, 1] (149)"
                                                    Type: "Or: (Multi-line, DynamicPhrasesType.Statements) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[5, 62] (134)"
                                                IterEnd: "[7, 1] (149)"
                                                Type: "Statements <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[5, 62] (134)"
                                            IterEnd: "[7, 1] (149)"
                                            Type: "Or: (Statements, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        Info: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                                          Data: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                                            ClassModifier: "ClassModifier.immutable"
                                            MethodType: "MethodType.standard"
                                            Name: "Method2"
                                            Parameters:
                                              ParametersType.any:
                                                - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                                  Default: None
                                                  IsVarArgs: False
                                                  Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 30] (102)"
                                                        IterEnd: "[5, 32] (104)"
                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(102, 104), match='b2'>"
                                                        Whitespace:
                                                          - 101
                                                          - 102
                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                        Name: "b2"
                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 30
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 32
                                                            Line: 5
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 30
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 32
                                                            Line: 5
                                                    IterBegin: "[5, 30] (102)"
                                                    IterEnd: "[5, 32] (104)"
                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                  Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 21] (93)"
                                                        IterEnd: "[5, 25] (97)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(93, 97), match='Bool'>"
                                                        Whitespace: None
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[5, 26] (98)"
                                                                IterEnd: "[5, 29] (101)"
                                                                Type: "'var' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(98, 101), match='var'>"
                                                                Whitespace:
                                                                  - 97
                                                                  - 98
                                                            IterBegin: "[5, 26] (98)"
                                                            IterEnd: "[5, 29] (101)"
                                                            Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[5, 26] (98)"
                                                        IterEnd: "[5, 29] (101)"
                                                        Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: TypeModifier.var
                                                        TypeName: "Bool"
                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 26
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 29
                                                            Line: 5
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 21
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 29
                                                            Line: 5
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 21
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 25
                                                            Line: 5
                                                    IterBegin: "[5, 21] (93)"
                                                    IterEnd: "[5, 29] (101)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                                  Default: None
                                                  IsVarArgs: False
                                                  Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 44] (116)"
                                                        IterEnd: "[5, 46] (118)"
                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(116, 118), match='c2'>"
                                                        Whitespace:
                                                          - 115
                                                          - 116
                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                        Name: "c2"
                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 44
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 46
                                                            Line: 5
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 44
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 46
                                                            Line: 5
                                                    IterBegin: "[5, 44] (116)"
                                                    IterEnd: "[5, 46] (118)"
                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                  Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 34] (106)"
                                                        IterEnd: "[5, 38] (110)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(106, 110), match='Char'>"
                                                        Whitespace:
                                                          - 105
                                                          - 106
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[5, 39] (111)"
                                                                IterEnd: "[5, 43] (115)"
                                                                Type: "'view' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(111, 115), match='view'>"
                                                                Whitespace:
                                                                  - 110
                                                                  - 111
                                                            IterBegin: "[5, 39] (111)"
                                                            IterEnd: "[5, 43] (115)"
                                                            Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[5, 39] (111)"
                                                        IterEnd: "[5, 43] (115)"
                                                        Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: TypeModifier.view
                                                        TypeName: "Char"
                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 39
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 43
                                                            Line: 5
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 34
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 43
                                                            Line: 5
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 34
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 38
                                                            Line: 5
                                                    IterBegin: "[5, 34] (106)"
                                                    IterEnd: "[5, 43] (115)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                                  Default: None
                                                  IsVarArgs: False
                                                  Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 59] (131)"
                                                        IterEnd: "[5, 61] (133)"
                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(131, 133), match='d2'>"
                                                        Whitespace:
                                                          - 130
                                                          - 131
                                                    Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                        Name: "d2"
                                                      Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 59
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 61
                                                            Line: 5
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 59
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 61
                                                            Line: 5
                                                    IterBegin: "[5, 59] (131)"
                                                    IterEnd: "[5, 61] (133)"
                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                  Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[5, 48] (120)"
                                                        IterEnd: "[5, 54] (126)"
                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(120, 126), match='Double'>"
                                                        Whitespace:
                                                          - 119
                                                          - 120
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[5, 55] (127)"
                                                                IterEnd: "[5, 58] (130)"
                                                                Type: "'val' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(127, 130), match='val'>"
                                                                Whitespace:
                                                                  - 126
                                                                  - 127
                                                            IterBegin: "[5, 55] (127)"
                                                            IterEnd: "[5, 58] (130)"
                                                            Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[5, 55] (127)"
                                                        IterEnd: "[5, 58] (130)"
                                                        Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                                        Modifier: TypeModifier.val
                                                        TypeName: "Double"
                                                      Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                                        Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 55
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 58
                                                            Line: 5
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 48
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 58
                                                            Line: 5
                                                        TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 48
                                                            Line: 5
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 54
                                                            Line: 5
                                                    IterBegin: "[5, 48] (120)"
                                                    IterEnd: "[5, 58] (130)"
                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            ReturnType: None
                                            Visibility: "VisibilityModifier.private"
                                          Regions: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                                            ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 7
                                            MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 7
                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 13
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 20
                                                Line: 5
                                            Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 20
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 62
                                                Line: 5
                                            ReturnType: None
                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 7
                                            Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 5
                                                Line: 5
                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                Column: 1
                                                Line: 7
                                        IterBegin: "[5, 5] (77)"
                                        IterEnd: "[7, 1] (149)"
                                        Type: "Func And Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[5, 5] (77)"
                                    IterEnd: "[7, 1] (149)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[5, 5] (77)"
                                IterEnd: "[7, 1] (149)"
                                Type: "Statements <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                            IterBegin: "[2, 5] (17)"
                            IterEnd: "[7, 1] (149)"
                            Type: "Repeat: {Statements, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[7, 1] (149)"
                            IterEnd: "[7, 1] (149)"
                            Type: "Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
                              {}
                            Whitespace: None
                        IterBegin: "[1, 13] (12)"
                        IterEnd: "[7, 1] (149)"
                        Type: "Multi-line <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 13] (12)"
                    IterEnd: "[7, 1] (149)"
                    Type: "Or: (Multi-line, DynamicPhrasesType.Statements) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 12] (11)"
                IterEnd: "[7, 1] (149)"
                Type: "Statements <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
            Info: # <class 'TheLanguage.Lexer.Statements.ClassStatementLexerInfo.ClassStatementLexerInfo'>
              Data: # <class 'TheLanguage.Lexer.Statements.ClassStatementLexerInfo.ClassStatementLexerData'>
                Base: None
                ClassModifier: "ClassModifier.immutable"
                ClassType: "ClassType.Class"
                Interfaces: None
                Mixins: None
                Name: "Foo"
                Statements:
                  - # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                    Data: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                      ClassModifier: "ClassModifier.immutable"
                      MethodType: "MethodType.standard"
                      Name: "Method1"
                      Parameters:
                        ParametersType.any:
                          - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                            Default: None
                            IsVarArgs: False
                            Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[2, 22] (34)"
                                  IterEnd: "[2, 24] (36)"
                                  Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(34, 36), match='b1'>"
                                  Whitespace:
                                    - 33
                                    - 34
                              Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                  Name: "b1"
                                Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                  Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 22
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 24
                                      Line: 2
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 22
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 24
                                      Line: 2
                              IterBegin: "[2, 22] (34)"
                              IterEnd: "[2, 24] (36)"
                              Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[2, 17] (29)"
                                  IterEnd: "[2, 21] (33)"
                                  Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(29, 33), match='Bool'>"
                                  Whitespace: None
                              Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                  Modifier: None
                                  TypeName: "Bool"
                                Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                  Modifier: None
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 17
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 21
                                      Line: 2
                                  TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 17
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 21
                                      Line: 2
                              IterBegin: "[2, 17] (29)"
                              IterEnd: "[2, 21] (33)"
                              Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                          - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                            Default: None
                            IsVarArgs: False
                            Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[2, 31] (43)"
                                  IterEnd: "[2, 33] (45)"
                                  Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(43, 45), match='c1'>"
                                  Whitespace:
                                    - 42
                                    - 43
                              Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                  Name: "c1"
                                Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                  Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 31
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 33
                                      Line: 2
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 31
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 33
                                      Line: 2
                              IterBegin: "[2, 31] (43)"
                              IterEnd: "[2, 33] (45)"
                              Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[2, 26] (38)"
                                  IterEnd: "[2, 30] (42)"
                                  Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(38, 42), match='Char'>"
                                  Whitespace:
                                    - 37
                                    - 38
                              Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                  Modifier: None
                                  TypeName: "Char"
                                Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                  Modifier: None
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 26
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 30
                                      Line: 2
                                  TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 26
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 30
                                      Line: 2
                              IterBegin: "[2, 26] (38)"
                              IterEnd: "[2, 30] (42)"
                              Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                          - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                            Default: None
                            IsVarArgs: False
                            Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[2, 42] (54)"
                                  IterEnd: "[2, 44] (56)"
                                  Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(54, 56), match='d1'>"
                                  Whitespace:
                                    - 53
                                    - 54
                              Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                  Name: "d1"
                                Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                  Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 42
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 44
                                      Line: 2
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 42
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 44
                                      Line: 2
                              IterBegin: "[2, 42] (54)"
                              IterEnd: "[2, 44] (56)"
                              Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[2, 35] (47)"
                                  IterEnd: "[2, 41] (53)"
                                  Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(47, 53), match='Double'>"
                                  Whitespace:
                                    - 46
                                    - 47
                              Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                  Modifier: None
                                  TypeName: "Double"
                                Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                  Modifier: None
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 35
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 41
                                      Line: 2
                                  TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 35
                                      Line: 2
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 41
                                      Line: 2
                              IterBegin: "[2, 35] (47)"
                              IterEnd: "[2, 41] (53)"
                              Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                      ReturnType: None
                      Visibility: "VisibilityModifier.private"
                    Regions: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                      ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 2
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 5
                      MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 2
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 5
                      Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 9
                          Line: 2
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 16
                          Line: 2
                      Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 16
                          Line: 2
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 45
                          Line: 2
                      ReturnType: None
                      Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 2
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 5
                      Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 2
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 5
                  - # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerInfo'>
                    Data: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerData'>
                      ClassModifier: "ClassModifier.immutable"
                      MethodType: "MethodType.standard"
                      Name: "Method2"
                      Parameters:
                        ParametersType.any:
                          - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                            Default: None
                            IsVarArgs: False
                            Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[5, 30] (102)"
                                  IterEnd: "[5, 32] (104)"
                                  Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(102, 104), match='b2'>"
                                  Whitespace:
                                    - 101
                                    - 102
                              Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                  Name: "b2"
                                Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                  Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 30
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 32
                                      Line: 5
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 30
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 32
                                      Line: 5
                              IterBegin: "[5, 30] (102)"
                              IterEnd: "[5, 32] (104)"
                              Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[5, 21] (93)"
                                  IterEnd: "[5, 25] (97)"
                                  Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(93, 97), match='Bool'>"
                                  Whitespace: None
                                - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                      Children:
                                        - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                          IsIgnored: False
                                          IterBegin: "[5, 26] (98)"
                                          IterEnd: "[5, 29] (101)"
                                          Type: "'var' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                          Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(98, 101), match='var'>"
                                          Whitespace:
                                            - 97
                                            - 98
                                      IterBegin: "[5, 26] (98)"
                                      IterEnd: "[5, 29] (101)"
                                      Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                  IterBegin: "[5, 26] (98)"
                                  IterEnd: "[5, 29] (101)"
                                  Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                  Modifier: TypeModifier.var
                                  TypeName: "Bool"
                                Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                  Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 26
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 29
                                      Line: 5
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 21
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 29
                                      Line: 5
                                  TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 21
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 25
                                      Line: 5
                              IterBegin: "[5, 21] (93)"
                              IterEnd: "[5, 29] (101)"
                              Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                          - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                            Default: None
                            IsVarArgs: False
                            Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[5, 44] (116)"
                                  IterEnd: "[5, 46] (118)"
                                  Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(116, 118), match='c2'>"
                                  Whitespace:
                                    - 115
                                    - 116
                              Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                  Name: "c2"
                                Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                  Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 44
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 46
                                      Line: 5
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 44
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 46
                                      Line: 5
                              IterBegin: "[5, 44] (116)"
                              IterEnd: "[5, 46] (118)"
                              Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[5, 34] (106)"
                                  IterEnd: "[5, 38] (110)"
                                  Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(106, 110), match='Char'>"
                                  Whitespace:
                                    - 105
                                    - 106
                                - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                      Children:
                                        - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                          IsIgnored: False
                                          IterBegin: "[5, 39] (111)"
                                          IterEnd: "[5, 43] (115)"
                                          Type: "'view' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                          Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(111, 115), match='view'>"
                                          Whitespace:
                                            - 110
                                            - 111
                                      IterBegin: "[5, 39] (111)"
                                      IterEnd: "[5, 43] (115)"
                                      Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                  IterBegin: "[5, 39] (111)"
                                  IterEnd: "[5, 43] (115)"
                                  Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                  Modifier: TypeModifier.view
                                  TypeName: "Char"
                                Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                  Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 39
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 43
                                      Line: 5
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 34
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 43
                                      Line: 5
                                  TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 34
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 38
                                      Line: 5
                              IterBegin: "[5, 34] (106)"
                              IterEnd: "[5, 43] (115)"
                              Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                          - # <class 'TheLanguage.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                            Default: None
                            IsVarArgs: False
                            Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[5, 59] (131)"
                                  IterEnd: "[5, 61] (133)"
                                  Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(131, 133), match='d2'>"
                                  Whitespace:
                                    - 130
                                    - 131
                              Info: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                  Name: "d2"
                                Regions: # <class 'TheLanguage.Lexer.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                  Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 59
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 61
                                      Line: 5
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 59
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 61
                                      Line: 5
                              IterBegin: "[5, 59] (131)"
                              IterEnd: "[5, 61] (133)"
                              Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                              Children:
                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                  IsIgnored: False
                                  IterBegin: "[5, 48] (120)"
                                  IterEnd: "[5, 54] (126)"
                                  Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                    Match: "<_sre.SRE_Match object; span=(120, 126), match='Double'>"
                                  Whitespace:
                                    - 119
                                    - 120
                                - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                      Children:
                                        - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                          IsIgnored: False
                                          IterBegin: "[5, 55] (127)"
                                          IterEnd: "[5, 58] (130)"
                                          Type: "'val' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                          Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                            Match: "<_sre.SRE_Match object; span=(127, 130), match='val'>"
                                          Whitespace:
                                            - 126
                                            - 127
                                      IterBegin: "[5, 55] (127)"
                                      IterEnd: "[5, 58] (130)"
                                      Type: "Modifier <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                  IterBegin: "[5, 55] (127)"
                                  IterEnd: "[5, 58] (130)"
                                  Type: "Repeat: {Modifier, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              Info: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerInfo'>
                                Data: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerData'>
                                  Modifier: TypeModifier.val
                                  TypeName: "Double"
                                Regions: # <class 'TheLanguage.Lexer.Types.StandardTypeLexerInfo.StandardTypeLexerRegions'>
                                  Modifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 55
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 58
                                      Line: 5
                                  Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 48
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 58
                                      Line: 5
                                  TypeName: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                    Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 48
                                      Line: 5
                                    End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                      Column: 54
                                      Line: 5
                              IterBegin: "[5, 48] (120)"
                              IterEnd: "[5, 58] (130)"
                              Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                      ReturnType: None
                      Visibility: "VisibilityModifier.private"
                    Regions: # <class 'TheLanguage.Lexer.Statements.FuncAndMethodDefinitionStatementLexerInfo.FuncAndMethodDefinitionStatementLexerRegions'>
                      ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 5
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 1
                          Line: 7
                      MethodType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 5
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 1
                          Line: 7
                      Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 13
                          Line: 5
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 20
                          Line: 5
                      Parameters: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 20
                          Line: 5
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 62
                          Line: 5
                      ReturnType: None
                      Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 5
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 1
                          Line: 7
                      Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                        Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 5
                          Line: 5
                        End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                          Column: 1
                          Line: 7
                Visibility: "VisibilityModifier.private"
              Regions: # <class 'TheLanguage.Lexer.Statements.ClassStatementLexerInfo.ClassStatementLexerRegions'>
                Base: None
                ClassModifier: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 7
                ClassType: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 6
                    Line: 1
                Interfaces: None
                Mixins: None
                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 7
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 10
                    Line: 1
                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 7
                Statements: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 12
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 7
                Visibility: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 1
                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                    Column: 1
                    Line: 7
            IterBegin: "[1, 1] (0)"
            IterEnd: "[7, 1] (149)"
            Type: "Class Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[7, 1] (149)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[7, 1] (149)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[7, 1] (149)"
Type: "<None>"
