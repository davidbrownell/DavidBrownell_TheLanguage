# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Documentation: None
Regions__: # <class 'types.RootParserInfoRegions'>
  Documentation: None
  Self__: "[Ln 1, Col 1] -> [Ln 13, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementParserInfo'>
    Clauses:
      - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementClauseParserInfo'>
        Condition: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
          Name: "cond1"
          Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
            Name: "[Ln 1, Col 4] -> [Ln 1, Col 9]"
            Self__: "[Ln 1, Col 4] -> [Ln 1, Col 9]"
        Regions__: # <class 'types.IfStatementClauseParserInfoRegions'>
          Condition: "[Ln 1, Col 4] -> [Ln 1, Col 9]"
          Self__: "[Ln 1, Col 1] -> [Ln 6, Col 1]"
          Statements: "[Ln 1, Col 9] -> [Ln 3, Col 1]"
        Statements:
          - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
              Name: "one_a"
              Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                Name: "[Ln 2, Col 15] -> [Ln 2, Col 20]"
                Self__: "[Ln 2, Col 15] -> [Ln 2, Col 20]"
            Modifier: None
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "value1a"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 2, Col 5] -> [Ln 2, Col 12]"
                Self__: "[Ln 2, Col 5] -> [Ln 2, Col 12]"
            Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
              Expression: "[Ln 2, Col 15] -> [Ln 2, Col 20]"
              Modifier: None
              Name: "[Ln 2, Col 5] -> [Ln 2, Col 12]"
              Self__: "[Ln 2, Col 5] -> [Ln 3, Col 1]"
    ElseStatements:
      - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
        Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
          Name: "one_b"
          Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
            Name: "[Ln 4, Col 15] -> [Ln 4, Col 20]"
            Self__: "[Ln 4, Col 15] -> [Ln 4, Col 20]"
        Modifier: None
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "value1b"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 4, Col 5] -> [Ln 4, Col 12]"
            Self__: "[Ln 4, Col 5] -> [Ln 4, Col 12]"
        Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
          Expression: "[Ln 4, Col 15] -> [Ln 4, Col 20]"
          Modifier: None
          Name: "[Ln 4, Col 5] -> [Ln 4, Col 12]"
          Self__: "[Ln 4, Col 5] -> [Ln 6, Col 1]"
    Regions__: # <class 'types.IfStatementParserInfoRegions'>
      ElseStatements: "[Ln 3, Col 1] -> [Ln 6, Col 1]"
      Self__: "[Ln 1, Col 1] -> [Ln 6, Col 1]"
  - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementParserInfo'>
    Clauses:
      - # <class 'Original.Parser.Statements.IfStatementParserInfo.IfStatementClauseParserInfo'>
        Condition: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
          Name: "cond2"
          Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
            Name: "[Ln 6, Col 4] -> [Ln 6, Col 9]"
            Self__: "[Ln 6, Col 4] -> [Ln 6, Col 9]"
        Regions__: # <class 'types.IfStatementClauseParserInfoRegions'>
          Condition: "[Ln 6, Col 4] -> [Ln 6, Col 9]"
          Self__: "[Ln 6, Col 1] -> [Ln 13, Col 1]"
          Statements: "[Ln 6, Col 9] -> [Ln 9, Col 1]"
        Statements:
          - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
              Name: "two_a"
              Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                Name: "[Ln 7, Col 15] -> [Ln 7, Col 20]"
                Self__: "[Ln 7, Col 15] -> [Ln 7, Col 20]"
            Modifier: None
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "value2a"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 7, Col 5] -> [Ln 7, Col 12]"
                Self__: "[Ln 7, Col 5] -> [Ln 7, Col 12]"
            Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
              Expression: "[Ln 7, Col 15] -> [Ln 7, Col 20]"
              Modifier: None
              Name: "[Ln 7, Col 5] -> [Ln 7, Col 12]"
              Self__: "[Ln 7, Col 5] -> [Ln 8, Col 1]"
          - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
            Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
              Name: "two_b"
              Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                Name: "[Ln 8, Col 15] -> [Ln 8, Col 20]"
                Self__: "[Ln 8, Col 15] -> [Ln 8, Col 20]"
            Modifier: None
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "value2b"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 8, Col 5] -> [Ln 8, Col 12]"
                Self__: "[Ln 8, Col 5] -> [Ln 8, Col 12]"
            Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
              Expression: "[Ln 8, Col 15] -> [Ln 8, Col 20]"
              Modifier: None
              Name: "[Ln 8, Col 5] -> [Ln 8, Col 12]"
              Self__: "[Ln 8, Col 5] -> [Ln 9, Col 1]"
    ElseStatements:
      - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
        Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
          Name: "two_c"
          Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
            Name: "[Ln 10, Col 15] -> [Ln 10, Col 20]"
            Self__: "[Ln 10, Col 15] -> [Ln 10, Col 20]"
        Modifier: None
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "value2c"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 10, Col 5] -> [Ln 10, Col 12]"
            Self__: "[Ln 10, Col 5] -> [Ln 10, Col 12]"
        Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
          Expression: "[Ln 10, Col 15] -> [Ln 10, Col 20]"
          Modifier: None
          Name: "[Ln 10, Col 5] -> [Ln 10, Col 12]"
          Self__: "[Ln 10, Col 5] -> [Ln 12, Col 1]"
      - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
        Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
          Name: "two_d"
          Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
            Name: "[Ln 12, Col 15] -> [Ln 12, Col 20]"
            Self__: "[Ln 12, Col 15] -> [Ln 12, Col 20]"
        Modifier: None
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "value2d"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 12, Col 5] -> [Ln 12, Col 12]"
            Self__: "[Ln 12, Col 5] -> [Ln 12, Col 12]"
        Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
          Expression: "[Ln 12, Col 15] -> [Ln 12, Col 20]"
          Modifier: None
          Name: "[Ln 12, Col 5] -> [Ln 12, Col 12]"
          Self__: "[Ln 12, Col 5] -> [Ln 13, Col 1]"
    Regions__: # <class 'types.IfStatementParserInfoRegions'>
      ElseStatements: "[Ln 9, Col 1] -> [Ln 13, Col 1]"
      Self__: "[Ln 6, Col 1] -> [Ln 13, Col 1]"
