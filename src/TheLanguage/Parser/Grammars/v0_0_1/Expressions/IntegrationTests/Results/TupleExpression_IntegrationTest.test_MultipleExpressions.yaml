# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 1] (0)"
                            IterEnd: "[1, 5] (4)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(0, 4), match='val1'>"
                            Whitespace: None
                        IterBegin: "[1, 1] (0)"
                        IterEnd: "[1, 5] (4)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 5] (4)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 5] (4)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 6] (5)"
                IterEnd: "[1, 7] (6)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(5, 6), match='='>"
                Whitespace:
                  - 4
                  - 5
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 8] (7)"
                                IterEnd: "[1, 9] (8)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(7, 8), match='('>"
                                Whitespace:
                                  - 6
                                  - 7
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[1, 9] (8)"
                                                    IterEnd: "[1, 10] (9)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(8, 9), match='a'>"
                                                    Whitespace: None
                                                IterBegin: "[1, 9] (8)"
                                                IterEnd: "[1, 10] (9)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[1, 9] (8)"
                                            IterEnd: "[1, 10] (9)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[1, 9] (8)"
                                        IterEnd: "[1, 10] (9)"
                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[1, 9] (8)"
                                    IterEnd: "[1, 10] (9)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[1, 9] (8)"
                                IterEnd: "[1, 10] (9)"
                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[1, 10] (9)"
                                        IterEnd: "[1, 11] (10)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(9, 10), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 12] (11)"
                                                            IterEnd: "[1, 13] (12)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(11, 12), match='b'>"
                                                            Whitespace:
                                                              - 10
                                                              - 11
                                                        IterBegin: "[1, 12] (11)"
                                                        IterEnd: "[1, 13] (12)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[1, 12] (11)"
                                                    IterEnd: "[1, 13] (12)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[1, 12] (11)"
                                                IterEnd: "[1, 13] (12)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[1, 12] (11)"
                                            IterEnd: "[1, 13] (12)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[1, 12] (11)"
                                        IterEnd: "[1, 13] (12)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[1, 10] (9)"
                                    IterEnd: "[1, 13] (12)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[1, 10] (9)"
                                IterEnd: "[1, 13] (12)"
                                Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 13] (12)"
                                IterEnd: "[1, 14] (13)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(12, 13), match=')'>"
                                Whitespace: None
                            IterBegin: "[1, 8] (7)"
                            IterEnd: "[1, 14] (13)"
                            Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[1, 8] (7)"
                        IterEnd: "[1, 14] (13)"
                        Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[1, 8] (7)"
                    IterEnd: "[1, 14] (13)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 8] (7)"
                IterEnd: "[1, 14] (13)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 14] (13)"
                IterEnd: "[2, 1] (14)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 14
                  Start: 13
                Whitespace: None
            IterBegin: "[1, 1] (0)"
            IterEnd: "[2, 1] (14)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[2, 1] (14)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[2, 1] (14)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 1] (14)"
                            IterEnd: "[2, 5] (18)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(14, 18), match='val2'>"
                            Whitespace: None
                        IterBegin: "[2, 1] (14)"
                        IterEnd: "[2, 5] (18)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[2, 1] (14)"
                    IterEnd: "[2, 5] (18)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 1] (14)"
                IterEnd: "[2, 5] (18)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 6] (19)"
                IterEnd: "[2, 7] (20)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(19, 20), match='='>"
                Whitespace:
                  - 18
                  - 19
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[2, 8] (21)"
                                IterEnd: "[2, 9] (22)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(21, 22), match='('>"
                                Whitespace:
                                  - 20
                                  - 21
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[2, 9] (22)"
                                                    IterEnd: "[2, 10] (23)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(22, 23), match='c'>"
                                                    Whitespace: None
                                                IterBegin: "[2, 9] (22)"
                                                IterEnd: "[2, 10] (23)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[2, 9] (22)"
                                            IterEnd: "[2, 10] (23)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[2, 9] (22)"
                                        IterEnd: "[2, 10] (23)"
                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[2, 9] (22)"
                                    IterEnd: "[2, 10] (23)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[2, 9] (22)"
                                IterEnd: "[2, 10] (23)"
                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[2, 10] (23)"
                                        IterEnd: "[2, 11] (24)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(23, 24), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[2, 12] (25)"
                                                            IterEnd: "[2, 13] (26)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(25, 26), match='d'>"
                                                            Whitespace:
                                                              - 24
                                                              - 25
                                                        IterBegin: "[2, 12] (25)"
                                                        IterEnd: "[2, 13] (26)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[2, 12] (25)"
                                                    IterEnd: "[2, 13] (26)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[2, 12] (25)"
                                                IterEnd: "[2, 13] (26)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[2, 12] (25)"
                                            IterEnd: "[2, 13] (26)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[2, 12] (25)"
                                        IterEnd: "[2, 13] (26)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[2, 10] (23)"
                                    IterEnd: "[2, 13] (26)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[2, 10] (23)"
                                IterEnd: "[2, 13] (26)"
                                Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[2, 13] (26)"
                                    IterEnd: "[2, 14] (27)"
                                    Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(26, 27), match=','>"
                                    Whitespace: None
                                IterBegin: "[2, 13] (26)"
                                IterEnd: "[2, 14] (27)"
                                Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[2, 15] (28)"
                                IterEnd: "[2, 16] (29)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(28, 29), match=')'>"
                                Whitespace:
                                  - 27
                                  - 28
                            IterBegin: "[2, 8] (21)"
                            IterEnd: "[2, 16] (29)"
                            Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[2, 8] (21)"
                        IterEnd: "[2, 16] (29)"
                        Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[2, 8] (21)"
                    IterEnd: "[2, 16] (29)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 8] (21)"
                IterEnd: "[2, 16] (29)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 16] (29)"
                IterEnd: "[4, 1] (31)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 31
                  Start: 29
                Whitespace: None
            IterBegin: "[2, 1] (14)"
            IterEnd: "[4, 1] (31)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[2, 1] (14)"
        IterEnd: "[4, 1] (31)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 1] (14)"
    IterEnd: "[4, 1] (31)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[4, 1] (31)"
                            IterEnd: "[4, 5] (35)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(31, 35), match='val3'>"
                            Whitespace: None
                        IterBegin: "[4, 1] (31)"
                        IterEnd: "[4, 5] (35)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[4, 1] (31)"
                    IterEnd: "[4, 5] (35)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 1] (31)"
                IterEnd: "[4, 5] (35)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 6] (36)"
                IterEnd: "[4, 7] (37)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(36, 37), match='='>"
                Whitespace:
                  - 35
                  - 36
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[4, 8] (38)"
                                IterEnd: "[4, 9] (39)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(38, 39), match='('>"
                                Whitespace:
                                  - 37
                                  - 38
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[4, 9] (39)"
                                                    IterEnd: "[4, 10] (40)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(39, 40), match='e'>"
                                                    Whitespace: None
                                                IterBegin: "[4, 9] (39)"
                                                IterEnd: "[4, 10] (40)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[4, 9] (39)"
                                            IterEnd: "[4, 10] (40)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[4, 9] (39)"
                                        IterEnd: "[4, 10] (40)"
                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[4, 9] (39)"
                                    IterEnd: "[4, 10] (40)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[4, 9] (39)"
                                IterEnd: "[4, 10] (40)"
                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[4, 10] (40)"
                                        IterEnd: "[4, 11] (41)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(40, 41), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[4, 12] (42)"
                                                            IterEnd: "[4, 13] (43)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(42, 43), match='f'>"
                                                            Whitespace:
                                                              - 41
                                                              - 42
                                                        IterBegin: "[4, 12] (42)"
                                                        IterEnd: "[4, 13] (43)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[4, 12] (42)"
                                                    IterEnd: "[4, 13] (43)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[4, 12] (42)"
                                                IterEnd: "[4, 13] (43)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[4, 12] (42)"
                                            IterEnd: "[4, 13] (43)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[4, 12] (42)"
                                        IterEnd: "[4, 13] (43)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[4, 10] (40)"
                                    IterEnd: "[4, 13] (43)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[4, 13] (43)"
                                        IterEnd: "[4, 14] (44)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(43, 44), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[4, 15] (45)"
                                                            IterEnd: "[4, 16] (46)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(45, 46), match='g'>"
                                                            Whitespace:
                                                              - 44
                                                              - 45
                                                        IterBegin: "[4, 15] (45)"
                                                        IterEnd: "[4, 16] (46)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[4, 15] (45)"
                                                    IterEnd: "[4, 16] (46)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[4, 15] (45)"
                                                IterEnd: "[4, 16] (46)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[4, 15] (45)"
                                            IterEnd: "[4, 16] (46)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[4, 15] (45)"
                                        IterEnd: "[4, 16] (46)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[4, 13] (43)"
                                    IterEnd: "[4, 16] (46)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[4, 16] (46)"
                                        IterEnd: "[4, 17] (47)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(46, 47), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[4, 18] (48)"
                                                            IterEnd: "[4, 19] (49)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(48, 49), match='h'>"
                                                            Whitespace:
                                                              - 47
                                                              - 48
                                                        IterBegin: "[4, 18] (48)"
                                                        IterEnd: "[4, 19] (49)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[4, 18] (48)"
                                                    IterEnd: "[4, 19] (49)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[4, 18] (48)"
                                                IterEnd: "[4, 19] (49)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[4, 18] (48)"
                                            IterEnd: "[4, 19] (49)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[4, 18] (48)"
                                        IterEnd: "[4, 19] (49)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[4, 16] (46)"
                                    IterEnd: "[4, 19] (49)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[4, 10] (40)"
                                IterEnd: "[4, 19] (49)"
                                Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[4, 19] (49)"
                                IterEnd: "[4, 20] (50)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(49, 50), match=')'>"
                                Whitespace: None
                            IterBegin: "[4, 8] (38)"
                            IterEnd: "[4, 20] (50)"
                            Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[4, 8] (38)"
                        IterEnd: "[4, 20] (50)"
                        Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[4, 8] (38)"
                    IterEnd: "[4, 20] (50)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 8] (38)"
                IterEnd: "[4, 20] (50)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 20] (50)"
                IterEnd: "[5, 1] (51)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 51
                  Start: 50
                Whitespace: None
            IterBegin: "[4, 1] (31)"
            IterEnd: "[5, 1] (51)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[4, 1] (31)"
        IterEnd: "[5, 1] (51)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[4, 1] (31)"
    IterEnd: "[5, 1] (51)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[5, 1] (51)"
                            IterEnd: "[5, 5] (55)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(51, 55), match='val4'>"
                            Whitespace: None
                        IterBegin: "[5, 1] (51)"
                        IterEnd: "[5, 5] (55)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[5, 1] (51)"
                    IterEnd: "[5, 5] (55)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[5, 1] (51)"
                IterEnd: "[5, 5] (55)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[5, 6] (56)"
                IterEnd: "[5, 7] (57)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(56, 57), match='='>"
                Whitespace:
                  - 55
                  - 56
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[5, 8] (58)"
                                IterEnd: "[5, 9] (59)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(58, 59), match='('>"
                                Whitespace:
                                  - 57
                                  - 58
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[5, 9] (59)"
                                                    IterEnd: "[5, 10] (60)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(59, 60), match='i'>"
                                                    Whitespace: None
                                                IterBegin: "[5, 9] (59)"
                                                IterEnd: "[5, 10] (60)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[5, 9] (59)"
                                            IterEnd: "[5, 10] (60)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[5, 9] (59)"
                                        IterEnd: "[5, 10] (60)"
                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[5, 9] (59)"
                                    IterEnd: "[5, 10] (60)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[5, 9] (59)"
                                IterEnd: "[5, 10] (60)"
                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[5, 10] (60)"
                                        IterEnd: "[5, 11] (61)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(60, 61), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[5, 12] (62)"
                                                            IterEnd: "[5, 13] (63)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(62, 63), match='j'>"
                                                            Whitespace:
                                                              - 61
                                                              - 62
                                                        IterBegin: "[5, 12] (62)"
                                                        IterEnd: "[5, 13] (63)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[5, 12] (62)"
                                                    IterEnd: "[5, 13] (63)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[5, 12] (62)"
                                                IterEnd: "[5, 13] (63)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[5, 12] (62)"
                                            IterEnd: "[5, 13] (63)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[5, 12] (62)"
                                        IterEnd: "[5, 13] (63)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[5, 10] (60)"
                                    IterEnd: "[5, 13] (63)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[5, 13] (63)"
                                        IterEnd: "[5, 14] (64)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(63, 64), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[5, 15] (65)"
                                                            IterEnd: "[5, 16] (66)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(65, 66), match='k'>"
                                                            Whitespace:
                                                              - 64
                                                              - 65
                                                        IterBegin: "[5, 15] (65)"
                                                        IterEnd: "[5, 16] (66)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[5, 15] (65)"
                                                    IterEnd: "[5, 16] (66)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[5, 15] (65)"
                                                IterEnd: "[5, 16] (66)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[5, 15] (65)"
                                            IterEnd: "[5, 16] (66)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[5, 15] (65)"
                                        IterEnd: "[5, 16] (66)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[5, 13] (63)"
                                    IterEnd: "[5, 16] (66)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[5, 16] (66)"
                                        IterEnd: "[5, 17] (67)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(66, 67), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[5, 18] (68)"
                                                            IterEnd: "[5, 19] (69)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(68, 69), match='l'>"
                                                            Whitespace:
                                                              - 67
                                                              - 68
                                                        IterBegin: "[5, 18] (68)"
                                                        IterEnd: "[5, 19] (69)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[5, 18] (68)"
                                                    IterEnd: "[5, 19] (69)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[5, 18] (68)"
                                                IterEnd: "[5, 19] (69)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[5, 18] (68)"
                                            IterEnd: "[5, 19] (69)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[5, 18] (68)"
                                        IterEnd: "[5, 19] (69)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[5, 16] (66)"
                                    IterEnd: "[5, 19] (69)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[5, 10] (60)"
                                IterEnd: "[5, 19] (69)"
                                Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[5, 19] (69)"
                                    IterEnd: "[5, 20] (70)"
                                    Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(69, 70), match=','>"
                                    Whitespace: None
                                IterBegin: "[5, 19] (69)"
                                IterEnd: "[5, 20] (70)"
                                Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[5, 21] (71)"
                                IterEnd: "[5, 22] (72)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(71, 72), match=')'>"
                                Whitespace:
                                  - 70
                                  - 71
                            IterBegin: "[5, 8] (58)"
                            IterEnd: "[5, 22] (72)"
                            Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[5, 8] (58)"
                        IterEnd: "[5, 22] (72)"
                        Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[5, 8] (58)"
                    IterEnd: "[5, 22] (72)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[5, 8] (58)"
                IterEnd: "[5, 22] (72)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[5, 22] (72)"
                IterEnd: "[7, 1] (74)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 74
                  Start: 72
                Whitespace: None
            IterBegin: "[5, 1] (51)"
            IterEnd: "[7, 1] (74)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[5, 1] (51)"
        IterEnd: "[7, 1] (74)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[5, 1] (51)"
    IterEnd: "[7, 1] (74)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[7, 1] (74)"
                            IterEnd: "[7, 5] (78)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(74, 78), match='val5'>"
                            Whitespace: None
                        IterBegin: "[7, 1] (74)"
                        IterEnd: "[7, 5] (78)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[7, 1] (74)"
                    IterEnd: "[7, 5] (78)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[7, 1] (74)"
                IterEnd: "[7, 5] (78)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[7, 6] (79)"
                IterEnd: "[7, 7] (80)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(79, 80), match='='>"
                Whitespace:
                  - 78
                  - 79
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[7, 8] (81)"
                                IterEnd: "[7, 9] (82)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(81, 82), match='('>"
                                Whitespace:
                                  - 80
                                  - 81
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[7, 9] (82)"
                                                    IterEnd: "[7, 10] (83)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(82, 83), match='m'>"
                                                    Whitespace: None
                                                IterBegin: "[7, 9] (82)"
                                                IterEnd: "[7, 10] (83)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[7, 9] (82)"
                                            IterEnd: "[7, 10] (83)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[7, 9] (82)"
                                        IterEnd: "[7, 10] (83)"
                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[7, 9] (82)"
                                    IterEnd: "[7, 10] (83)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[7, 9] (82)"
                                IterEnd: "[7, 10] (83)"
                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[7, 10] (83)"
                                        IterEnd: "[7, 11] (84)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(83, 84), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[7, 12] (85)"
                                                            IterEnd: "[7, 13] (86)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(85, 86), match='n'>"
                                                            Whitespace:
                                                              - 84
                                                              - 85
                                                        IterBegin: "[7, 12] (85)"
                                                        IterEnd: "[7, 13] (86)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[7, 12] (85)"
                                                    IterEnd: "[7, 13] (86)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[7, 12] (85)"
                                                IterEnd: "[7, 13] (86)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[7, 12] (85)"
                                            IterEnd: "[7, 13] (86)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[7, 12] (85)"
                                        IterEnd: "[7, 13] (86)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[7, 10] (83)"
                                    IterEnd: "[7, 13] (86)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[7, 13] (86)"
                                        IterEnd: "[7, 14] (87)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(86, 87), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[8, 5] (92)"
                                                            IterEnd: "[8, 6] (93)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(92, 93), match='o'>"
                                                            Whitespace: None
                                                        IterBegin: "[8, 5] (92)"
                                                        IterEnd: "[8, 6] (93)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[8, 5] (92)"
                                                    IterEnd: "[8, 6] (93)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[8, 5] (92)"
                                                IterEnd: "[8, 6] (93)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[8, 5] (92)"
                                            IterEnd: "[8, 6] (93)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[8, 5] (92)"
                                        IterEnd: "[8, 6] (93)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[7, 13] (86)"
                                    IterEnd: "[8, 6] (93)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[8, 6] (93)"
                                        IterEnd: "[8, 7] (94)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(93, 94), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[8, 8] (95)"
                                                            IterEnd: "[8, 9] (96)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(95, 96), match='p'>"
                                                            Whitespace:
                                                              - 94
                                                              - 95
                                                        IterBegin: "[8, 8] (95)"
                                                        IterEnd: "[8, 9] (96)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[8, 8] (95)"
                                                    IterEnd: "[8, 9] (96)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[8, 8] (95)"
                                                IterEnd: "[8, 9] (96)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[8, 8] (95)"
                                            IterEnd: "[8, 9] (96)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[8, 8] (95)"
                                        IterEnd: "[8, 9] (96)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[8, 6] (93)"
                                    IterEnd: "[8, 9] (96)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[8, 9] (96)"
                                        IterEnd: "[8, 10] (97)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(96, 97), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[9, 9] (106)"
                                                            IterEnd: "[9, 10] (107)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(106, 107), match='q'>"
                                                            Whitespace: None
                                                        IterBegin: "[9, 9] (106)"
                                                        IterEnd: "[9, 10] (107)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[9, 9] (106)"
                                                    IterEnd: "[9, 10] (107)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[9, 9] (106)"
                                                IterEnd: "[9, 10] (107)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[9, 9] (106)"
                                            IterEnd: "[9, 10] (107)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[9, 9] (106)"
                                        IterEnd: "[9, 10] (107)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[8, 9] (96)"
                                    IterEnd: "[9, 10] (107)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[9, 10] (107)"
                                        IterEnd: "[9, 11] (108)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(107, 108), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[10, 1] (109)"
                                                            IterEnd: "[10, 2] (110)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(109, 110), match='r'>"
                                                            Whitespace: None
                                                        IterBegin: "[10, 1] (109)"
                                                        IterEnd: "[10, 2] (110)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[10, 1] (109)"
                                                    IterEnd: "[10, 2] (110)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[10, 1] (109)"
                                                IterEnd: "[10, 2] (110)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[10, 1] (109)"
                                            IterEnd: "[10, 2] (110)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[10, 1] (109)"
                                        IterEnd: "[10, 2] (110)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[9, 10] (107)"
                                    IterEnd: "[10, 2] (110)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[7, 10] (83)"
                                IterEnd: "[10, 2] (110)"
                                Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[10, 2] (110)"
                                    IterEnd: "[10, 3] (111)"
                                    Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(110, 111), match=','>"
                                    Whitespace: None
                                IterBegin: "[10, 2] (110)"
                                IterEnd: "[10, 3] (111)"
                                Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[10, 3] (111)"
                                IterEnd: "[10, 4] (112)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(111, 112), match=')'>"
                                Whitespace: None
                            IterBegin: "[7, 8] (81)"
                            IterEnd: "[10, 4] (112)"
                            Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[7, 8] (81)"
                        IterEnd: "[10, 4] (112)"
                        Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[7, 8] (81)"
                    IterEnd: "[10, 4] (112)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[7, 8] (81)"
                IterEnd: "[10, 4] (112)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[10, 4] (112)"
                IterEnd: "[12, 1] (114)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 114
                  Start: 112
                Whitespace: None
            IterBegin: "[7, 1] (74)"
            IterEnd: "[12, 1] (114)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[7, 1] (74)"
        IterEnd: "[12, 1] (114)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[7, 1] (74)"
    IterEnd: "[12, 1] (114)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[12, 1] (114)"
                            IterEnd: "[12, 5] (118)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(114, 118), match='val6'>"
                            Whitespace: None
                        IterBegin: "[12, 1] (114)"
                        IterEnd: "[12, 5] (118)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[12, 1] (114)"
                    IterEnd: "[12, 5] (118)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[12, 1] (114)"
                IterEnd: "[12, 5] (118)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[12, 6] (119)"
                IterEnd: "[12, 7] (120)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(119, 120), match='='>"
                Whitespace:
                  - 118
                  - 119
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[12, 8] (121)"
                                IterEnd: "[12, 9] (122)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(121, 122), match='('>"
                                Whitespace:
                                  - 120
                                  - 121
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[12, 9] (122)"
                                                IterEnd: "[12, 10] (123)"
                                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(122, 123), match='('>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                    IsIgnored: False
                                                                    IterBegin: "[12, 10] (123)"
                                                                    IterEnd: "[12, 11] (124)"
                                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                      Match: "<_sre.SRE_Match object; span=(123, 124), match='x'>"
                                                                    Whitespace: None
                                                                IterBegin: "[12, 10] (123)"
                                                                IterEnd: "[12, 11] (124)"
                                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            IterBegin: "[12, 10] (123)"
                                                            IterEnd: "[12, 11] (124)"
                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[12, 10] (123)"
                                                        IterEnd: "[12, 11] (124)"
                                                        Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                    IterBegin: "[12, 10] (123)"
                                                    IterEnd: "[12, 11] (124)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[12, 10] (123)"
                                                IterEnd: "[12, 11] (124)"
                                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[12, 11] (124)"
                                                        IterEnd: "[12, 12] (125)"
                                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(124, 125), match=','>"
                                                        Whitespace: None
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[12, 13] (126)"
                                                                            IterEnd: "[12, 14] (127)"
                                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                              Match: "<_sre.SRE_Match object; span=(126, 127), match='y'>"
                                                                            Whitespace:
                                                                              - 125
                                                                              - 126
                                                                        IterBegin: "[12, 13] (126)"
                                                                        IterEnd: "[12, 14] (127)"
                                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[12, 13] (126)"
                                                                    IterEnd: "[12, 14] (127)"
                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                IterBegin: "[12, 13] (126)"
                                                                IterEnd: "[12, 14] (127)"
                                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                            IterBegin: "[12, 13] (126)"
                                                            IterEnd: "[12, 14] (127)"
                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[12, 13] (126)"
                                                        IterEnd: "[12, 14] (127)"
                                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                    IterBegin: "[12, 11] (124)"
                                                    IterEnd: "[12, 14] (127)"
                                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[12, 11] (124)"
                                                IterEnd: "[12, 14] (127)"
                                                Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[12, 14] (127)"
                                                IterEnd: "[12, 15] (128)"
                                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(127, 128), match=')'>"
                                                Whitespace: None
                                            IterBegin: "[12, 9] (122)"
                                            IterEnd: "[12, 15] (128)"
                                            Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[12, 9] (122)"
                                        IterEnd: "[12, 15] (128)"
                                        Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[12, 9] (122)"
                                    IterEnd: "[12, 15] (128)"
                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[12, 9] (122)"
                                IterEnd: "[12, 15] (128)"
                                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[12, 15] (128)"
                                        IterEnd: "[12, 16] (129)"
                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(128, 129), match=','>"
                                        Whitespace: None
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[12, 17] (130)"
                                                            IterEnd: "[12, 18] (131)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(130, 131), match='z'>"
                                                            Whitespace:
                                                              - 129
                                                              - 130
                                                        IterBegin: "[12, 17] (130)"
                                                        IterEnd: "[12, 18] (131)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[12, 17] (130)"
                                                    IterEnd: "[12, 18] (131)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[12, 17] (130)"
                                                IterEnd: "[12, 18] (131)"
                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[12, 17] (130)"
                                            IterEnd: "[12, 18] (131)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[12, 17] (130)"
                                        IterEnd: "[12, 18] (131)"
                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[12, 15] (128)"
                                    IterEnd: "[12, 18] (131)"
                                    Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[12, 15] (128)"
                                IterEnd: "[12, 18] (131)"
                                Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[12, 18] (131)"
                                IterEnd: "[12, 19] (132)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(131, 132), match=')'>"
                                Whitespace: None
                            IterBegin: "[12, 8] (121)"
                            IterEnd: "[12, 19] (132)"
                            Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[12, 8] (121)"
                        IterEnd: "[12, 19] (132)"
                        Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[12, 8] (121)"
                    IterEnd: "[12, 19] (132)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[12, 8] (121)"
                IterEnd: "[12, 19] (132)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[12, 19] (132)"
                IterEnd: "[13, 1] (133)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 133
                  Start: 132
                Whitespace: None
            IterBegin: "[12, 1] (114)"
            IterEnd: "[13, 1] (133)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[12, 1] (114)"
        IterEnd: "[13, 1] (133)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[12, 1] (114)"
    IterEnd: "[13, 1] (133)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[13, 1] (133)"
Type: "<None>"
