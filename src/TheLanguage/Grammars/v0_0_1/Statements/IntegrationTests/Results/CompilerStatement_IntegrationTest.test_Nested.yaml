# <class 'TheLanguage.Lexer.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Lexer.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Lexer.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Lexer.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Lexer.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 1] (0)"
                IterEnd: "[9, 7] (58)"
                Type: "Multi-line Content <class 'TheLanguage.Lexer.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(0, 58), match='<<<!!!\\nWe should see\\n\\n<<<\\nAll\\n>>>\\n\\nof this>"
                Whitespace: None
              - # <class 'TheLanguage.Lexer.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[9, 7] (58)"
                IterEnd: "[10, 1] (59)"
                Type: "Newline+ <class 'TheLanguage.Lexer.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Lexer.Components.Token.NewlineToken.MatchResult'>
                  End: 59
                  Start: 58
                Whitespace: None
            Info: None
            IterBegin: "[1, 1] (0)"
            IterEnd: "[10, 1] (59)"
            Type: "Compiler Statement <class 'TheLanguage.Lexer.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[10, 1] (59)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Lexer.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[10, 1] (59)"
    Type: "Dynamic Phrases <class 'TheLanguage.Lexer.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[10, 1] (59)"
Type: "<None>"
