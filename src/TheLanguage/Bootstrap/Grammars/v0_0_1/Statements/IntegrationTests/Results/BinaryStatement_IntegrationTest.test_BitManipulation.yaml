# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Documentation: None
Regions__: # <class 'types.RootParserInfoRegions'>
  Documentation: None
  Self__: "[Ln 1, Col 1] -> [Ln 6, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.BinaryStatementParserInfo.BinaryStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
      Name: "expr1"
      Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
        Name: "[Ln 1, Col 12] -> [Ln 1, Col 17]"
        Self__: "[Ln 1, Col 12] -> [Ln 1, Col 17]"
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "value1"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 1, Col 1] -> [Ln 1, Col 7]"
        Self__: "[Ln 1, Col 1] -> [Ln 1, Col 7]"
    Operator: "OperatorType.BitShiftLeftInplace"
    Regions__: # <class 'types.BinaryStatementParserInfoRegions'>
      Expression: "[Ln 1, Col 12] -> [Ln 1, Col 17]"
      Name: "[Ln 1, Col 1] -> [Ln 1, Col 7]"
      Operator: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
      Self__: "[Ln 1, Col 1] -> [Ln 2, Col 1]"
  - # <class 'Original.Parser.Statements.BinaryStatementParserInfo.BinaryStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
      Name: "expr2"
      Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
        Name: "[Ln 2, Col 12] -> [Ln 2, Col 17]"
        Self__: "[Ln 2, Col 12] -> [Ln 2, Col 17]"
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "value2"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 2, Col 1] -> [Ln 2, Col 7]"
        Self__: "[Ln 2, Col 1] -> [Ln 2, Col 7]"
    Operator: "OperatorType.BitShiftRightInplace"
    Regions__: # <class 'types.BinaryStatementParserInfoRegions'>
      Expression: "[Ln 2, Col 12] -> [Ln 2, Col 17]"
      Name: "[Ln 2, Col 1] -> [Ln 2, Col 7]"
      Operator: "[Ln 2, Col 8] -> [Ln 2, Col 11]"
      Self__: "[Ln 2, Col 1] -> [Ln 3, Col 1]"
  - # <class 'Original.Parser.Statements.BinaryStatementParserInfo.BinaryStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
      Name: "expr3"
      Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
        Name: "[Ln 3, Col 11] -> [Ln 3, Col 16]"
        Self__: "[Ln 3, Col 11] -> [Ln 3, Col 16]"
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "value3"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 3, Col 1] -> [Ln 3, Col 7]"
        Self__: "[Ln 3, Col 1] -> [Ln 3, Col 7]"
    Operator: "OperatorType.BitXorInplace"
    Regions__: # <class 'types.BinaryStatementParserInfoRegions'>
      Expression: "[Ln 3, Col 11] -> [Ln 3, Col 16]"
      Name: "[Ln 3, Col 1] -> [Ln 3, Col 7]"
      Operator: "[Ln 3, Col 8] -> [Ln 3, Col 10]"
      Self__: "[Ln 3, Col 1] -> [Ln 4, Col 1]"
  - # <class 'Original.Parser.Statements.BinaryStatementParserInfo.BinaryStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
      Name: "expr4"
      Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
        Name: "[Ln 4, Col 11] -> [Ln 4, Col 16]"
        Self__: "[Ln 4, Col 11] -> [Ln 4, Col 16]"
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "value4"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 4, Col 1] -> [Ln 4, Col 7]"
        Self__: "[Ln 4, Col 1] -> [Ln 4, Col 7]"
    Operator: "OperatorType.BitOrInplace"
    Regions__: # <class 'types.BinaryStatementParserInfoRegions'>
      Expression: "[Ln 4, Col 11] -> [Ln 4, Col 16]"
      Name: "[Ln 4, Col 1] -> [Ln 4, Col 7]"
      Operator: "[Ln 4, Col 8] -> [Ln 4, Col 10]"
      Self__: "[Ln 4, Col 1] -> [Ln 5, Col 1]"
  - # <class 'Original.Parser.Statements.BinaryStatementParserInfo.BinaryStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
      Name: "expr5"
      Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
        Name: "[Ln 5, Col 11] -> [Ln 5, Col 16]"
        Self__: "[Ln 5, Col 11] -> [Ln 5, Col 16]"
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "value5"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 5, Col 1] -> [Ln 5, Col 7]"
        Self__: "[Ln 5, Col 1] -> [Ln 5, Col 7]"
    Operator: "OperatorType.BitAndInplace"
    Regions__: # <class 'types.BinaryStatementParserInfoRegions'>
      Expression: "[Ln 5, Col 11] -> [Ln 5, Col 16]"
      Name: "[Ln 5, Col 1] -> [Ln 5, Col 7]"
      Operator: "[Ln 5, Col 8] -> [Ln 5, Col 10]"
      Self__: "[Ln 5, Col 1] -> [Ln 6, Col 1]"
