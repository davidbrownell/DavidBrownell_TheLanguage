<class 'TheLanguage.Parser.Components.AST.RootNode'>
Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                  Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                      Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 5] (4)
                                                                        IterBefore : [1, 1] (0)
                                                                        Type       : Upper <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(0, 4), match='WORD'>
                                                                        Whitespace : None
                                                                   1)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                          Children   : 0)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                                            IsIgnored  : False
                                                                                                            IterAfter  : [1, 10] (9)
                                                                                                            IterBefore : [1, 6] (5)
                                                                                                            Type       : Number <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                         Match : <_sre.SRE_Match object; span=(5, 9), match='1234'>
                                                                                                            Whitespace : 0)   4
                                                                                                                         1)   5
                                                                                          IterAfter  : [1, 10] (9)
                                                                                          IterBefore : [1, 6] (5)
                                                                                          Type       : (Expression) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                                                                        IterAfter  : [1, 10] (9)
                                                                        IterBefore : [1, 6] (5)
                                                                        Type       : DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
                                                                   2)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [1, 16] (15)
                                                                        IterBefore : [1, 11] (10)
                                                                        Type       : Lower <class 'TheLanguage.Parser.Components.Token.RegexToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                     Match : <_sre.SRE_Match object; span=(10, 15), match='lower'>
                                                                        Whitespace : 0)   9
                                                                                     1)   10
                                                                   3)   <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored  : False
                                                                        IterAfter  : [2, 1] (16)
                                                                        IterBefore : [1, 16] (15)
                                                                        Type       : Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>
                                                                        Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                     End   : 16
                                                                                     Start : 15
                                                                        Whitespace : None
                                                      IterAfter  : [2, 1] (16)
                                                      IterBefore : [1, 1] (0)
                                                      Type       : Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>
                                    IterAfter  : [2, 1] (16)
                                    IterBefore : [1, 1] (0)
                                    Type       : (Statement) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>
                  IterAfter  : [2, 1] (16)
                  IterBefore : [1, 1] (0)
                  Type       : Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>
IterAfter  : [2, 1] (16)
IterBefore : [1, 1] (0)
Type       : <None>
