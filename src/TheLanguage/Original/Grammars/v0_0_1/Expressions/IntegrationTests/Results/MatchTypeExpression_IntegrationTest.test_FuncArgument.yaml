# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Documentation: None
Regions__: # <class 'types.RootParserInfoRegions'>
  Documentation: None
  Self__: "[Ln 1, Col 1] -> [Ln 11, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
      Arguments:
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
            Name: "a"
            Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
              Name: "[Ln 2, Col 5] -> [Ln 2, Col 6]"
              Self__: "[Ln 2, Col 5] -> [Ln 2, Col 6]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 2, Col 5] -> [Ln 2, Col 6]"
            Keyword: None
            Self__: "[Ln 2, Col 5] -> [Ln 2, Col 6]"
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.MatchTypeExpressionParserInfo.MatchTypeExpressionParserInfo'>
            CasePhrases:
              - # <class 'Original.Parser.Expressions.MatchTypeExpressionParserInfo.MatchTypeExpressionClauseParserInfo'>
                Cases:
                  - # <class 'Original.Parser.Types.StandardTypeParserInfo.StandardTypeParserInfo'>
                    Modifier: None
                    Regions__: # <class 'types.StandardTypeParserInfoRegions'>
                      Modifier: None
                      Self__: "[Ln 5, Col 18] -> [Ln 5, Col 22]"
                      TypeName: "[Ln 5, Col 18] -> [Ln 5, Col 22]"
                    TypeName: "Int1"
                Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
                  Name: "value1"
                  Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                    Name: "[Ln 5, Col 24] -> [Ln 5, Col 30]"
                    Self__: "[Ln 5, Col 24] -> [Ln 5, Col 30]"
                Regions__: # <class 'types.MatchTypeExpressionClauseParserInfoRegions'>
                  Cases: "[Ln 5, Col 18] -> [Ln 5, Col 22]"
                  Expression: "[Ln 5, Col 24] -> [Ln 6, Col 1]"
                  Self__: "[Ln 5, Col 13] -> [Ln 6, Col 1]"
              - # <class 'Original.Parser.Expressions.MatchTypeExpressionParserInfo.MatchTypeExpressionClauseParserInfo'>
                Cases:
                  - # <class 'Original.Parser.Types.StandardTypeParserInfo.StandardTypeParserInfo'>
                    Modifier: None
                    Regions__: # <class 'types.StandardTypeParserInfoRegions'>
                      Modifier: None
                      Self__: "[Ln 6, Col 18] -> [Ln 6, Col 22]"
                      TypeName: "[Ln 6, Col 18] -> [Ln 6, Col 22]"
                    TypeName: "Int2"
                Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
                  Name: "value2"
                  Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                    Name: "[Ln 6, Col 24] -> [Ln 6, Col 30]"
                    Self__: "[Ln 6, Col 24] -> [Ln 6, Col 30]"
                Regions__: # <class 'types.MatchTypeExpressionClauseParserInfoRegions'>
                  Cases: "[Ln 6, Col 18] -> [Ln 6, Col 22]"
                  Expression: "[Ln 6, Col 24] -> [Ln 7, Col 1]"
                  Self__: "[Ln 6, Col 13] -> [Ln 7, Col 1]"
            Default: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
              Name: "value3"
              Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                Name: "[Ln 7, Col 22] -> [Ln 7, Col 28]"
                Self__: "[Ln 7, Col 22] -> [Ln 7, Col 28]"
            Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
              Name: "expr"
              Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                Name: "[Ln 4, Col 20] -> [Ln 4, Col 24]"
                Self__: "[Ln 4, Col 20] -> [Ln 4, Col 24]"
            Regions__: # <class 'types.MatchTypeExpressionParserInfoRegions'>
              CasePhrases: "[Ln 5, Col 13] -> [Ln 7, Col 1]"
              Default: "[Ln 7, Col 22] -> [Ln 8, Col 1]"
              Expression: "[Ln 4, Col 20] -> [Ln 4, Col 24]"
              Self__: "[Ln 3, Col 5] -> [Ln 8, Col 6]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 3, Col 5] -> [Ln 8, Col 6]"
            Keyword: None
            Self__: "[Ln 3, Col 5] -> [Ln 8, Col 6]"
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
            Name: "b"
            Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
              Name: "[Ln 9, Col 5] -> [Ln 9, Col 6]"
              Self__: "[Ln 9, Col 5] -> [Ln 9, Col 6]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 9, Col 5] -> [Ln 9, Col 6]"
            Keyword: None
            Self__: "[Ln 9, Col 5] -> [Ln 9, Col 6]"
      Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
        Name: "Func"
        Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
          Name: "[Ln 1, Col 9] -> [Ln 1, Col 13]"
          Self__: "[Ln 1, Col 9] -> [Ln 1, Col 13]"
      Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
        Arguments: "[Ln 1, Col 13] -> [Ln 10, Col 2]"
        Expression: "[Ln 1, Col 9] -> [Ln 1, Col 13]"
        Self__: "[Ln 1, Col 9] -> [Ln 10, Col 2]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "value"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 1, Col 1] -> [Ln 1, Col 6]"
        Self__: "[Ln 1, Col 1] -> [Ln 1, Col 6]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 1, Col 9] -> [Ln 10, Col 2]"
      Modifier: None
      Name: "[Ln 1, Col 1] -> [Ln 1, Col 6]"
      Self__: "[Ln 1, Col 1] -> [Ln 11, Col 1]"
