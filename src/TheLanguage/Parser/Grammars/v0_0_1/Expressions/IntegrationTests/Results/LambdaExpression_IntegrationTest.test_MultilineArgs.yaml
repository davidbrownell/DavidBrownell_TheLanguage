# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 1] (0)"
                            IterEnd: "[1, 5] (4)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(0, 4), match='var1'>"
                            Whitespace: None
                        IterBegin: "[1, 1] (0)"
                        IterEnd: "[1, 5] (4)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 5] (4)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 5] (4)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 6] (5)"
                IterEnd: "[1, 7] (6)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(5, 6), match='='>"
                Whitespace:
                  - 4
                  - 5
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 8] (7)"
                            IterEnd: "[1, 14] (13)"
                            Type: "'lambda' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(7, 13), match='lambda'>"
                            Whitespace:
                              - 6
                              - 7
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 15] (14)"
                                IterEnd: "[1, 16] (15)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(14, 15), match='('>"
                                Whitespace:
                                  - 13
                                  - 14
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[2, 5] (20)"
                                                    IterEnd: "[2, 8] (23)"
                                                    Type: "'pos' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(20, 23), match='pos'>"
                                                    Whitespace: None
                                                IterBegin: "[2, 5] (20)"
                                                IterEnd: "[2, 8] (23)"
                                                Type: "Or: ('pos', 'any', 'key') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 8] (23)"
                                                IterEnd: "[2, 9] (24)"
                                                Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(23, 24), match=':'>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[3, 9] (33)"
                                                                IterEnd: "[3, 12] (36)"
                                                                Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(33, 36), match='Int'>"
                                                                Whitespace: None
                                                            IterBegin: "[3, 9] (33)"
                                                            IterEnd: "[3, 12] (36)"
                                                            Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[3, 9] (33)"
                                                        IterEnd: "[3, 12] (36)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[3, 9] (33)"
                                                    IterEnd: "[3, 12] (36)"
                                                    Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[3, 13] (37)"
                                                                IterEnd: "[3, 14] (38)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(37, 38), match='a'>"
                                                                Whitespace:
                                                                  - 36
                                                                  - 37
                                                            IterBegin: "[3, 13] (37)"
                                                            IterEnd: "[3, 14] (38)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[3, 13] (37)"
                                                        IterEnd: "[3, 14] (38)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[3, 13] (37)"
                                                    IterEnd: "[3, 14] (38)"
                                                    Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[3, 9] (33)"
                                                IterEnd: "[3, 14] (38)"
                                                Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[3, 14] (38)"
                                                        IterEnd: "[3, 15] (39)"
                                                        Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(38, 39), match=','>"
                                                        Whitespace: None
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[4, 9] (48)"
                                                                        IterEnd: "[4, 13] (52)"
                                                                        Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(48, 52), match='Bool'>"
                                                                        Whitespace: None
                                                                    IterBegin: "[4, 9] (48)"
                                                                    IterEnd: "[4, 13] (52)"
                                                                    Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[4, 9] (48)"
                                                                IterEnd: "[4, 13] (52)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[4, 9] (48)"
                                                            IterEnd: "[4, 13] (52)"
                                                            Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[4, 14] (53)"
                                                                        IterEnd: "[4, 15] (54)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(53, 54), match='b'>"
                                                                        Whitespace:
                                                                          - 52
                                                                          - 53
                                                                    IterBegin: "[4, 14] (53)"
                                                                    IterEnd: "[4, 15] (54)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[4, 14] (53)"
                                                                IterEnd: "[4, 15] (54)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[4, 14] (53)"
                                                            IterEnd: "[4, 15] (54)"
                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[4, 9] (48)"
                                                        IterEnd: "[4, 15] (54)"
                                                        Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[3, 14] (38)"
                                                    IterEnd: "[4, 15] (54)"
                                                    Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[3, 14] (38)"
                                                IterEnd: "[4, 15] (54)"
                                                Type: "Repeat: {Comma and Parameter, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[4, 15] (54)"
                                                    IterEnd: "[4, 16] (55)"
                                                    Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(54, 55), match=','>"
                                                    Whitespace: None
                                                IterBegin: "[4, 15] (54)"
                                                IterEnd: "[4, 16] (55)"
                                                Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                            IterBegin: "[2, 5] (20)"
                                            IterEnd: "[4, 16] (55)"
                                            Type: "New Style <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[5, 5] (60)"
                                                    IterEnd: "[5, 8] (63)"
                                                    Type: "'key' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(60, 63), match='key'>"
                                                    Whitespace: None
                                                IterBegin: "[5, 5] (60)"
                                                IterEnd: "[5, 8] (63)"
                                                Type: "Or: ('pos', 'any', 'key') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 8] (63)"
                                                IterEnd: "[5, 9] (64)"
                                                Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(63, 64), match=':'>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[6, 9] (73)"
                                                                IterEnd: "[6, 13] (77)"
                                                                Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(73, 77), match='Char'>"
                                                                Whitespace: None
                                                            IterBegin: "[6, 9] (73)"
                                                            IterEnd: "[6, 13] (77)"
                                                            Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[6, 9] (73)"
                                                        IterEnd: "[6, 13] (77)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[6, 9] (73)"
                                                    IterEnd: "[6, 13] (77)"
                                                    Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[6, 14] (78)"
                                                                IterEnd: "[6, 15] (79)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(78, 79), match='c'>"
                                                                Whitespace:
                                                                  - 77
                                                                  - 78
                                                            IterBegin: "[6, 14] (78)"
                                                            IterEnd: "[6, 15] (79)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[6, 14] (78)"
                                                        IterEnd: "[6, 15] (79)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[6, 14] (78)"
                                                    IterEnd: "[6, 15] (79)"
                                                    Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[6, 9] (73)"
                                                IterEnd: "[6, 15] (79)"
                                                Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[6, 15] (79)"
                                                    IterEnd: "[6, 16] (80)"
                                                    Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(79, 80), match=','>"
                                                    Whitespace: None
                                                IterBegin: "[6, 15] (79)"
                                                IterEnd: "[6, 16] (80)"
                                                Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                            IterBegin: "[5, 5] (60)"
                                            IterEnd: "[6, 16] (80)"
                                            Type: "New Style <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[2, 5] (20)"
                                        IterEnd: "[6, 16] (80)"
                                        Type: "Repeat: {New Style, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                    IterBegin: "[2, 5] (20)"
                                    IterEnd: "[6, 16] (80)"
                                    Type: "Or: (Repeat: {New Style, 1, None}, Traditional) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[2, 5] (20)"
                                IterEnd: "[6, 16] (80)"
                                Type: "Repeat: {Or: (Repeat: {New Style, 1, None}, Traditional), 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[7, 1] (81)"
                                IterEnd: "[7, 2] (82)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(81, 82), match=')'>"
                                Whitespace: None
                            IterBegin: "[1, 15] (14)"
                            IterEnd: "[7, 2] (82)"
                            Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[7, 2] (82)"
                            IterEnd: "[7, 3] (83)"
                            Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(82, 83), match=':'>"
                            Whitespace: None
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[7, 4] (84)"
                                            IterEnd: "[7, 5] (85)"
                                            Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(84, 85), match='('>"
                                            Whitespace:
                                              - 83
                                              - 84
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[7, 5] (85)"
                                                                IterEnd: "[7, 6] (86)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(85, 86), match='a'>"
                                                                Whitespace: None
                                                            IterBegin: "[7, 5] (85)"
                                                            IterEnd: "[7, 6] (86)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[7, 5] (85)"
                                                        IterEnd: "[7, 6] (86)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[7, 5] (85)"
                                                    IterEnd: "[7, 6] (86)"
                                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[7, 5] (85)"
                                                IterEnd: "[7, 6] (86)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[7, 5] (85)"
                                            IterEnd: "[7, 6] (86)"
                                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[7, 6] (86)"
                                                    IterEnd: "[7, 7] (87)"
                                                    Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(86, 87), match=','>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[7, 8] (88)"
                                                                        IterEnd: "[7, 9] (89)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(88, 89), match='b'>"
                                                                        Whitespace:
                                                                          - 87
                                                                          - 88
                                                                    IterBegin: "[7, 8] (88)"
                                                                    IterEnd: "[7, 9] (89)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[7, 8] (88)"
                                                                IterEnd: "[7, 9] (89)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[7, 8] (88)"
                                                            IterEnd: "[7, 9] (89)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[7, 8] (88)"
                                                        IterEnd: "[7, 9] (89)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[7, 8] (88)"
                                                    IterEnd: "[7, 9] (89)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[7, 6] (86)"
                                                IterEnd: "[7, 9] (89)"
                                                Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[7, 9] (89)"
                                                    IterEnd: "[7, 10] (90)"
                                                    Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(89, 90), match=','>"
                                                    Whitespace: None
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[7, 11] (91)"
                                                                        IterEnd: "[7, 12] (92)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(91, 92), match='c'>"
                                                                        Whitespace:
                                                                          - 90
                                                                          - 91
                                                                    IterBegin: "[7, 11] (91)"
                                                                    IterEnd: "[7, 12] (92)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[7, 11] (91)"
                                                                IterEnd: "[7, 12] (92)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[7, 11] (91)"
                                                            IterEnd: "[7, 12] (92)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[7, 11] (91)"
                                                        IterEnd: "[7, 12] (92)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[7, 11] (91)"
                                                    IterEnd: "[7, 12] (92)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[7, 9] (89)"
                                                IterEnd: "[7, 12] (92)"
                                                Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[7, 6] (86)"
                                            IterEnd: "[7, 12] (92)"
                                            Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[7, 12] (92)"
                                            IterEnd: "[7, 13] (93)"
                                            Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(92, 93), match=')'>"
                                            Whitespace: None
                                        IterBegin: "[7, 4] (84)"
                                        IterEnd: "[7, 13] (93)"
                                        Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[7, 4] (84)"
                                    IterEnd: "[7, 13] (93)"
                                    Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                IterBegin: "[7, 4] (84)"
                                IterEnd: "[7, 13] (93)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[7, 4] (84)"
                            IterEnd: "[7, 13] (93)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        Info: # <class 'TheLanguage.Parser.Grammars.v0_0_1.Expressions.LambdaExpression.LambdaExpression.NodeInfo'>
                          Expression: "Tuple Expression"
                          Parameters:
                            ParametersType.pos:
                              - # <class 'TheLanguage.Parser.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                Default: None
                                IsVarArgs: False
                                Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                      IsIgnored: False
                                      IterBegin: "[3, 13] (37)"
                                      IterEnd: "[3, 14] (38)"
                                      Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                      Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(37, 38), match='a'>"
                                      Whitespace:
                                        - 36
                                        - 37
                                  IterBegin: "[3, 13] (37)"
                                  IterEnd: "[3, 14] (38)"
                                  Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                      IsIgnored: False
                                      IterBegin: "[3, 9] (33)"
                                      IterEnd: "[3, 12] (36)"
                                      Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                      Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(33, 36), match='Int'>"
                                      Whitespace: None
                                  IterBegin: "[3, 9] (33)"
                                  IterEnd: "[3, 12] (36)"
                                  Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                              - # <class 'TheLanguage.Parser.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                Default: None
                                IsVarArgs: False
                                Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                      IsIgnored: False
                                      IterBegin: "[4, 14] (53)"
                                      IterEnd: "[4, 15] (54)"
                                      Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                      Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(53, 54), match='b'>"
                                      Whitespace:
                                        - 52
                                        - 53
                                  IterBegin: "[4, 14] (53)"
                                  IterEnd: "[4, 15] (54)"
                                  Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                      IsIgnored: False
                                      IterBegin: "[4, 9] (48)"
                                      IterEnd: "[4, 13] (52)"
                                      Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                      Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(48, 52), match='Bool'>"
                                      Whitespace: None
                                  IterBegin: "[4, 9] (48)"
                                  IterEnd: "[4, 13] (52)"
                                  Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            ParametersType.key:
                              - # <class 'TheLanguage.Parser.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                Default: None
                                IsVarArgs: False
                                Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                      IsIgnored: False
                                      IterBegin: "[6, 14] (78)"
                                      IterEnd: "[6, 15] (79)"
                                      Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                      Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(78, 79), match='c'>"
                                      Whitespace:
                                        - 77
                                        - 78
                                  IterBegin: "[6, 14] (78)"
                                  IterEnd: "[6, 15] (79)"
                                  Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                  Children:
                                    - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                      IsIgnored: False
                                      IterBegin: "[6, 9] (73)"
                                      IterEnd: "[6, 13] (77)"
                                      Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                      Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                        Match: "<_sre.SRE_Match object; span=(73, 77), match='Char'>"
                                      Whitespace: None
                                  IterBegin: "[6, 9] (73)"
                                  IterEnd: "[6, 13] (77)"
                                  Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[1, 8] (7)"
                        IterEnd: "[7, 13] (93)"
                        Type: "Lambda Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 8] (7)"
                    IterEnd: "[7, 13] (93)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 8] (7)"
                IterEnd: "[7, 13] (93)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[7, 13] (93)"
                IterEnd: "[9, 1] (95)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 95
                  Start: 93
                Whitespace: None
            IterBegin: "[1, 1] (0)"
            IterEnd: "[9, 1] (95)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[9, 1] (95)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[9, 1] (95)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[9, 1] (95)"
                            IterEnd: "[9, 5] (99)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(95, 99), match='var2'>"
                            Whitespace: None
                        IterBegin: "[9, 1] (95)"
                        IterEnd: "[9, 5] (99)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[9, 1] (95)"
                    IterEnd: "[9, 5] (99)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[9, 1] (95)"
                IterEnd: "[9, 5] (99)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[9, 6] (100)"
                IterEnd: "[9, 7] (101)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(100, 101), match='='>"
                Whitespace:
                  - 99
                  - 100
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[9, 8] (102)"
                            IterEnd: "[9, 12] (106)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(102, 106), match='Func'>"
                            Whitespace:
                              - 101
                              - 102
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[9, 12] (106)"
                                IterEnd: "[9, 13] (107)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(106, 107), match='('>"
                                Whitespace: None
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[10, 5] (112)"
                                                        IterEnd: "[10, 11] (118)"
                                                        Type: "'lambda' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(112, 118), match='lambda'>"
                                                        Whitespace: None
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[10, 12] (119)"
                                                            IterEnd: "[10, 13] (120)"
                                                            Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(119, 120), match='('>"
                                                            Whitespace:
                                                              - 118
                                                              - 119
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                IsIgnored: False
                                                                                IterBegin: "[11, 9] (129)"
                                                                                IterEnd: "[11, 12] (132)"
                                                                                Type: "'key' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                  Match: "<_sre.SRE_Match object; span=(129, 132), match='key'>"
                                                                                Whitespace: None
                                                                            IterBegin: "[11, 9] (129)"
                                                                            IterEnd: "[11, 12] (132)"
                                                                            Type: "Or: ('pos', 'any', 'key') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[11, 12] (132)"
                                                                            IterEnd: "[11, 13] (133)"
                                                                            Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                              Match: "<_sre.SRE_Match object; span=(132, 133), match=':'>"
                                                                            Whitespace: None
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                            IsIgnored: False
                                                                                            IterBegin: "[12, 13] (146)"
                                                                                            IterEnd: "[12, 19] (152)"
                                                                                            Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                              Match: "<_sre.SRE_Match object; span=(146, 152), match='Double'>"
                                                                                            Whitespace: None
                                                                                        IterBegin: "[12, 13] (146)"
                                                                                        IterEnd: "[12, 19] (152)"
                                                                                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                    IterBegin: "[12, 13] (146)"
                                                                                    IterEnd: "[12, 19] (152)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[12, 13] (146)"
                                                                                IterEnd: "[12, 19] (152)"
                                                                                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                Children:
                                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                    Children:
                                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                                        Children:
                                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                            IsIgnored: False
                                                                                            IterBegin: "[12, 20] (153)"
                                                                                            IterEnd: "[12, 21] (154)"
                                                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                              Match: "<_sre.SRE_Match object; span=(153, 154), match='d'>"
                                                                                            Whitespace:
                                                                                              - 152
                                                                                              - 153
                                                                                        IterBegin: "[12, 20] (153)"
                                                                                        IterEnd: "[12, 21] (154)"
                                                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                                    IterBegin: "[12, 20] (153)"
                                                                                    IterEnd: "[12, 21] (154)"
                                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                                IterBegin: "[12, 20] (153)"
                                                                                IterEnd: "[12, 21] (154)"
                                                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                                            IterBegin: "[12, 13] (146)"
                                                                            IterEnd: "[12, 21] (154)"
                                                                            Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                            Children:
                                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                                IsIgnored: False
                                                                                IterBegin: "[12, 21] (154)"
                                                                                IterEnd: "[12, 22] (155)"
                                                                                Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                  Match: "<_sre.SRE_Match object; span=(154, 155), match=','>"
                                                                                Whitespace: None
                                                                            IterBegin: "[12, 21] (154)"
                                                                            IterEnd: "[12, 22] (155)"
                                                                            Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                        IterBegin: "[11, 9] (129)"
                                                                        IterEnd: "[12, 22] (155)"
                                                                        Type: "New Style <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[11, 9] (129)"
                                                                    IterEnd: "[12, 22] (155)"
                                                                    Type: "Repeat: {New Style, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                                IterBegin: "[11, 9] (129)"
                                                                IterEnd: "[12, 22] (155)"
                                                                Type: "Or: (Repeat: {New Style, 1, None}, Traditional) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[11, 9] (129)"
                                                            IterEnd: "[12, 22] (155)"
                                                            Type: "Repeat: {Or: (Repeat: {New Style, 1, None}, Traditional), 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[13, 5] (160)"
                                                            IterEnd: "[13, 6] (161)"
                                                            Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(160, 161), match=')'>"
                                                            Whitespace: None
                                                        IterBegin: "[10, 12] (119)"
                                                        IterEnd: "[13, 6] (161)"
                                                        Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[13, 6] (161)"
                                                        IterEnd: "[13, 7] (162)"
                                                        Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(161, 162), match=':'>"
                                                        Whitespace: None
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                        Children:
                                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                            IsIgnored: False
                                                                            IterBegin: "[13, 8] (163)"
                                                                            IterEnd: "[13, 14] (169)"
                                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                              Match: "<_sre.SRE_Match object; span=(163, 169), match='value2'>"
                                                                            Whitespace:
                                                                              - 162
                                                                              - 163
                                                                        IterBegin: "[13, 8] (163)"
                                                                        IterEnd: "[13, 14] (169)"
                                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                    IterBegin: "[13, 8] (163)"
                                                                    IterEnd: "[13, 14] (169)"
                                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                                IterBegin: "[13, 8] (163)"
                                                                IterEnd: "[13, 14] (169)"
                                                                Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                            IterBegin: "[13, 8] (163)"
                                                            IterEnd: "[13, 14] (169)"
                                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                        IterBegin: "[13, 8] (163)"
                                                        IterEnd: "[13, 14] (169)"
                                                        Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                    Info: # <class 'TheLanguage.Parser.Grammars.v0_0_1.Expressions.LambdaExpression.LambdaExpression.NodeInfo'>
                                                      Expression: "Variable Expression"
                                                      Parameters:
                                                        ParametersType.key:
                                                          - # <class 'TheLanguage.Parser.Grammars.v0_0_1.Common.ParametersPhraseItem.Parameter'>
                                                            Default: None
                                                            IsVarArgs: False
                                                            Name: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                              Children:
                                                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                  IsIgnored: False
                                                                  IterBegin: "[12, 20] (153)"
                                                                  IterEnd: "[12, 21] (154)"
                                                                  Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                    Match: "<_sre.SRE_Match object; span=(153, 154), match='d'>"
                                                                  Whitespace:
                                                                    - 152
                                                                    - 153
                                                              IterBegin: "[12, 20] (153)"
                                                              IterEnd: "[12, 21] (154)"
                                                              Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                            Type: # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                              Children:
                                                                - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                  IsIgnored: False
                                                                  IterBegin: "[12, 13] (146)"
                                                                  IterEnd: "[12, 19] (152)"
                                                                  Type: "<type_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                  Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                    Match: "<_sre.SRE_Match object; span=(146, 152), match='Double'>"
                                                                  Whitespace: None
                                                              IterBegin: "[12, 13] (146)"
                                                              IterEnd: "[12, 19] (152)"
                                                              Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[10, 5] (112)"
                                                    IterEnd: "[13, 14] (169)"
                                                    Type: "Lambda Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[10, 5] (112)"
                                                IterEnd: "[13, 14] (169)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[10, 5] (112)"
                                            IterEnd: "[13, 14] (169)"
                                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                        IterBegin: "[10, 5] (112)"
                                        IterEnd: "[13, 14] (169)"
                                        Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[13, 14] (169)"
                                                IterEnd: "[13, 15] (170)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(169, 170), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[14, 5] (175)"
                                                                        IterEnd: "[14, 6] (176)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(175, 176), match='b'>"
                                                                        Whitespace: None
                                                                    IterBegin: "[14, 5] (175)"
                                                                    IterEnd: "[14, 6] (176)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[14, 5] (175)"
                                                                IterEnd: "[14, 6] (176)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[14, 5] (175)"
                                                            IterEnd: "[14, 6] (176)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[14, 5] (175)"
                                                        IterEnd: "[14, 6] (176)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[14, 5] (175)"
                                                    IterEnd: "[14, 6] (176)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[14, 5] (175)"
                                                IterEnd: "[14, 6] (176)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[13, 14] (169)"
                                            IterEnd: "[14, 6] (176)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[14, 6] (176)"
                                                IterEnd: "[14, 7] (177)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(176, 177), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[15, 5] (182)"
                                                                        IterEnd: "[15, 6] (183)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(182, 183), match='c'>"
                                                                        Whitespace: None
                                                                    IterBegin: "[15, 5] (182)"
                                                                    IterEnd: "[15, 6] (183)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[15, 5] (182)"
                                                                IterEnd: "[15, 6] (183)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[15, 5] (182)"
                                                            IterEnd: "[15, 6] (183)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[15, 5] (182)"
                                                        IterEnd: "[15, 6] (183)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[15, 5] (182)"
                                                    IterEnd: "[15, 6] (183)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[15, 5] (182)"
                                                IterEnd: "[15, 6] (183)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[14, 6] (176)"
                                            IterEnd: "[15, 6] (183)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[13, 14] (169)"
                                        IterEnd: "[15, 6] (183)"
                                        Type: "Repeat: {Comma and Argument, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[15, 6] (183)"
                                            IterEnd: "[15, 7] (184)"
                                            Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(183, 184), match=','>"
                                            Whitespace: None
                                        IterBegin: "[15, 6] (183)"
                                        IterEnd: "[15, 7] (184)"
                                        Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                    IterBegin: "[10, 5] (112)"
                                    IterEnd: "[15, 7] (184)"
                                    Type: "Argument Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[10, 5] (112)"
                                IterEnd: "[15, 7] (184)"
                                Type: "Repeat: {Argument Items, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[16, 1] (185)"
                                IterEnd: "[16, 2] (186)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(185, 186), match=')'>"
                                Whitespace: None
                            IterBegin: "[9, 12] (106)"
                            IterEnd: "[16, 2] (186)"
                            Type: "Arguments <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[9, 8] (102)"
                        IterEnd: "[16, 2] (186)"
                        Type: "Func Invocation Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[9, 8] (102)"
                    IterEnd: "[16, 2] (186)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[9, 8] (102)"
                IterEnd: "[16, 2] (186)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[16, 2] (186)"
                IterEnd: "[17, 1] (187)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 187
                  Start: 186
                Whitespace: None
            IterBegin: "[9, 1] (95)"
            IterEnd: "[17, 1] (187)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[9, 1] (95)"
        IterEnd: "[17, 1] (187)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[9, 1] (95)"
    IterEnd: "[17, 1] (187)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[17, 1] (187)"
Type: "<None>"
