# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Documentation: None
Regions__: # <class 'types.RootParserInfoRegions'>
  Documentation: None
  Self__: "[Ln 1, Col 1] -> [Ln 3, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.FuncInvocationStatementParserInfo.FuncInvocationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
      Arguments:
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
            Name: "a"
            Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
              Name: "[Ln 1, Col 7] -> [Ln 1, Col 8]"
              Self__: "[Ln 1, Col 7] -> [Ln 1, Col 8]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 1, Col 7] -> [Ln 1, Col 8]"
            Keyword: None
            Self__: "[Ln 1, Col 7] -> [Ln 1, Col 8]"
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
            Name: "b"
            Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
              Name: "[Ln 1, Col 10] -> [Ln 1, Col 11]"
              Self__: "[Ln 1, Col 10] -> [Ln 1, Col 11]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 1, Col 10] -> [Ln 1, Col 11]"
            Keyword: None
            Self__: "[Ln 1, Col 10] -> [Ln 1, Col 11]"
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
            Name: "c"
            Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
              Name: "[Ln 1, Col 13] -> [Ln 1, Col 14]"
              Self__: "[Ln 1, Col 13] -> [Ln 1, Col 14]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 1, Col 13] -> [Ln 1, Col 14]"
            Keyword: None
            Self__: "[Ln 1, Col 13] -> [Ln 1, Col 14]"
      Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
        Name: "Func1"
        Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
          Name: "[Ln 1, Col 1] -> [Ln 1, Col 6]"
          Self__: "[Ln 1, Col 1] -> [Ln 1, Col 6]"
      Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
        Arguments: "[Ln 1, Col 6] -> [Ln 1, Col 15]"
        Expression: "[Ln 1, Col 1] -> [Ln 1, Col 6]"
        Self__: "[Ln 1, Col 1] -> [Ln 1, Col 15]"
    Regions__: # <class 'types.FuncInvocationStatementParserInfoRegions'>
      Expression: "[Ln 1, Col 1] -> [Ln 1, Col 15]"
      Self__: "[Ln 1, Col 1] -> [Ln 2, Col 1]"
  - # <class 'Original.Parser.Statements.FuncInvocationStatementParserInfo.FuncInvocationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
      Arguments:
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
            Name: "e"
            Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
              Name: "[Ln 2, Col 7] -> [Ln 2, Col 8]"
              Self__: "[Ln 2, Col 7] -> [Ln 2, Col 8]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 2, Col 7] -> [Ln 2, Col 8]"
            Keyword: None
            Self__: "[Ln 2, Col 7] -> [Ln 2, Col 8]"
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.FuncInvocationExpressionParserInfo.FuncInvocationExpressionParserInfo'>
            Arguments:
              - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
                Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
                  Name: "f"
                  Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                    Name: "[Ln 2, Col 20] -> [Ln 2, Col 21]"
                    Self__: "[Ln 2, Col 20] -> [Ln 2, Col 21]"
                Keyword: None
                Regions__: # <class 'types.ArgumentParserInfoRegions'>
                  Expression: "[Ln 2, Col 20] -> [Ln 2, Col 21]"
                  Keyword: None
                  Self__: "[Ln 2, Col 20] -> [Ln 2, Col 21]"
              - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
                Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
                  Left: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
                    Name: "g"
                    Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                      Name: "[Ln 2, Col 23] -> [Ln 2, Col 24]"
                      Self__: "[Ln 2, Col 23] -> [Ln 2, Col 24]"
                  Operator: "OperatorType.Divide"
                  Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
                    Left: "[Ln 2, Col 23] -> [Ln 2, Col 24]"
                    Operator: "[Ln 2, Col 25] -> [Ln 2, Col 26]"
                    Right: "[Ln 2, Col 27] -> [Ln 2, Col 28]"
                    Self__: "[Ln 2, Col 23] -> [Ln 2, Col 28]"
                  Right: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
                    Name: "h"
                    Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                      Name: "[Ln 2, Col 27] -> [Ln 2, Col 28]"
                      Self__: "[Ln 2, Col 27] -> [Ln 2, Col 28]"
                Keyword: None
                Regions__: # <class 'types.ArgumentParserInfoRegions'>
                  Expression: "[Ln 2, Col 23] -> [Ln 2, Col 28]"
                  Keyword: None
                  Self__: "[Ln 2, Col 23] -> [Ln 2, Col 28]"
            Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
              Name: "InnerFunc"
              Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
                Name: "[Ln 2, Col 10] -> [Ln 2, Col 19]"
                Self__: "[Ln 2, Col 10] -> [Ln 2, Col 19]"
            Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
              Arguments: "[Ln 2, Col 19] -> [Ln 2, Col 29]"
              Expression: "[Ln 2, Col 10] -> [Ln 2, Col 19]"
              Self__: "[Ln 2, Col 10] -> [Ln 2, Col 29]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 2, Col 10] -> [Ln 2, Col 29]"
            Keyword: None
            Self__: "[Ln 2, Col 10] -> [Ln 2, Col 29]"
        - # <class 'Original.Parser.Common.ArgumentParserInfo.ArgumentParserInfo'>
          Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
            Name: "i"
            Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
              Name: "[Ln 2, Col 31] -> [Ln 2, Col 32]"
              Self__: "[Ln 2, Col 31] -> [Ln 2, Col 32]"
          Keyword: None
          Regions__: # <class 'types.ArgumentParserInfoRegions'>
            Expression: "[Ln 2, Col 31] -> [Ln 2, Col 32]"
            Keyword: None
            Self__: "[Ln 2, Col 31] -> [Ln 2, Col 32]"
      Expression: # <class 'Original.Parser.Expressions.GenericNameExpressionParserInfo.GenericNameExpressionParserInfo'>
        Name: "Func2"
        Regions__: # <class 'types.GenericNameExpressionParserInfoRegions'>
          Name: "[Ln 2, Col 1] -> [Ln 2, Col 6]"
          Self__: "[Ln 2, Col 1] -> [Ln 2, Col 6]"
      Regions__: # <class 'types.FuncInvocationExpressionParserInfoRegions'>
        Arguments: "[Ln 2, Col 6] -> [Ln 2, Col 33]"
        Expression: "[Ln 2, Col 1] -> [Ln 2, Col 6]"
        Self__: "[Ln 2, Col 1] -> [Ln 2, Col 33]"
    Regions__: # <class 'types.FuncInvocationStatementParserInfoRegions'>
      Expression: "[Ln 2, Col 1] -> [Ln 2, Col 33]"
      Self__: "[Ln 2, Col 1] -> [Ln 3, Col 1]"
