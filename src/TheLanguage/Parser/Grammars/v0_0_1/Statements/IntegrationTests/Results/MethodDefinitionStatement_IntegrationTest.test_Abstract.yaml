# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 10] (9)"
                    Type: "Type Modifier <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(0, 9), match='protected'>"
                    Whitespace: None
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 10] (9)"
                Type: "Repeat: {Visibility, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                        IsIgnored: False
                        IterBegin: "[1, 11] (10)"
                        IterEnd: "[1, 19] (18)"
                        Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(10, 18), match='abstract'>"
                        Whitespace:
                          - 9
                          - 10
                    IterBegin: "[1, 11] (10)"
                    IterEnd: "[1, 19] (18)"
                    Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 11] (10)"
                IterEnd: "[1, 19] (18)"
                Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 20] (19)"
                            IterEnd: "[1, 23] (22)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(19, 22), match='Int'>"
                            Whitespace:
                              - 18
                              - 19
                        IterBegin: "[1, 20] (19)"
                        IterEnd: "[1, 23] (22)"
                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 20] (19)"
                    IterEnd: "[1, 23] (22)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 20] (19)"
                IterEnd: "[1, 23] (22)"
                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 24] (23)"
                IterEnd: "[1, 31] (30)"
                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(23, 30), match='Method1'>"
                Whitespace:
                  - 22
                  - 23
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 31] (30)"
                    IterEnd: "[1, 32] (31)"
                    Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(30, 31), match='('>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 32] (31)"
                    IterEnd: "[1, 33] (32)"
                    Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(31, 32), match=')'>"
                    Whitespace: None
                IterBegin: "[1, 31] (30)"
                IterEnd: "[1, 33] (32)"
                Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 33] (32)"
                    IterEnd: "[2, 1] (33)"
                    Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                      End: 33
                      Start: 32
                    Whitespace: None
                IterBegin: "[1, 33] (32)"
                IterEnd: "[2, 1] (33)"
                Type: "Or: (Definition, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
            Info: # <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.MethodDefinitionStatement.MethodDefinitionStatement.NodeInfo'>
              ClassType: "ClassType.immutable"
              MethodType: "MethodType.abstract"
              Name: "Method1"
              Parameters: {}
              ReturnType: # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[1, 20] (19)"
                    IterEnd: "[1, 23] (22)"
                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(19, 22), match='Int'>"
                    Whitespace:
                      - 18
                      - 19
                IterBegin: "[1, 20] (19)"
                IterEnd: "[1, 23] (22)"
                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              Visibility: "VisibilityModifier.protected"
            IterBegin: "[1, 1] (0)"
            IterEnd: "[2, 1] (33)"
            Type: "Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[2, 1] (33)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[2, 1] (33)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                        IsIgnored: False
                        IterBegin: "[2, 1] (33)"
                        IterEnd: "[2, 9] (41)"
                        Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(33, 41), match='abstract'>"
                        Whitespace: None
                    IterBegin: "[2, 1] (33)"
                    IterEnd: "[2, 9] (41)"
                    Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 1] (33)"
                IterEnd: "[2, 9] (41)"
                Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 10] (42)"
                            IterEnd: "[2, 13] (45)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(42, 45), match='Int'>"
                            Whitespace:
                              - 41
                              - 42
                        IterBegin: "[2, 10] (42)"
                        IterEnd: "[2, 13] (45)"
                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[2, 10] (42)"
                    IterEnd: "[2, 13] (45)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 10] (42)"
                IterEnd: "[2, 13] (45)"
                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 14] (46)"
                IterEnd: "[2, 21] (53)"
                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(46, 53), match='Method2'>"
                Whitespace:
                  - 45
                  - 46
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[2, 21] (53)"
                    IterEnd: "[2, 22] (54)"
                    Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(53, 54), match='('>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[2, 22] (54)"
                    IterEnd: "[2, 23] (55)"
                    Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(54, 55), match=')'>"
                    Whitespace: None
                IterBegin: "[2, 21] (53)"
                IterEnd: "[2, 23] (55)"
                Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                        IsIgnored: False
                        IterBegin: "[2, 24] (56)"
                        IterEnd: "[2, 31] (63)"
                        Type: "'mutable' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(56, 63), match='mutable'>"
                        Whitespace:
                          - 55
                          - 56
                    IterBegin: "[2, 24] (56)"
                    IterEnd: "[2, 31] (63)"
                    Type: "Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 24] (56)"
                IterEnd: "[2, 31] (63)"
                Type: "Repeat: {Class Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[2, 31] (63)"
                    IterEnd: "[4, 1] (65)"
                    Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                      End: 65
                      Start: 63
                    Whitespace: None
                IterBegin: "[2, 31] (63)"
                IterEnd: "[4, 1] (65)"
                Type: "Or: (Definition, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
            Info: # <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.MethodDefinitionStatement.MethodDefinitionStatement.NodeInfo'>
              ClassType: "ClassType.mutable"
              MethodType: "MethodType.abstract"
              Name: "Method2"
              Parameters: {}
              ReturnType: # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[2, 10] (42)"
                    IterEnd: "[2, 13] (45)"
                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(42, 45), match='Int'>"
                    Whitespace:
                      - 41
                      - 42
                IterBegin: "[2, 10] (42)"
                IterEnd: "[2, 13] (45)"
                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              Visibility: "VisibilityModifier.private"
            IterBegin: "[2, 1] (33)"
            IterEnd: "[4, 1] (65)"
            Type: "Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[2, 1] (33)"
        IterEnd: "[4, 1] (65)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 1] (33)"
    IterEnd: "[4, 1] (65)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                        IsIgnored: False
                        IterBegin: "[4, 1] (65)"
                        IterEnd: "[4, 9] (73)"
                        Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(65, 73), match='abstract'>"
                        Whitespace: None
                    IterBegin: "[4, 1] (65)"
                    IterEnd: "[4, 9] (73)"
                    Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 1] (65)"
                IterEnd: "[4, 9] (73)"
                Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[4, 10] (74)"
                            IterEnd: "[4, 13] (77)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(74, 77), match='Int'>"
                            Whitespace:
                              - 73
                              - 74
                        IterBegin: "[4, 10] (74)"
                        IterEnd: "[4, 13] (77)"
                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[4, 10] (74)"
                    IterEnd: "[4, 13] (77)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 10] (74)"
                IterEnd: "[4, 13] (77)"
                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 14] (78)"
                IterEnd: "[4, 21] (85)"
                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(78, 85), match='Method3'>"
                Whitespace:
                  - 77
                  - 78
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[4, 21] (85)"
                    IterEnd: "[4, 22] (86)"
                    Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(85, 86), match='('>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[5, 5] (91)"
                                        IterEnd: "[5, 8] (94)"
                                        Type: "'pos' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(91, 94), match='pos'>"
                                        Whitespace: None
                                    IterBegin: "[5, 5] (91)"
                                    IterEnd: "[5, 8] (94)"
                                    Type: "Or: ('pos', 'any', 'key') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[5, 8] (94)"
                                    IterEnd: "[5, 9] (95)"
                                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(94, 95), match=':'>"
                                    Whitespace: None
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[6, 9] (104)"
                                                    IterEnd: "[6, 12] (107)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(104, 107), match='Int'>"
                                                    Whitespace: None
                                                IterBegin: "[6, 9] (104)"
                                                IterEnd: "[6, 12] (107)"
                                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[6, 9] (104)"
                                            IterEnd: "[6, 12] (107)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[6, 9] (104)"
                                        IterEnd: "[6, 12] (107)"
                                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[6, 13] (108)"
                                                    IterEnd: "[6, 14] (109)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(108, 109), match='a'>"
                                                    Whitespace:
                                                      - 107
                                                      - 108
                                                IterBegin: "[6, 13] (108)"
                                                IterEnd: "[6, 14] (109)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[6, 13] (108)"
                                            IterEnd: "[6, 14] (109)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[6, 13] (108)"
                                        IterEnd: "[6, 14] (109)"
                                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[6, 9] (104)"
                                    IterEnd: "[6, 14] (109)"
                                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[6, 14] (109)"
                                        IterEnd: "[6, 15] (110)"
                                        Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(109, 110), match=','>"
                                        Whitespace: None
                                    IterBegin: "[6, 14] (109)"
                                    IterEnd: "[6, 15] (110)"
                                    Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                IterBegin: "[5, 5] (91)"
                                IterEnd: "[6, 15] (110)"
                                Type: "New Style <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[7, 5] (115)"
                                        IterEnd: "[7, 8] (118)"
                                        Type: "'key' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(115, 118), match='key'>"
                                        Whitespace: None
                                    IterBegin: "[7, 5] (115)"
                                    IterEnd: "[7, 8] (118)"
                                    Type: "Or: ('pos', 'any', 'key') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[7, 8] (118)"
                                    IterEnd: "[7, 9] (119)"
                                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(118, 119), match=':'>"
                                    Whitespace: None
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[8, 9] (128)"
                                                    IterEnd: "[8, 13] (132)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(128, 132), match='Bool'>"
                                                    Whitespace: None
                                                IterBegin: "[8, 9] (128)"
                                                IterEnd: "[8, 13] (132)"
                                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[8, 9] (128)"
                                            IterEnd: "[8, 13] (132)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[8, 9] (128)"
                                        IterEnd: "[8, 13] (132)"
                                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[8, 14] (133)"
                                                    IterEnd: "[8, 15] (134)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(133, 134), match='b'>"
                                                    Whitespace:
                                                      - 132
                                                      - 133
                                                IterBegin: "[8, 14] (133)"
                                                IterEnd: "[8, 15] (134)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[8, 14] (133)"
                                            IterEnd: "[8, 15] (134)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[8, 14] (133)"
                                        IterEnd: "[8, 15] (134)"
                                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[8, 9] (128)"
                                    IterEnd: "[8, 15] (134)"
                                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[8, 15] (134)"
                                            IterEnd: "[8, 16] (135)"
                                            Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(134, 135), match=','>"
                                            Whitespace: None
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[8, 17] (136)"
                                                            IterEnd: "[8, 21] (140)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(136, 140), match='Char'>"
                                                            Whitespace:
                                                              - 135
                                                              - 136
                                                        IterBegin: "[8, 17] (136)"
                                                        IterEnd: "[8, 21] (140)"
                                                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[8, 17] (136)"
                                                    IterEnd: "[8, 21] (140)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[8, 17] (136)"
                                                IterEnd: "[8, 21] (140)"
                                                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[8, 22] (141)"
                                                            IterEnd: "[8, 23] (142)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(141, 142), match='c'>"
                                                            Whitespace:
                                                              - 140
                                                              - 141
                                                        IterBegin: "[8, 22] (141)"
                                                        IterEnd: "[8, 23] (142)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[8, 22] (141)"
                                                    IterEnd: "[8, 23] (142)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[8, 22] (141)"
                                                IterEnd: "[8, 23] (142)"
                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[8, 17] (136)"
                                            IterEnd: "[8, 23] (142)"
                                            Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[8, 15] (134)"
                                        IterEnd: "[8, 23] (142)"
                                        Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[8, 15] (134)"
                                    IterEnd: "[8, 23] (142)"
                                    Type: "Repeat: {Comma and Parameter, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                IterBegin: "[7, 5] (115)"
                                IterEnd: "[8, 23] (142)"
                                Type: "New Style <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[5, 5] (91)"
                            IterEnd: "[8, 23] (142)"
                            Type: "Repeat: {New Style, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                        IterBegin: "[5, 5] (91)"
                        IterEnd: "[8, 23] (142)"
                        Type: "Or: (Repeat: {New Style, 1, None}, Traditional) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[5, 5] (91)"
                    IterEnd: "[8, 23] (142)"
                    Type: "Repeat: {Or: (Repeat: {New Style, 1, None}, Traditional), 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[9, 1] (143)"
                    IterEnd: "[9, 2] (144)"
                    Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(143, 144), match=')'>"
                    Whitespace: None
                IterBegin: "[4, 21] (85)"
                IterEnd: "[9, 2] (144)"
                Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[9, 2] (144)"
                    IterEnd: "[11, 1] (146)"
                    Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                      End: 146
                      Start: 144
                    Whitespace: None
                IterBegin: "[9, 2] (144)"
                IterEnd: "[11, 1] (146)"
                Type: "Or: (Definition, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
            Info: # <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.MethodDefinitionStatement.MethodDefinitionStatement.NodeInfo'>
              ClassType: "ClassType.immutable"
              MethodType: "MethodType.abstract"
              Name: "Method3"
              Parameters:
                ParametersType.pos:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[6, 9] (104)"
                                    IterEnd: "[6, 12] (107)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(104, 107), match='Int'>"
                                    Whitespace: None
                                IterBegin: "[6, 9] (104)"
                                IterEnd: "[6, 12] (107)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[6, 9] (104)"
                            IterEnd: "[6, 12] (107)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[6, 9] (104)"
                        IterEnd: "[6, 12] (107)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[6, 13] (108)"
                                    IterEnd: "[6, 14] (109)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(108, 109), match='a'>"
                                    Whitespace:
                                      - 107
                                      - 108
                                IterBegin: "[6, 13] (108)"
                                IterEnd: "[6, 14] (109)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[6, 13] (108)"
                            IterEnd: "[6, 14] (109)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[6, 13] (108)"
                        IterEnd: "[6, 14] (109)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[6, 9] (104)"
                    IterEnd: "[6, 14] (109)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                ParametersType.key:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[8, 9] (128)"
                                    IterEnd: "[8, 13] (132)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(128, 132), match='Bool'>"
                                    Whitespace: None
                                IterBegin: "[8, 9] (128)"
                                IterEnd: "[8, 13] (132)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[8, 9] (128)"
                            IterEnd: "[8, 13] (132)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[8, 9] (128)"
                        IterEnd: "[8, 13] (132)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[8, 14] (133)"
                                    IterEnd: "[8, 15] (134)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(133, 134), match='b'>"
                                    Whitespace:
                                      - 132
                                      - 133
                                IterBegin: "[8, 14] (133)"
                                IterEnd: "[8, 15] (134)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[8, 14] (133)"
                            IterEnd: "[8, 15] (134)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[8, 14] (133)"
                        IterEnd: "[8, 15] (134)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[8, 9] (128)"
                    IterEnd: "[8, 15] (134)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[8, 17] (136)"
                                    IterEnd: "[8, 21] (140)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(136, 140), match='Char'>"
                                    Whitespace:
                                      - 135
                                      - 136
                                IterBegin: "[8, 17] (136)"
                                IterEnd: "[8, 21] (140)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[8, 17] (136)"
                            IterEnd: "[8, 21] (140)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[8, 17] (136)"
                        IterEnd: "[8, 21] (140)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[8, 22] (141)"
                                    IterEnd: "[8, 23] (142)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(141, 142), match='c'>"
                                    Whitespace:
                                      - 140
                                      - 141
                                IterBegin: "[8, 22] (141)"
                                IterEnd: "[8, 23] (142)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[8, 22] (141)"
                            IterEnd: "[8, 23] (142)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[8, 22] (141)"
                        IterEnd: "[8, 23] (142)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[8, 17] (136)"
                    IterEnd: "[8, 23] (142)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              ReturnType: # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[4, 10] (74)"
                    IterEnd: "[4, 13] (77)"
                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(74, 77), match='Int'>"
                    Whitespace:
                      - 73
                      - 74
                IterBegin: "[4, 10] (74)"
                IterEnd: "[4, 13] (77)"
                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              Visibility: "VisibilityModifier.private"
            IterBegin: "[4, 1] (65)"
            IterEnd: "[11, 1] (146)"
            Type: "Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[4, 1] (65)"
        IterEnd: "[11, 1] (146)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[4, 1] (65)"
    IterEnd: "[11, 1] (146)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                        IsIgnored: False
                        IterBegin: "[11, 1] (146)"
                        IterEnd: "[11, 9] (154)"
                        Type: "'abstract' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(146, 154), match='abstract'>"
                        Whitespace: None
                    IterBegin: "[11, 1] (146)"
                    IterEnd: "[11, 9] (154)"
                    Type: "Method Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[11, 1] (146)"
                IterEnd: "[11, 9] (154)"
                Type: "Repeat: {Method Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[11, 10] (155)"
                            IterEnd: "[11, 13] (158)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(155, 158), match='Int'>"
                            Whitespace:
                              - 154
                              - 155
                        IterBegin: "[11, 10] (155)"
                        IterEnd: "[11, 13] (158)"
                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[11, 10] (155)"
                    IterEnd: "[11, 13] (158)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[11, 10] (155)"
                IterEnd: "[11, 13] (158)"
                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[11, 14] (159)"
                IterEnd: "[11, 21] (166)"
                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(159, 166), match='Method4'>"
                Whitespace:
                  - 158
                  - 159
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[11, 21] (166)"
                    IterEnd: "[11, 22] (167)"
                    Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(166, 167), match='('>"
                    Whitespace: None
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[12, 5] (172)"
                                        IterEnd: "[12, 8] (175)"
                                        Type: "'pos' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(172, 175), match='pos'>"
                                        Whitespace: None
                                    IterBegin: "[12, 5] (172)"
                                    IterEnd: "[12, 8] (175)"
                                    Type: "Or: ('pos', 'any', 'key') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[12, 8] (175)"
                                    IterEnd: "[12, 9] (176)"
                                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(175, 176), match=':'>"
                                    Whitespace: None
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[13, 9] (185)"
                                                    IterEnd: "[13, 12] (188)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(185, 188), match='Int'>"
                                                    Whitespace: None
                                                IterBegin: "[13, 9] (185)"
                                                IterEnd: "[13, 12] (188)"
                                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[13, 9] (185)"
                                            IterEnd: "[13, 12] (188)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[13, 9] (185)"
                                        IterEnd: "[13, 12] (188)"
                                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[13, 13] (189)"
                                                    IterEnd: "[13, 14] (190)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(189, 190), match='a'>"
                                                    Whitespace:
                                                      - 188
                                                      - 189
                                                IterBegin: "[13, 13] (189)"
                                                IterEnd: "[13, 14] (190)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[13, 13] (189)"
                                            IterEnd: "[13, 14] (190)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[13, 13] (189)"
                                        IterEnd: "[13, 14] (190)"
                                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[13, 9] (185)"
                                    IterEnd: "[13, 14] (190)"
                                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[13, 14] (190)"
                                        IterEnd: "[13, 15] (191)"
                                        Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(190, 191), match=','>"
                                        Whitespace: None
                                    IterBegin: "[13, 14] (190)"
                                    IterEnd: "[13, 15] (191)"
                                    Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                IterBegin: "[12, 5] (172)"
                                IterEnd: "[13, 15] (191)"
                                Type: "New Style <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[14, 5] (196)"
                                        IterEnd: "[14, 8] (199)"
                                        Type: "'key' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(196, 199), match='key'>"
                                        Whitespace: None
                                    IterBegin: "[14, 5] (196)"
                                    IterEnd: "[14, 8] (199)"
                                    Type: "Or: ('pos', 'any', 'key') <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[14, 8] (199)"
                                    IterEnd: "[14, 9] (200)"
                                    Type: "':' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(199, 200), match=':'>"
                                    Whitespace: None
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[15, 9] (209)"
                                                    IterEnd: "[15, 13] (213)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(209, 213), match='Bool'>"
                                                    Whitespace: None
                                                IterBegin: "[15, 9] (209)"
                                                IterEnd: "[15, 13] (213)"
                                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[15, 9] (209)"
                                            IterEnd: "[15, 13] (213)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[15, 9] (209)"
                                        IterEnd: "[15, 13] (213)"
                                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[15, 14] (214)"
                                                    IterEnd: "[15, 15] (215)"
                                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(214, 215), match='b'>"
                                                    Whitespace:
                                                      - 213
                                                      - 214
                                                IterBegin: "[15, 14] (214)"
                                                IterEnd: "[15, 15] (215)"
                                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[15, 14] (214)"
                                            IterEnd: "[15, 15] (215)"
                                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                        IterBegin: "[15, 14] (214)"
                                        IterEnd: "[15, 15] (215)"
                                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                    IterBegin: "[15, 9] (209)"
                                    IterEnd: "[15, 15] (215)"
                                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[15, 15] (215)"
                                            IterEnd: "[15, 16] (216)"
                                            Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(215, 216), match=','>"
                                            Whitespace: None
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[15, 17] (217)"
                                                            IterEnd: "[15, 21] (221)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(217, 221), match='Char'>"
                                                            Whitespace:
                                                              - 216
                                                              - 217
                                                        IterBegin: "[15, 17] (217)"
                                                        IterEnd: "[15, 21] (221)"
                                                        Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[15, 17] (217)"
                                                    IterEnd: "[15, 21] (221)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[15, 17] (217)"
                                                IterEnd: "[15, 21] (221)"
                                                Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[15, 22] (222)"
                                                            IterEnd: "[15, 23] (223)"
                                                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(222, 223), match='c'>"
                                                            Whitespace:
                                                              - 221
                                                              - 222
                                                        IterBegin: "[15, 22] (222)"
                                                        IterEnd: "[15, 23] (223)"
                                                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[15, 22] (222)"
                                                    IterEnd: "[15, 23] (223)"
                                                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                IterBegin: "[15, 22] (222)"
                                                IterEnd: "[15, 23] (223)"
                                                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                            IterBegin: "[15, 17] (217)"
                                            IterEnd: "[15, 23] (223)"
                                            Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[15, 15] (215)"
                                        IterEnd: "[15, 23] (223)"
                                        Type: "Comma and Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[15, 15] (215)"
                                    IterEnd: "[15, 23] (223)"
                                    Type: "Repeat: {Comma and Parameter, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                IterBegin: "[14, 5] (196)"
                                IterEnd: "[15, 23] (223)"
                                Type: "New Style <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[12, 5] (172)"
                            IterEnd: "[15, 23] (223)"
                            Type: "Repeat: {New Style, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                        IterBegin: "[12, 5] (172)"
                        IterEnd: "[15, 23] (223)"
                        Type: "Or: (Repeat: {New Style, 1, None}, Traditional) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[12, 5] (172)"
                    IterEnd: "[15, 23] (223)"
                    Type: "Repeat: {Or: (Repeat: {New Style, 1, None}, Traditional), 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[16, 1] (224)"
                    IterEnd: "[16, 2] (225)"
                    Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(224, 225), match=')'>"
                    Whitespace: None
                IterBegin: "[11, 21] (166)"
                IterEnd: "[16, 2] (225)"
                Type: "Parameters <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                        IsIgnored: False
                        IterBegin: "[16, 3] (226)"
                        IterEnd: "[16, 10] (233)"
                        Type: "'mutable' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                          Match: "<_sre.SRE_Match object; span=(226, 233), match='mutable'>"
                        Whitespace:
                          - 225
                          - 226
                    IterBegin: "[16, 3] (226)"
                    IterEnd: "[16, 10] (233)"
                    Type: "Class Type <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[16, 3] (226)"
                IterEnd: "[16, 10] (233)"
                Type: "Repeat: {Class Type, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[16, 10] (233)"
                    IterEnd: "[17, 1] (234)"
                    Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                      End: 234
                      Start: 233
                    Whitespace: None
                IterBegin: "[16, 10] (233)"
                IterEnd: "[17, 1] (234)"
                Type: "Or: (Definition, Newline+) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
            Info: # <class 'TheLanguage.Parser.Grammars.v0_0_1.Statements.MethodDefinitionStatement.MethodDefinitionStatement.NodeInfo'>
              ClassType: "ClassType.mutable"
              MethodType: "MethodType.abstract"
              Name: "Method4"
              Parameters:
                ParametersType.pos:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[13, 9] (185)"
                                    IterEnd: "[13, 12] (188)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(185, 188), match='Int'>"
                                    Whitespace: None
                                IterBegin: "[13, 9] (185)"
                                IterEnd: "[13, 12] (188)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[13, 9] (185)"
                            IterEnd: "[13, 12] (188)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[13, 9] (185)"
                        IterEnd: "[13, 12] (188)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[13, 13] (189)"
                                    IterEnd: "[13, 14] (190)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(189, 190), match='a'>"
                                    Whitespace:
                                      - 188
                                      - 189
                                IterBegin: "[13, 13] (189)"
                                IterEnd: "[13, 14] (190)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[13, 13] (189)"
                            IterEnd: "[13, 14] (190)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[13, 13] (189)"
                        IterEnd: "[13, 14] (190)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[13, 9] (185)"
                    IterEnd: "[13, 14] (190)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                ParametersType.key:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[15, 9] (209)"
                                    IterEnd: "[15, 13] (213)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(209, 213), match='Bool'>"
                                    Whitespace: None
                                IterBegin: "[15, 9] (209)"
                                IterEnd: "[15, 13] (213)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[15, 9] (209)"
                            IterEnd: "[15, 13] (213)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[15, 9] (209)"
                        IterEnd: "[15, 13] (213)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[15, 14] (214)"
                                    IterEnd: "[15, 15] (215)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(214, 215), match='b'>"
                                    Whitespace:
                                      - 213
                                      - 214
                                IterBegin: "[15, 14] (214)"
                                IterEnd: "[15, 15] (215)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[15, 14] (214)"
                            IterEnd: "[15, 15] (215)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[15, 14] (214)"
                        IterEnd: "[15, 15] (215)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[15, 9] (209)"
                    IterEnd: "[15, 15] (215)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[15, 17] (217)"
                                    IterEnd: "[15, 21] (221)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(217, 221), match='Char'>"
                                    Whitespace:
                                      - 216
                                      - 217
                                IterBegin: "[15, 17] (217)"
                                IterEnd: "[15, 21] (221)"
                                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[15, 17] (217)"
                            IterEnd: "[15, 21] (221)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[15, 17] (217)"
                        IterEnd: "[15, 21] (221)"
                        Type: "DynamicPhrasesType.Types <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[15, 22] (222)"
                                    IterEnd: "[15, 23] (223)"
                                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(222, 223), match='c'>"
                                    Whitespace:
                                      - 221
                                      - 222
                                IterBegin: "[15, 22] (222)"
                                IterEnd: "[15, 23] (223)"
                                Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[15, 22] (222)"
                            IterEnd: "[15, 23] (223)"
                            Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[15, 22] (222)"
                        IterEnd: "[15, 23] (223)"
                        Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                    IterBegin: "[15, 17] (217)"
                    IterEnd: "[15, 23] (223)"
                    Type: "Parameter <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              ReturnType: # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                    IsIgnored: False
                    IterBegin: "[11, 10] (155)"
                    IterEnd: "[11, 13] (158)"
                    Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                      Match: "<_sre.SRE_Match object; span=(155, 158), match='Int'>"
                    Whitespace:
                      - 154
                      - 155
                IterBegin: "[11, 10] (155)"
                IterEnd: "[11, 13] (158)"
                Type: "Standard Type <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
              Visibility: "VisibilityModifier.private"
            IterBegin: "[11, 1] (146)"
            IterEnd: "[17, 1] (234)"
            Type: "Method Definition Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[11, 1] (146)"
        IterEnd: "[17, 1] (234)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[11, 1] (146)"
    IterEnd: "[17, 1] (234)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[17, 1] (234)"
Type: "<None>"
