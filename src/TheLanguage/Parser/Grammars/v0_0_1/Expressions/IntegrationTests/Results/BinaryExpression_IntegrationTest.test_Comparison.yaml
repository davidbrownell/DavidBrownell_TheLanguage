# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 1] (0)"
                            IterEnd: "[1, 5] (4)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(0, 4), match='var1'>"
                            Whitespace: None
                        IterBegin: "[1, 1] (0)"
                        IterEnd: "[1, 5] (4)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 5] (4)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 5] (4)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 6] (5)"
                IterEnd: "[1, 7] (6)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(5, 6), match='='>"
                Whitespace:
                  - 4
                  - 5
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[1, 8] (7)"
                                                IterEnd: "[1, 11] (10)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(7, 10), match='one'>"
                                                Whitespace:
                                                  - 6
                                                  - 7
                                            IterBegin: "[1, 8] (7)"
                                            IterEnd: "[1, 11] (10)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[1, 8] (7)"
                                        IterEnd: "[1, 11] (10)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[1, 8] (7)"
                                    IterEnd: "[1, 11] (10)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[1, 8] (7)"
                                IterEnd: "[1, 11] (10)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[1, 8] (7)"
                            IterEnd: "[1, 11] (10)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 12] (11)"
                                IterEnd: "[1, 13] (12)"
                                Type: "'<' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(11, 12), match='<'>"
                                Whitespace:
                                  - 10
                                  - 11
                            IterBegin: "[1, 12] (11)"
                            IterEnd: "[1, 13] (12)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[1, 14] (13)"
                                                IterEnd: "[1, 17] (16)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(13, 16), match='two'>"
                                                Whitespace:
                                                  - 12
                                                  - 13
                                            IterBegin: "[1, 14] (13)"
                                            IterEnd: "[1, 17] (16)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[1, 14] (13)"
                                        IterEnd: "[1, 17] (16)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[1, 14] (13)"
                                    IterEnd: "[1, 17] (16)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[1, 14] (13)"
                                IterEnd: "[1, 17] (16)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[1, 14] (13)"
                            IterEnd: "[1, 17] (16)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        IterBegin: "[1, 8] (7)"
                        IterEnd: "[1, 17] (16)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 8] (7)"
                    IterEnd: "[1, 17] (16)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 8] (7)"
                IterEnd: "[1, 17] (16)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 17] (16)"
                IterEnd: "[2, 1] (17)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 17
                  Start: 16
                Whitespace: None
            IterBegin: "[1, 1] (0)"
            IterEnd: "[2, 1] (17)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[2, 1] (17)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[2, 1] (17)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[2, 1] (17)"
                            IterEnd: "[2, 5] (21)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(17, 21), match='var2'>"
                            Whitespace: None
                        IterBegin: "[2, 1] (17)"
                        IterEnd: "[2, 5] (21)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[2, 1] (17)"
                    IterEnd: "[2, 5] (21)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 1] (17)"
                IterEnd: "[2, 5] (21)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 6] (22)"
                IterEnd: "[2, 7] (23)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(22, 23), match='='>"
                Whitespace:
                  - 21
                  - 22
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 8] (24)"
                                                IterEnd: "[2, 13] (29)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(24, 29), match='three'>"
                                                Whitespace:
                                                  - 23
                                                  - 24
                                            IterBegin: "[2, 8] (24)"
                                            IterEnd: "[2, 13] (29)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[2, 8] (24)"
                                        IterEnd: "[2, 13] (29)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[2, 8] (24)"
                                    IterEnd: "[2, 13] (29)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[2, 8] (24)"
                                IterEnd: "[2, 13] (29)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[2, 8] (24)"
                            IterEnd: "[2, 13] (29)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[2, 14] (30)"
                                IterEnd: "[2, 16] (32)"
                                Type: "'<=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(30, 32), match='<='>"
                                Whitespace:
                                  - 29
                                  - 30
                            IterBegin: "[2, 14] (30)"
                            IterEnd: "[2, 16] (32)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[2, 17] (33)"
                                                IterEnd: "[2, 21] (37)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(33, 37), match='four'>"
                                                Whitespace:
                                                  - 32
                                                  - 33
                                            IterBegin: "[2, 17] (33)"
                                            IterEnd: "[2, 21] (37)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[2, 17] (33)"
                                        IterEnd: "[2, 21] (37)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[2, 17] (33)"
                                    IterEnd: "[2, 21] (37)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[2, 17] (33)"
                                IterEnd: "[2, 21] (37)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[2, 17] (33)"
                            IterEnd: "[2, 21] (37)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        IterBegin: "[2, 8] (24)"
                        IterEnd: "[2, 21] (37)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[2, 8] (24)"
                    IterEnd: "[2, 21] (37)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[2, 8] (24)"
                IterEnd: "[2, 21] (37)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 21] (37)"
                IterEnd: "[3, 1] (38)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 38
                  Start: 37
                Whitespace: None
            IterBegin: "[2, 1] (17)"
            IterEnd: "[3, 1] (38)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[2, 1] (17)"
        IterEnd: "[3, 1] (38)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 1] (17)"
    IterEnd: "[3, 1] (38)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[3, 1] (38)"
                            IterEnd: "[3, 5] (42)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(38, 42), match='var3'>"
                            Whitespace: None
                        IterBegin: "[3, 1] (38)"
                        IterEnd: "[3, 5] (42)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[3, 1] (38)"
                    IterEnd: "[3, 5] (42)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[3, 1] (38)"
                IterEnd: "[3, 5] (42)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[3, 6] (43)"
                IterEnd: "[3, 7] (44)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(43, 44), match='='>"
                Whitespace:
                  - 42
                  - 43
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[3, 8] (45)"
                                                IterEnd: "[3, 11] (48)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(45, 48), match='six'>"
                                                Whitespace:
                                                  - 44
                                                  - 45
                                            IterBegin: "[3, 8] (45)"
                                            IterEnd: "[3, 11] (48)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[3, 8] (45)"
                                        IterEnd: "[3, 11] (48)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[3, 8] (45)"
                                    IterEnd: "[3, 11] (48)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[3, 8] (45)"
                                IterEnd: "[3, 11] (48)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[3, 8] (45)"
                            IterEnd: "[3, 11] (48)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[3, 12] (49)"
                                IterEnd: "[3, 13] (50)"
                                Type: "'>' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(49, 50), match='>'>"
                                Whitespace:
                                  - 48
                                  - 49
                            IterBegin: "[3, 12] (49)"
                            IterEnd: "[3, 13] (50)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[3, 14] (51)"
                                                IterEnd: "[3, 19] (56)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(51, 56), match='seven'>"
                                                Whitespace:
                                                  - 50
                                                  - 51
                                            IterBegin: "[3, 14] (51)"
                                            IterEnd: "[3, 19] (56)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[3, 14] (51)"
                                        IterEnd: "[3, 19] (56)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[3, 14] (51)"
                                    IterEnd: "[3, 19] (56)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[3, 14] (51)"
                                IterEnd: "[3, 19] (56)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[3, 14] (51)"
                            IterEnd: "[3, 19] (56)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        IterBegin: "[3, 8] (45)"
                        IterEnd: "[3, 19] (56)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[3, 8] (45)"
                    IterEnd: "[3, 19] (56)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[3, 8] (45)"
                IterEnd: "[3, 19] (56)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[3, 19] (56)"
                IterEnd: "[4, 1] (57)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 57
                  Start: 56
                Whitespace: None
            IterBegin: "[3, 1] (38)"
            IterEnd: "[4, 1] (57)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[3, 1] (38)"
        IterEnd: "[4, 1] (57)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[3, 1] (38)"
    IterEnd: "[4, 1] (57)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[4, 1] (57)"
                            IterEnd: "[4, 5] (61)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(57, 61), match='var4'>"
                            Whitespace: None
                        IterBegin: "[4, 1] (57)"
                        IterEnd: "[4, 5] (61)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[4, 1] (57)"
                    IterEnd: "[4, 5] (61)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 1] (57)"
                IterEnd: "[4, 5] (61)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 6] (62)"
                IterEnd: "[4, 7] (63)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(62, 63), match='='>"
                Whitespace:
                  - 61
                  - 62
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[4, 8] (64)"
                                                IterEnd: "[4, 13] (69)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(64, 69), match='eight'>"
                                                Whitespace:
                                                  - 63
                                                  - 64
                                            IterBegin: "[4, 8] (64)"
                                            IterEnd: "[4, 13] (69)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[4, 8] (64)"
                                        IterEnd: "[4, 13] (69)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[4, 8] (64)"
                                    IterEnd: "[4, 13] (69)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[4, 8] (64)"
                                IterEnd: "[4, 13] (69)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[4, 8] (64)"
                            IterEnd: "[4, 13] (69)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[4, 14] (70)"
                                IterEnd: "[4, 16] (72)"
                                Type: "'>=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(70, 72), match='>='>"
                                Whitespace:
                                  - 69
                                  - 70
                            IterBegin: "[4, 14] (70)"
                            IterEnd: "[4, 16] (72)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[4, 17] (73)"
                                                IterEnd: "[4, 21] (77)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(73, 77), match='nine'>"
                                                Whitespace:
                                                  - 72
                                                  - 73
                                            IterBegin: "[4, 17] (73)"
                                            IterEnd: "[4, 21] (77)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[4, 17] (73)"
                                        IterEnd: "[4, 21] (77)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[4, 17] (73)"
                                    IterEnd: "[4, 21] (77)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[4, 17] (73)"
                                IterEnd: "[4, 21] (77)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[4, 17] (73)"
                            IterEnd: "[4, 21] (77)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        IterBegin: "[4, 8] (64)"
                        IterEnd: "[4, 21] (77)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[4, 8] (64)"
                    IterEnd: "[4, 21] (77)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[4, 8] (64)"
                IterEnd: "[4, 21] (77)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[4, 21] (77)"
                IterEnd: "[5, 1] (78)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 78
                  Start: 77
                Whitespace: None
            IterBegin: "[4, 1] (57)"
            IterEnd: "[5, 1] (78)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[4, 1] (57)"
        IterEnd: "[5, 1] (78)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[4, 1] (57)"
    IterEnd: "[5, 1] (78)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[5, 1] (78)"
                            IterEnd: "[5, 5] (82)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(78, 82), match='var5'>"
                            Whitespace: None
                        IterBegin: "[5, 1] (78)"
                        IterEnd: "[5, 5] (82)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[5, 1] (78)"
                    IterEnd: "[5, 5] (82)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[5, 1] (78)"
                IterEnd: "[5, 5] (82)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[5, 6] (83)"
                IterEnd: "[5, 7] (84)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(83, 84), match='='>"
                Whitespace:
                  - 82
                  - 83
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 8] (85)"
                                                IterEnd: "[5, 11] (88)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(85, 88), match='ten'>"
                                                Whitespace:
                                                  - 84
                                                  - 85
                                            IterBegin: "[5, 8] (85)"
                                            IterEnd: "[5, 11] (88)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[5, 8] (85)"
                                        IterEnd: "[5, 11] (88)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[5, 8] (85)"
                                    IterEnd: "[5, 11] (88)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[5, 8] (85)"
                                IterEnd: "[5, 11] (88)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[5, 8] (85)"
                            IterEnd: "[5, 11] (88)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[5, 12] (89)"
                                IterEnd: "[5, 14] (91)"
                                Type: "'==' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(89, 91), match='=='>"
                                Whitespace:
                                  - 88
                                  - 89
                            IterBegin: "[5, 12] (89)"
                            IterEnd: "[5, 14] (91)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 15] (92)"
                                                IterEnd: "[5, 21] (98)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(92, 98), match='eleven'>"
                                                Whitespace:
                                                  - 91
                                                  - 92
                                            IterBegin: "[5, 15] (92)"
                                            IterEnd: "[5, 21] (98)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[5, 15] (92)"
                                        IterEnd: "[5, 21] (98)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[5, 15] (92)"
                                    IterEnd: "[5, 21] (98)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[5, 15] (92)"
                                IterEnd: "[5, 21] (98)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[5, 15] (92)"
                            IterEnd: "[5, 21] (98)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        IterBegin: "[5, 8] (85)"
                        IterEnd: "[5, 21] (98)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[5, 8] (85)"
                    IterEnd: "[5, 21] (98)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[5, 8] (85)"
                IterEnd: "[5, 21] (98)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[5, 21] (98)"
                IterEnd: "[6, 1] (99)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 99
                  Start: 98
                Whitespace: None
            IterBegin: "[5, 1] (78)"
            IterEnd: "[6, 1] (99)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[5, 1] (78)"
        IterEnd: "[6, 1] (99)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[5, 1] (78)"
    IterEnd: "[6, 1] (99)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[6, 1] (99)"
                            IterEnd: "[6, 5] (103)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(99, 103), match='var6'>"
                            Whitespace: None
                        IterBegin: "[6, 1] (99)"
                        IterEnd: "[6, 5] (103)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[6, 1] (99)"
                    IterEnd: "[6, 5] (103)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[6, 1] (99)"
                IterEnd: "[6, 5] (103)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[6, 6] (104)"
                IterEnd: "[6, 7] (105)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(104, 105), match='='>"
                Whitespace:
                  - 103
                  - 104
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[6, 8] (106)"
                                                IterEnd: "[6, 14] (112)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(106, 112), match='twelve'>"
                                                Whitespace:
                                                  - 105
                                                  - 106
                                            IterBegin: "[6, 8] (106)"
                                            IterEnd: "[6, 14] (112)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[6, 8] (106)"
                                        IterEnd: "[6, 14] (112)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[6, 8] (106)"
                                    IterEnd: "[6, 14] (112)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[6, 8] (106)"
                                IterEnd: "[6, 14] (112)"
                                Type: "Left Recursive Wrapper <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[6, 8] (106)"
                            IterEnd: "[6, 14] (112)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[6, 15] (113)"
                                IterEnd: "[6, 17] (115)"
                                Type: "'!=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(113, 115), match='!='>"
                                Whitespace:
                                  - 112
                                  - 113
                            IterBegin: "[6, 15] (113)"
                            IterEnd: "[6, 17] (115)"
                            Type: "Operator <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[6, 18] (116)"
                                                IterEnd: "[6, 26] (124)"
                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(116, 124), match='thirteen'>"
                                                Whitespace:
                                                  - 115
                                                  - 116
                                            IterBegin: "[6, 18] (116)"
                                            IterEnd: "[6, 26] (124)"
                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[6, 18] (116)"
                                        IterEnd: "[6, 26] (124)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[6, 18] (116)"
                                    IterEnd: "[6, 26] (124)"
                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                IterBegin: "[6, 18] (116)"
                                IterEnd: "[6, 26] (124)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            IterBegin: "[6, 18] (116)"
                            IterEnd: "[6, 26] (124)"
                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        IterBegin: "[6, 8] (106)"
                        IterEnd: "[6, 26] (124)"
                        Type: "Binary Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[6, 8] (106)"
                    IterEnd: "[6, 26] (124)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[6, 8] (106)"
                IterEnd: "[6, 26] (124)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[6, 26] (124)"
                IterEnd: "[7, 1] (125)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 125
                  Start: 124
                Whitespace: None
            IterBegin: "[6, 1] (99)"
            IterEnd: "[7, 1] (125)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[6, 1] (99)"
        IterEnd: "[7, 1] (125)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[6, 1] (99)"
    IterEnd: "[7, 1] (125)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[7, 1] (125)"
Type: "<None>"
