# <class 'TheLanguage.Lexer.Components.Phrase.Phrase.LexResult'>
Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleStandardLexResultData'>
    DataItems:
      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[2, 1] (8)"
          IterEnd: "[2, 6] (13)"
          Token: "Word Token"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(8, 13), match='three'>"
          Whitespace: None
        Phrase: "Word Token"
      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[2, 7] (14)"
          IterEnd: "[2, 11] (18)"
          Token: "Word Token"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(14, 18), match='four'>"
          Whitespace:
            - 13
            - 14
        Phrase: "Word Token"
      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[2, 11] (18)"
          IterEnd: "[3, 1] (19)"
          Token: "Newline+"
          Value: # <class 'TheLanguage.Lexer.Components.Token.NewlineToken.MatchResult'>
            End: 19
            Start: 18
          Whitespace: None
        Phrase: "Newline+"
    IsComplete: True
  Phrase: "Phrase"
IterBegin: "[2, 1] (8)"
IterEnd: "[3, 1] (19)"
Success: True
