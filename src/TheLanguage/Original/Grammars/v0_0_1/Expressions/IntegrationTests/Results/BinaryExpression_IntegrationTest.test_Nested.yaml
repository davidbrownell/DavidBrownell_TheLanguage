# <class 'Original.Parser.RootParserInfo.RootParserInfo'>
Regions__: # <class 'types.RootParserInfoRegions'>
  Self__: "[Ln 1, Col 1] -> [Ln 2, Col 1]"
Statements:
  - # <class 'Original.Parser.Statements.VariableDeclarationStatementParserInfo.VariableDeclarationStatementParserInfo'>
    Expression: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
      Left: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
        Left: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
          Left: # <class 'Original.Parser.Expressions.BinaryExpressionParserInfo.BinaryExpressionParserInfo'>
            Left: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "one"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
                  Self__: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
                Self__: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
            Operator: "OperatorType.Add"
            Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
              Left: "[Ln 1, Col 8] -> [Ln 1, Col 11]"
              Operator: "[Ln 1, Col 12] -> [Ln 1, Col 13]"
              Right: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
              Self__: "[Ln 1, Col 8] -> [Ln 1, Col 17]"
            Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
              Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
                Name: "two"
                Regions__: # <class 'types.VariableNameParserInfoRegions'>
                  Name: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
                  Self__: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
              Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
                Name: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
                Self__: "[Ln 1, Col 14] -> [Ln 1, Col 17]"
          Operator: "OperatorType.Add"
          Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
            Left: "[Ln 1, Col 8] -> [Ln 1, Col 17]"
            Operator: "[Ln 1, Col 18] -> [Ln 1, Col 19]"
            Right: "[Ln 1, Col 20] -> [Ln 1, Col 25]"
            Self__: "[Ln 1, Col 8] -> [Ln 1, Col 25]"
          Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
            Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
              Name: "three"
              Regions__: # <class 'types.VariableNameParserInfoRegions'>
                Name: "[Ln 1, Col 20] -> [Ln 1, Col 25]"
                Self__: "[Ln 1, Col 20] -> [Ln 1, Col 25]"
            Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
              Name: "[Ln 1, Col 20] -> [Ln 1, Col 25]"
              Self__: "[Ln 1, Col 20] -> [Ln 1, Col 25]"
        Operator: "OperatorType.Subtract"
        Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
          Left: "[Ln 1, Col 8] -> [Ln 1, Col 25]"
          Operator: "[Ln 1, Col 26] -> [Ln 1, Col 27]"
          Right: "[Ln 1, Col 28] -> [Ln 1, Col 32]"
          Self__: "[Ln 1, Col 8] -> [Ln 1, Col 32]"
        Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
          Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
            Name: "four"
            Regions__: # <class 'types.VariableNameParserInfoRegions'>
              Name: "[Ln 1, Col 28] -> [Ln 1, Col 32]"
              Self__: "[Ln 1, Col 28] -> [Ln 1, Col 32]"
          Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
            Name: "[Ln 1, Col 28] -> [Ln 1, Col 32]"
            Self__: "[Ln 1, Col 28] -> [Ln 1, Col 32]"
      Operator: "OperatorType.Equal"
      Regions__: # <class 'types.BinaryExpressionParserInfoRegions'>
        Left: "[Ln 1, Col 8] -> [Ln 1, Col 32]"
        Operator: "[Ln 1, Col 33] -> [Ln 1, Col 35]"
        Right: "[Ln 1, Col 36] -> [Ln 1, Col 40]"
        Self__: "[Ln 1, Col 8] -> [Ln 1, Col 40]"
      Right: # <class 'Original.Parser.Expressions.VariableExpressionParserInfo.VariableExpressionParserInfo'>
        Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
          Name: "five"
          Regions__: # <class 'types.VariableNameParserInfoRegions'>
            Name: "[Ln 1, Col 36] -> [Ln 1, Col 40]"
            Self__: "[Ln 1, Col 36] -> [Ln 1, Col 40]"
        Regions__: # <class 'types.VariableExpressionParserInfoRegions'>
          Name: "[Ln 1, Col 36] -> [Ln 1, Col 40]"
          Self__: "[Ln 1, Col 36] -> [Ln 1, Col 40]"
    Modifier: None
    Name: # <class 'Original.Parser.Names.VariableNameParserInfo.VariableNameParserInfo'>
      Name: "var1"
      Regions__: # <class 'types.VariableNameParserInfoRegions'>
        Name: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
        Self__: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
    Regions__: # <class 'types.VariableDeclarationStatementParserInfoRegions'>
      Expression: "[Ln 1, Col 8] -> [Ln 1, Col 40]"
      Modifier: None
      Name: "[Ln 1, Col 1] -> [Ln 1, Col 5]"
      Self__: "[Ln 1, Col 1] -> [Ln 2, Col 1]"
