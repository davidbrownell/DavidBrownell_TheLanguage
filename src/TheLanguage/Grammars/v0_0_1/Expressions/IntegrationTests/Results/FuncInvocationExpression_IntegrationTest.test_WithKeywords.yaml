# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 1] (0)"
                            IterEnd: "[1, 7] (6)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(0, 6), match='value1'>"
                            Whitespace: None
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                            Name: "value1"
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 7
                                Line: 1
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 1
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 7
                                Line: 1
                        IterBegin: "[1, 1] (0)"
                        IterEnd: "[1, 7] (6)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 1] (0)"
                    IterEnd: "[1, 7] (6)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 7] (6)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 8] (7)"
                IterEnd: "[1, 9] (8)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(7, 8), match='='>"
                Whitespace:
                  - 6
                  - 7
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[1, 10] (9)"
                            IterEnd: "[1, 15] (14)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(9, 14), match='Func1'>"
                            Whitespace:
                              - 8
                              - 9
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 15] (14)"
                                IterEnd: "[1, 16] (15)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(14, 15), match='('>"
                                Whitespace: None
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[1, 16] (15)"
                                                                IterEnd: "[1, 17] (16)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(15, 16), match='a'>"
                                                                Whitespace: None
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                Name: "a"
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 16
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 17
                                                                    Line: 1
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 16
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 17
                                                                    Line: 1
                                                            IterBegin: "[1, 16] (15)"
                                                            IterEnd: "[1, 17] (16)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[1, 16] (15)"
                                                        IterEnd: "[1, 17] (16)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[1, 16] (15)"
                                                    IterEnd: "[1, 17] (16)"
                                                    Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                    IsIgnored: False
                                                    IterBegin: "[1, 17] (16)"
                                                    IterEnd: "[1, 18] (17)"
                                                    Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                      Match: "<_sre.SRE_Match object; span=(16, 17), match='='>"
                                                    Whitespace: None
                                                IterBegin: "[1, 16] (15)"
                                                IterEnd: "[1, 18] (17)"
                                                Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[1, 16] (15)"
                                            IterEnd: "[1, 18] (17)"
                                            Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[1, 18] (17)"
                                                                IterEnd: "[1, 21] (20)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(17, 20), match='one'>"
                                                                Whitespace: None
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                Name: "one"
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 18
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 21
                                                                    Line: 1
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 18
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 21
                                                                    Line: 1
                                                            IterBegin: "[1, 18] (17)"
                                                            IterEnd: "[1, 21] (20)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[1, 18] (17)"
                                                        IterEnd: "[1, 21] (20)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                            Name: "one"
                                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 18
                                                                Line: 1
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 21
                                                                Line: 1
                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 18
                                                                Line: 1
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 21
                                                                Line: 1
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 18
                                                            Line: 1
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 21
                                                            Line: 1
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 18
                                                            Line: 1
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 21
                                                            Line: 1
                                                    IterBegin: "[1, 18] (17)"
                                                    IterEnd: "[1, 21] (20)"
                                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[1, 18] (17)"
                                                IterEnd: "[1, 21] (20)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[1, 18] (17)"
                                            IterEnd: "[1, 21] (20)"
                                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                        IterBegin: "[1, 16] (15)"
                                        IterEnd: "[1, 21] (20)"
                                        Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[1, 21] (20)"
                                                IterEnd: "[1, 22] (21)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(20, 21), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[1, 23] (22)"
                                                                        IterEnd: "[1, 24] (23)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(22, 23), match='b'>"
                                                                        Whitespace:
                                                                          - 21
                                                                          - 22
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "b"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 23
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 24
                                                                            Line: 1
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 23
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 24
                                                                            Line: 1
                                                                    IterBegin: "[1, 23] (22)"
                                                                    IterEnd: "[1, 24] (23)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[1, 23] (22)"
                                                                IterEnd: "[1, 24] (23)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[1, 23] (22)"
                                                            IterEnd: "[1, 24] (23)"
                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 24] (23)"
                                                            IterEnd: "[1, 25] (24)"
                                                            Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(23, 24), match='='>"
                                                            Whitespace: None
                                                        IterBegin: "[1, 23] (22)"
                                                        IterEnd: "[1, 25] (24)"
                                                        Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[1, 23] (22)"
                                                    IterEnd: "[1, 25] (24)"
                                                    Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[1, 25] (24)"
                                                                        IterEnd: "[1, 28] (27)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(24, 27), match='two'>"
                                                                        Whitespace: None
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "two"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 25
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 28
                                                                            Line: 1
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 25
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 28
                                                                            Line: 1
                                                                    IterBegin: "[1, 25] (24)"
                                                                    IterEnd: "[1, 28] (27)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[1, 25] (24)"
                                                                IterEnd: "[1, 28] (27)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                    Name: "two"
                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 25
                                                                        Line: 1
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 28
                                                                        Line: 1
                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 25
                                                                        Line: 1
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 28
                                                                        Line: 1
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 25
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 28
                                                                    Line: 1
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 25
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 28
                                                                    Line: 1
                                                            IterBegin: "[1, 25] (24)"
                                                            IterEnd: "[1, 28] (27)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[1, 25] (24)"
                                                        IterEnd: "[1, 28] (27)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[1, 25] (24)"
                                                    IterEnd: "[1, 28] (27)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[1, 23] (22)"
                                                IterEnd: "[1, 28] (27)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[1, 21] (20)"
                                            IterEnd: "[1, 28] (27)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[1, 28] (27)"
                                                IterEnd: "[1, 29] (28)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(27, 28), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[1, 30] (29)"
                                                                        IterEnd: "[1, 31] (30)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(29, 30), match='c'>"
                                                                        Whitespace:
                                                                          - 28
                                                                          - 29
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "c"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 30
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 31
                                                                            Line: 1
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 30
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 31
                                                                            Line: 1
                                                                    IterBegin: "[1, 30] (29)"
                                                                    IterEnd: "[1, 31] (30)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[1, 30] (29)"
                                                                IterEnd: "[1, 31] (30)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[1, 30] (29)"
                                                            IterEnd: "[1, 31] (30)"
                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[1, 31] (30)"
                                                            IterEnd: "[1, 32] (31)"
                                                            Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(30, 31), match='='>"
                                                            Whitespace: None
                                                        IterBegin: "[1, 30] (29)"
                                                        IterEnd: "[1, 32] (31)"
                                                        Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[1, 30] (29)"
                                                    IterEnd: "[1, 32] (31)"
                                                    Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[1, 32] (31)"
                                                                        IterEnd: "[1, 37] (36)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(31, 36), match='three'>"
                                                                        Whitespace: None
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "three"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 32
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 37
                                                                            Line: 1
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 32
                                                                            Line: 1
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 37
                                                                            Line: 1
                                                                    IterBegin: "[1, 32] (31)"
                                                                    IterEnd: "[1, 37] (36)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[1, 32] (31)"
                                                                IterEnd: "[1, 37] (36)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                    Name: "three"
                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 32
                                                                        Line: 1
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 37
                                                                        Line: 1
                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 32
                                                                        Line: 1
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 37
                                                                        Line: 1
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 32
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 37
                                                                    Line: 1
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 32
                                                                    Line: 1
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 37
                                                                    Line: 1
                                                            IterBegin: "[1, 32] (31)"
                                                            IterEnd: "[1, 37] (36)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[1, 32] (31)"
                                                        IterEnd: "[1, 37] (36)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[1, 32] (31)"
                                                    IterEnd: "[1, 37] (36)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[1, 30] (29)"
                                                IterEnd: "[1, 37] (36)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[1, 28] (27)"
                                            IterEnd: "[1, 37] (36)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[1, 21] (20)"
                                        IterEnd: "[1, 37] (36)"
                                        Type: "Repeat: {Comma and Argument, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                    IterBegin: "[1, 16] (15)"
                                    IterEnd: "[1, 37] (36)"
                                    Type: "Argument Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[1, 16] (15)"
                                IterEnd: "[1, 37] (36)"
                                Type: "Repeat: {Argument Items, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[1, 37] (36)"
                                IterEnd: "[1, 38] (37)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(36, 37), match=')'>"
                                Whitespace: None
                            IterBegin: "[1, 15] (14)"
                            IterEnd: "[1, 38] (37)"
                            Type: "Arguments <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[1, 10] (9)"
                        IterEnd: "[1, 38] (37)"
                        Type: "Func Invocation Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[1, 10] (9)"
                    IterEnd: "[1, 38] (37)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[1, 10] (9)"
                IterEnd: "[1, 38] (37)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 38] (37)"
                IterEnd: "[3, 1] (39)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 39
                  Start: 37
                Whitespace: None
            IterBegin: "[1, 1] (0)"
            IterEnd: "[3, 1] (39)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[3, 1] (39)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[3, 1] (39)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[3, 1] (39)"
                            IterEnd: "[3, 7] (45)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(39, 45), match='value2'>"
                            Whitespace: None
                        Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                            Name: "value2"
                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 3
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 7
                                Line: 3
                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 1
                                Line: 3
                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                Column: 7
                                Line: 3
                        IterBegin: "[3, 1] (39)"
                        IterEnd: "[3, 7] (45)"
                        Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[3, 1] (39)"
                    IterEnd: "[3, 7] (45)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[3, 1] (39)"
                IterEnd: "[3, 7] (45)"
                Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[3, 8] (46)"
                IterEnd: "[3, 9] (47)"
                Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(46, 47), match='='>"
                Whitespace:
                  - 45
                  - 46
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                            IsIgnored: False
                            IterBegin: "[3, 10] (48)"
                            IterEnd: "[3, 15] (53)"
                            Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                              Match: "<_sre.SRE_Match object; span=(48, 53), match='Func2'>"
                            Whitespace:
                              - 47
                              - 48
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[3, 15] (53)"
                                IterEnd: "[3, 16] (54)"
                                Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(53, 54), match='('>"
                                Whitespace: None
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[4, 5] (59)"
                                                                IterEnd: "[4, 6] (60)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(59, 60), match='a'>"
                                                                Whitespace: None
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                Name: "a"
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 5
                                                                    Line: 4
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 6
                                                                    Line: 4
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 5
                                                                    Line: 4
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 6
                                                                    Line: 4
                                                            IterBegin: "[4, 5] (59)"
                                                            IterEnd: "[4, 6] (60)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[4, 5] (59)"
                                                        IterEnd: "[4, 6] (60)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                            Name: "a"
                                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 5
                                                                Line: 4
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 6
                                                                Line: 4
                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 5
                                                                Line: 4
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 6
                                                                Line: 4
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 4
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 6
                                                            Line: 4
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 5
                                                            Line: 4
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 6
                                                            Line: 4
                                                    IterBegin: "[4, 5] (59)"
                                                    IterEnd: "[4, 6] (60)"
                                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[4, 5] (59)"
                                                IterEnd: "[4, 6] (60)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[4, 5] (59)"
                                            IterEnd: "[4, 6] (60)"
                                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                        IterBegin: "[4, 5] (59)"
                                        IterEnd: "[4, 6] (60)"
                                        Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[4, 6] (60)"
                                                IterEnd: "[4, 7] (61)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(60, 61), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[5, 5] (66)"
                                                                        IterEnd: "[5, 6] (67)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(66, 67), match='b'>"
                                                                        Whitespace: None
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "b"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 5
                                                                            Line: 5
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 6
                                                                            Line: 5
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 5
                                                                            Line: 5
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 6
                                                                            Line: 5
                                                                    IterBegin: "[5, 5] (66)"
                                                                    IterEnd: "[5, 6] (67)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[5, 5] (66)"
                                                                IterEnd: "[5, 6] (67)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                    Name: "b"
                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 5
                                                                        Line: 5
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 6
                                                                        Line: 5
                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 5
                                                                        Line: 5
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 6
                                                                        Line: 5
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 5
                                                                    Line: 5
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 6
                                                                    Line: 5
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 5
                                                                    Line: 5
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 6
                                                                    Line: 5
                                                            IterBegin: "[5, 5] (66)"
                                                            IterEnd: "[5, 6] (67)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[5, 5] (66)"
                                                        IterEnd: "[5, 6] (67)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[5, 5] (66)"
                                                    IterEnd: "[5, 6] (67)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[5, 5] (66)"
                                                IterEnd: "[5, 6] (67)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[4, 6] (60)"
                                            IterEnd: "[5, 6] (67)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[5, 6] (67)"
                                                IterEnd: "[5, 7] (68)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(67, 68), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[6, 5] (73)"
                                                                        IterEnd: "[6, 6] (74)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(73, 74), match='c'>"
                                                                        Whitespace: None
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "c"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 5
                                                                            Line: 6
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 6
                                                                            Line: 6
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 5
                                                                            Line: 6
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 6
                                                                            Line: 6
                                                                    IterBegin: "[6, 5] (73)"
                                                                    IterEnd: "[6, 6] (74)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[6, 5] (73)"
                                                                IterEnd: "[6, 6] (74)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[6, 5] (73)"
                                                            IterEnd: "[6, 6] (74)"
                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[6, 6] (74)"
                                                            IterEnd: "[6, 7] (75)"
                                                            Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(74, 75), match='='>"
                                                            Whitespace: None
                                                        IterBegin: "[6, 5] (73)"
                                                        IterEnd: "[6, 7] (75)"
                                                        Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[6, 5] (73)"
                                                    IterEnd: "[6, 7] (75)"
                                                    Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[6, 7] (75)"
                                                                        IterEnd: "[6, 12] (80)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(75, 80), match='three'>"
                                                                        Whitespace: None
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "three"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 7
                                                                            Line: 6
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 12
                                                                            Line: 6
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 7
                                                                            Line: 6
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 12
                                                                            Line: 6
                                                                    IterBegin: "[6, 7] (75)"
                                                                    IterEnd: "[6, 12] (80)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[6, 7] (75)"
                                                                IterEnd: "[6, 12] (80)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                    Name: "three"
                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 7
                                                                        Line: 6
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 12
                                                                        Line: 6
                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 7
                                                                        Line: 6
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 12
                                                                        Line: 6
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 7
                                                                    Line: 6
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 12
                                                                    Line: 6
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 7
                                                                    Line: 6
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 12
                                                                    Line: 6
                                                            IterBegin: "[6, 7] (75)"
                                                            IterEnd: "[6, 12] (80)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[6, 7] (75)"
                                                        IterEnd: "[6, 12] (80)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[6, 7] (75)"
                                                    IterEnd: "[6, 12] (80)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[6, 5] (73)"
                                                IterEnd: "[6, 12] (80)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[5, 6] (67)"
                                            IterEnd: "[6, 12] (80)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                IsIgnored: False
                                                IterBegin: "[6, 12] (80)"
                                                IterEnd: "[6, 13] (81)"
                                                Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                  Match: "<_sre.SRE_Match object; span=(80, 81), match=','>"
                                                Whitespace: None
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[7, 5] (86)"
                                                                        IterEnd: "[7, 6] (87)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(86, 87), match='d'>"
                                                                        Whitespace: None
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "d"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 5
                                                                            Line: 7
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 6
                                                                            Line: 7
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 5
                                                                            Line: 7
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 6
                                                                            Line: 7
                                                                    IterBegin: "[7, 5] (86)"
                                                                    IterEnd: "[7, 6] (87)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[7, 5] (86)"
                                                                IterEnd: "[7, 6] (87)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            IterBegin: "[7, 5] (86)"
                                                            IterEnd: "[7, 6] (87)"
                                                            Type: "DynamicPhrasesType.Names <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                            IsIgnored: False
                                                            IterBegin: "[7, 6] (87)"
                                                            IterEnd: "[7, 7] (88)"
                                                            Type: "'=' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                              Match: "<_sre.SRE_Match object; span=(87, 88), match='='>"
                                                            Whitespace: None
                                                        IterBegin: "[7, 5] (86)"
                                                        IterEnd: "[7, 7] (88)"
                                                        Type: "With Keyword <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                    IterBegin: "[7, 5] (86)"
                                                    IterEnd: "[7, 7] (88)"
                                                    Type: "Repeat: {With Keyword, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                Children:
                                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                                    Children:
                                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                        IsIgnored: False
                                                                        IterBegin: "[7, 7] (88)"
                                                                        IterEnd: "[7, 11] (92)"
                                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                          Match: "<_sre.SRE_Match object; span=(88, 92), match='four'>"
                                                                        Whitespace: None
                                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                        Name: "four"
                                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 7
                                                                            Line: 7
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 11
                                                                            Line: 7
                                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 7
                                                                            Line: 7
                                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                            Column: 11
                                                                            Line: 7
                                                                    IterBegin: "[7, 7] (88)"
                                                                    IterEnd: "[7, 11] (92)"
                                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                                IterBegin: "[7, 7] (88)"
                                                                IterEnd: "[7, 11] (92)"
                                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                    Name: "four"
                                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 7
                                                                        Line: 7
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 11
                                                                        Line: 7
                                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 7
                                                                        Line: 7
                                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                        Column: 11
                                                                        Line: 7
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 7
                                                                    Line: 7
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 11
                                                                    Line: 7
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 7
                                                                    Line: 7
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 11
                                                                    Line: 7
                                                            IterBegin: "[7, 7] (88)"
                                                            IterEnd: "[7, 11] (92)"
                                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                        IterBegin: "[7, 7] (88)"
                                                        IterEnd: "[7, 11] (92)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    IterBegin: "[7, 7] (88)"
                                                    IterEnd: "[7, 11] (92)"
                                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[7, 5] (86)"
                                                IterEnd: "[7, 11] (92)"
                                                Type: "Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                            IterBegin: "[6, 12] (80)"
                                            IterEnd: "[7, 11] (92)"
                                            Type: "Comma and Argument <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                        IterBegin: "[4, 6] (60)"
                                        IterEnd: "[7, 11] (92)"
                                        Type: "Repeat: {Comma and Argument, 0, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[7, 11] (92)"
                                            IterEnd: "[7, 12] (93)"
                                            Type: "Trailing Comma <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(92, 93), match=','>"
                                            Whitespace: None
                                        IterBegin: "[7, 11] (92)"
                                        IterEnd: "[7, 12] (93)"
                                        Type: "Repeat: {Trailing Comma, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                    IterBegin: "[4, 5] (59)"
                                    IterEnd: "[7, 12] (93)"
                                    Type: "Argument Items <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[4, 5] (59)"
                                IterEnd: "[7, 12] (93)"
                                Type: "Repeat: {Argument Items, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                IsIgnored: False
                                IterBegin: "[8, 1] (94)"
                                IterEnd: "[8, 2] (95)"
                                Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                  Match: "<_sre.SRE_Match object; span=(94, 95), match=')'>"
                                Whitespace: None
                            IterBegin: "[3, 15] (53)"
                            IterEnd: "[8, 2] (95)"
                            Type: "Arguments <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                        IterBegin: "[3, 10] (48)"
                        IterEnd: "[8, 2] (95)"
                        Type: "Func Invocation Expression <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                    IterBegin: "[3, 10] (48)"
                    IterEnd: "[8, 2] (95)"
                    Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                IterBegin: "[3, 10] (48)"
                IterEnd: "[8, 2] (95)"
                Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[8, 2] (95)"
                IterEnd: "[9, 1] (96)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 96
                  Start: 95
                Whitespace: None
            IterBegin: "[3, 1] (39)"
            IterEnd: "[9, 1] (96)"
            Type: "Variable Declaration Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[3, 1] (39)"
        IterEnd: "[9, 1] (96)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[3, 1] (39)"
    IterEnd: "[9, 1] (96)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[9, 1] (96)"
Type: "<None>"
