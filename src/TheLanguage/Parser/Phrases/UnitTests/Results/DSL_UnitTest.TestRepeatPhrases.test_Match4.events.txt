0) StartPhrase, "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
1) StartPhrase, "Repeat: {Sequence: [Word Token, Newline+], 0, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
2) StartPhrase, "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 0, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
3) StartPhrase, "Word Token", "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 0, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
4) EndPhrase, "Word Token" [False], "Sequence: [Word Token, Newline+]" [None], "Repeat: {Sequence: [Word Token, Newline+], 0, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
5) EndPhrase, "Sequence: [Word Token, Newline+]" [False], "Repeat: {Sequence: [Word Token, Newline+], 0, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
6) OnInternalPhraseAsync, 0, 0
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : True
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
7) EndPhrase, "Repeat: {Sequence: [Word Token, Newline+], 0, None}" [True], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
8) StartPhrase, "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
9) StartPhrase, "Sequence: [Number Token, Newline+]", "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
10) StartPhrase, "Number Token", "Sequence: [Number Token, Newline+]", "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
11) OnInternalPhraseAsync, 0, 2
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [1, 3] (2)
               IterBefore : [1, 1] (0)
               Token      : Number Token
               Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                            Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
               Whitespace : None
    Phrase   : Number Token
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Sequence: [Number Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
12) EndPhrase, "Number Token" [True], "Sequence: [Number Token, Newline+]" [None], "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
13) StartPhrase, "Newline+", "Sequence: [Number Token, Newline+]", "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
14) OnInternalPhraseAsync, 2, 3
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [2, 1] (3)
               IterBefore : [1, 3] (2)
               Token      : Newline+
               Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                            End   : 3
                            Start : 2
               Whitespace : None
    Phrase   : Newline+
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [1, 3] (2)
                                            IterBefore : [1, 1] (0)
                                            Token      : Number Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                            Whitespace : None
                                 Phrase   : Number Token
               IsComplete : False
    Phrase   : Sequence: [Number Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
15) EndPhrase, "Newline+" [True], "Sequence: [Number Token, Newline+]" [None], "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
16) OnInternalPhraseAsync, 0, 3
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [1, 3] (2)
                                            IterBefore : [1, 1] (0)
                                            Token      : Number Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                            Whitespace : None
                                 Phrase   : Number Token
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [2, 1] (3)
                                            IterBefore : [1, 3] (2)
                                            Token      : Newline+
                                            Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                         End   : 3
                                                         Start : 2
                                            Whitespace : None
                                 Phrase   : Newline+
               IsComplete : True
    Phrase   : Sequence: [Number Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
17) EndPhrase, "Sequence: [Number Token, Newline+]" [True], "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
18) StartPhrase, "Sequence: [Number Token, Newline+]", "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
19) StartPhrase, "Number Token", "Sequence: [Number Token, Newline+]", "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
20) OnInternalPhraseAsync, 3, 7
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [2, 5] (7)
               IterBefore : [2, 1] (3)
               Token      : Number Token
               Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                            Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
               Whitespace : None
    Phrase   : Number Token
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Sequence: [Number Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [1, 3] (2)
                                                              IterBefore : [1, 1] (0)
                                                              Token      : Number Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                              Whitespace : None
                                                   Phrase   : Number Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [2, 1] (3)
                                                              IterBefore : [1, 3] (2)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 3
                                                                           Start : 2
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
21) EndPhrase, "Number Token" [True], "Sequence: [Number Token, Newline+]" [None], "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
22) StartPhrase, "Newline+", "Sequence: [Number Token, Newline+]", "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
23) OnInternalPhraseAsync, 7, 8
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [3, 1] (8)
               IterBefore : [2, 5] (7)
               Token      : Newline+
               Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                            End   : 8
                            Start : 7
               Whitespace : None
    Phrase   : Newline+
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [2, 5] (7)
                                            IterBefore : [2, 1] (3)
                                            Token      : Number Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                            Whitespace : None
                                 Phrase   : Number Token
               IsComplete : False
    Phrase   : Sequence: [Number Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [1, 3] (2)
                                                              IterBefore : [1, 1] (0)
                                                              Token      : Number Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                              Whitespace : None
                                                   Phrase   : Number Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [2, 1] (3)
                                                              IterBefore : [1, 3] (2)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 3
                                                                           Start : 2
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
24) EndPhrase, "Newline+" [True], "Sequence: [Number Token, Newline+]" [None], "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
25) OnInternalPhraseAsync, 3, 8
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [2, 5] (7)
                                            IterBefore : [2, 1] (3)
                                            Token      : Number Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                            Whitespace : None
                                 Phrase   : Number Token
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [3, 1] (8)
                                            IterBefore : [2, 5] (7)
                                            Token      : Newline+
                                            Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                         End   : 8
                                                         Start : 7
                                            Whitespace : None
                                 Phrase   : Newline+
               IsComplete : True
    Phrase   : Sequence: [Number Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [1, 3] (2)
                                                              IterBefore : [1, 1] (0)
                                                              Token      : Number Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                              Whitespace : None
                                                   Phrase   : Number Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [2, 1] (3)
                                                              IterBefore : [1, 3] (2)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 3
                                                                           Start : 2
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
26) EndPhrase, "Sequence: [Number Token, Newline+]" [True], "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
27) StartPhrase, "Sequence: [Number Token, Newline+]", "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
28) StartPhrase, "Number Token", "Sequence: [Number Token, Newline+]", "Repeat: {Sequence: [Number Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
29) EndPhrase, "Number Token" [False], "Sequence: [Number Token, Newline+]" [None], "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
30) EndPhrase, "Sequence: [Number Token, Newline+]" [False], "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
31) OnInternalPhraseAsync, 0, 8
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [1, 3] (2)
                                                                         IterBefore : [1, 1] (0)
                                                                         Token      : Number Token
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                      Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                         Whitespace : None
                                                              Phrase   : Number Token
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [2, 1] (3)
                                                                         IterBefore : [1, 3] (2)
                                                                         Token      : Newline+
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                      End   : 3
                                                                                      Start : 2
                                                                         Whitespace : None
                                                              Phrase   : Newline+
                                            IsComplete : True
                                 Phrase   : Sequence: [Number Token, Newline+]
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [2, 5] (7)
                                                                         IterBefore : [2, 1] (3)
                                                                         Token      : Number Token
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                      Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                         Whitespace : None
                                                              Phrase   : Number Token
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [3, 1] (8)
                                                                         IterBefore : [2, 5] (7)
                                                                         Token      : Newline+
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                      End   : 8
                                                                                      Start : 7
                                                                         Whitespace : None
                                                              Phrase   : Newline+
                                            IsComplete : True
                                 Phrase   : Sequence: [Number Token, Newline+]
               IsComplete : True
    Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
32) EndPhrase, "Repeat: {Sequence: [Number Token, Newline+], 1, None}" [True], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
33) StartPhrase, "Repeat: {Sequence: [Upper Token, Newline+], 0, 1}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
34) StartPhrase, "Sequence: [Upper Token, Newline+]", "Repeat: {Sequence: [Upper Token, Newline+], 0, 1}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
35) StartPhrase, "Upper Token", "Sequence: [Upper Token, Newline+]", "Repeat: {Sequence: [Upper Token, Newline+], 0, 1}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
36) EndPhrase, "Upper Token" [False], "Sequence: [Upper Token, Newline+]" [None], "Repeat: {Sequence: [Upper Token, Newline+], 0, 1}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
37) EndPhrase, "Sequence: [Upper Token, Newline+]" [False], "Repeat: {Sequence: [Upper Token, Newline+], 0, 1}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
38) OnInternalPhraseAsync, 8, 8
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : True
    Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
39) EndPhrase, "Repeat: {Sequence: [Upper Token, Newline+], 0, 1}" [True], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
40) StartPhrase, "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
41) StartPhrase, "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
42) StartPhrase, "Word Token", "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
43) OnInternalPhraseAsync, 8, 13
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [3, 6] (13)
               IterBefore : [3, 1] (8)
               Token      : Word Token
               Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                            Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
               Whitespace : None
    Phrase   : Word Token
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
44) EndPhrase, "Word Token" [True], "Sequence: [Word Token, Newline+]" [None], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
45) StartPhrase, "Newline+", "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
46) OnInternalPhraseAsync, 13, 14
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [4, 1] (14)
               IterBefore : [3, 6] (13)
               Token      : Newline+
               Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                            End   : 14
                            Start : 13
               Whitespace : None
    Phrase   : Newline+
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [3, 6] (13)
                                            IterBefore : [3, 1] (8)
                                            Token      : Word Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                            Whitespace : None
                                 Phrase   : Word Token
               IsComplete : False
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
47) EndPhrase, "Newline+" [True], "Sequence: [Word Token, Newline+]" [None], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
48) OnInternalPhraseAsync, 8, 14
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [3, 6] (13)
                                            IterBefore : [3, 1] (8)
                                            Token      : Word Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                            Whitespace : None
                                 Phrase   : Word Token
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [4, 1] (14)
                                            IterBefore : [3, 6] (13)
                                            Token      : Newline+
                                            Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                         End   : 14
                                                         Start : 13
                                            Whitespace : None
                                 Phrase   : Newline+
               IsComplete : True
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
49) EndPhrase, "Sequence: [Word Token, Newline+]" [True], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
50) StartPhrase, "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
51) StartPhrase, "Word Token", "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
52) OnInternalPhraseAsync, 14, 19
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [4, 6] (19)
               IterBefore : [4, 1] (14)
               Token      : Word Token
               Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                            Match : <_sre.SRE_Match object; span=(14, 19), match='wordd'>
               Whitespace : None
    Phrase   : Word Token
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [3, 6] (13)
                                                              IterBefore : [3, 1] (8)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 1] (14)
                                                              IterBefore : [3, 6] (13)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 14
                                                                           Start : 13
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
53) EndPhrase, "Word Token" [True], "Sequence: [Word Token, Newline+]" [None], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
54) StartPhrase, "Newline+", "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
55) OnInternalPhraseAsync, 19, 20
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [5, 1] (20)
               IterBefore : [4, 6] (19)
               Token      : Newline+
               Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                            End   : 20
                            Start : 19
               Whitespace : None
    Phrase   : Newline+
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [4, 6] (19)
                                            IterBefore : [4, 1] (14)
                                            Token      : Word Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(14, 19), match='wordd'>
                                            Whitespace : None
                                 Phrase   : Word Token
               IsComplete : False
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [3, 6] (13)
                                                              IterBefore : [3, 1] (8)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 1] (14)
                                                              IterBefore : [3, 6] (13)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 14
                                                                           Start : 13
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
56) EndPhrase, "Newline+" [True], "Sequence: [Word Token, Newline+]" [None], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
57) OnInternalPhraseAsync, 14, 20
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [4, 6] (19)
                                            IterBefore : [4, 1] (14)
                                            Token      : Word Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(14, 19), match='wordd'>
                                            Whitespace : None
                                 Phrase   : Word Token
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [5, 1] (20)
                                            IterBefore : [4, 6] (19)
                                            Token      : Newline+
                                            Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                         End   : 20
                                                         Start : 19
                                            Whitespace : None
                                 Phrase   : Newline+
               IsComplete : True
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [3, 6] (13)
                                                              IterBefore : [3, 1] (8)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 1] (14)
                                                              IterBefore : [3, 6] (13)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 14
                                                                           Start : 13
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
58) EndPhrase, "Sequence: [Word Token, Newline+]" [True], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
59) StartPhrase, "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
60) StartPhrase, "Word Token", "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
61) OnInternalPhraseAsync, 20, 25
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [5, 6] (25)
               IterBefore : [5, 1] (20)
               Token      : Word Token
               Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                            Match : <_sre.SRE_Match object; span=(20, 25), match='worde'>
               Whitespace : None
    Phrase   : Word Token
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : -- empty list --
               IsComplete : False
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [3, 6] (13)
                                                              IterBefore : [3, 1] (8)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 1] (14)
                                                              IterBefore : [3, 6] (13)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 14
                                                                           Start : 13
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 6] (19)
                                                              IterBefore : [4, 1] (14)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(14, 19), match='wordd'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [5, 1] (20)
                                                              IterBefore : [4, 6] (19)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 20
                                                                           Start : 19
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
62) EndPhrase, "Word Token" [True], "Sequence: [Word Token, Newline+]" [None], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
63) StartPhrase, "Newline+", "Sequence: [Word Token, Newline+]", "Repeat: {Sequence: [Word Token, Newline+], 1, None}", "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]"
64) OnInternalPhraseAsync, 25, 26
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
               IsIgnored  : False
               IterAfter  : [6, 1] (26)
               IterBefore : [5, 6] (25)
               Token      : Newline+
               Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                            End   : 26
                            Start : 25
               Whitespace : None
    Phrase   : Newline+
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [5, 6] (25)
                                            IterBefore : [5, 1] (20)
                                            Token      : Word Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(20, 25), match='worde'>
                                            Whitespace : None
                                 Phrase   : Word Token
               IsComplete : False
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [3, 6] (13)
                                                              IterBefore : [3, 1] (8)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 1] (14)
                                                              IterBefore : [3, 6] (13)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 14
                                                                           Start : 13
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 6] (19)
                                                              IterBefore : [4, 1] (14)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(14, 19), match='wordd'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [5, 1] (20)
                                                              IterBefore : [4, 6] (19)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 20
                                                                           Start : 19
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
65) EndPhrase, "Newline+" [True], "Sequence: [Word Token, Newline+]" [None], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
66) OnInternalPhraseAsync, 20, 26
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [5, 6] (25)
                                            IterBefore : [5, 1] (20)
                                            Token      : Word Token
                                            Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                         Match : <_sre.SRE_Match object; span=(20, 25), match='worde'>
                                            Whitespace : None
                                 Phrase   : Word Token
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                            IsIgnored  : False
                                            IterAfter  : [6, 1] (26)
                                            IterBefore : [5, 6] (25)
                                            Token      : Newline+
                                            Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                         End   : 26
                                                         Start : 25
                                            Whitespace : None
                                 Phrase   : Newline+
               IsComplete : True
    Phrase   : Sequence: [Word Token, Newline+]
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [3, 6] (13)
                                                              IterBefore : [3, 1] (8)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 1] (14)
                                                              IterBefore : [3, 6] (13)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 14
                                                                           Start : 13
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                 DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [4, 6] (19)
                                                              IterBefore : [4, 1] (14)
                                                              Token      : Word Token
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                           Match : <_sre.SRE_Match object; span=(14, 19), match='wordd'>
                                                              Whitespace : None
                                                   Phrase   : Word Token
                                              1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                   Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                              IsIgnored  : False
                                                              IterAfter  : [5, 1] (20)
                                                              IterBefore : [4, 6] (19)
                                                              Token      : Newline+
                                                              Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                           End   : 20
                                                                           Start : 19
                                                              Whitespace : None
                                                   Phrase   : Newline+
                                 IsComplete : True
               IsComplete : False
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
67) EndPhrase, "Sequence: [Word Token, Newline+]" [True], "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [None], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
68) OnInternalPhraseAsync, 8, 26
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [3, 6] (13)
                                                                         IterBefore : [3, 1] (8)
                                                                         Token      : Word Token
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                      Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                                                         Whitespace : None
                                                              Phrase   : Word Token
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [4, 1] (14)
                                                                         IterBefore : [3, 6] (13)
                                                                         Token      : Newline+
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                      End   : 14
                                                                                      Start : 13
                                                                         Whitespace : None
                                                              Phrase   : Newline+
                                            IsComplete : True
                                 Phrase   : Sequence: [Word Token, Newline+]
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [4, 6] (19)
                                                                         IterBefore : [4, 1] (14)
                                                                         Token      : Word Token
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                      Match : <_sre.SRE_Match object; span=(14, 19), match='wordd'>
                                                                         Whitespace : None
                                                              Phrase   : Word Token
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [5, 1] (20)
                                                                         IterBefore : [4, 6] (19)
                                                                         Token      : Newline+
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                      End   : 20
                                                                                      Start : 19
                                                                         Whitespace : None
                                                              Phrase   : Newline+
                                            IsComplete : True
                                 Phrase   : Sequence: [Word Token, Newline+]
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [5, 6] (25)
                                                                         IterBefore : [5, 1] (20)
                                                                         Token      : Word Token
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                      Match : <_sre.SRE_Match object; span=(20, 25), match='worde'>
                                                                         Whitespace : None
                                                              Phrase   : Word Token
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                         IsIgnored  : False
                                                                         IterAfter  : [6, 1] (26)
                                                                         IterBefore : [5, 6] (25)
                                                                         Token      : Newline+
                                                                         Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                      End   : 26
                                                                                      Start : 25
                                                                         Whitespace : None
                                                              Phrase   : Newline+
                                            IsComplete : True
                                 Phrase   : Sequence: [Word Token, Newline+]
               IsComplete : True
    Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
               IsComplete : False
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
69) EndPhrase, "Repeat: {Sequence: [Word Token, Newline+], 1, None}" [True], "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [None]
70) OnInternalPhraseAsync, 0, 26
    <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
    Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
               DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 0, None}
                            1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [1, 3] (2)
                                                                                                      IterBefore : [1, 1] (0)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(0, 2), match='12'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 1] (3)
                                                                                                      IterBefore : [1, 3] (2)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 3
                                                                                                                   Start : 2
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [2, 5] (7)
                                                                                                      IterBefore : [2, 1] (3)
                                                                                                      Token      : Number Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(3, 7), match='3456'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Number Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 1] (8)
                                                                                                      IterBefore : [2, 5] (7)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 8
                                                                                                                   Start : 7
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Number Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Number Token, Newline+], 1, None}
                            2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : -- empty list --
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Upper Token, Newline+], 0, 1}
                            3)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                 Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                            DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [3, 6] (13)
                                                                                                      IterBefore : [3, 1] (8)
                                                                                                      Token      : Word Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(8, 13), match='wordc'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Word Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [4, 1] (14)
                                                                                                      IterBefore : [3, 6] (13)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 14
                                                                                                                   Start : 13
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Word Token, Newline+]
                                                         1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [4, 6] (19)
                                                                                                      IterBefore : [4, 1] (14)
                                                                                                      Token      : Word Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(14, 19), match='wordd'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Word Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [5, 1] (20)
                                                                                                      IterBefore : [4, 6] (19)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 20
                                                                                                                   Start : 19
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Word Token, Newline+]
                                                         2)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                              Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.MultipleStandardParseResultData'>
                                                                         DataItems  : 0)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [5, 6] (25)
                                                                                                      IterBefore : [5, 1] (20)
                                                                                                      Token      : Word Token
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                                                                   Match : <_sre.SRE_Match object; span=(20, 25), match='worde'>
                                                                                                      Whitespace : None
                                                                                           Phrase   : Word Token
                                                                                      1)   <class 'TheLanguage.Parser.Components.Phrase.Phrase.StandardParseResultData'>
                                                                                           Data     : <class 'TheLanguage.Parser.Components.Phrase.Phrase.TokenParseResultData'>
                                                                                                      IsIgnored  : False
                                                                                                      IterAfter  : [6, 1] (26)
                                                                                                      IterBefore : [5, 6] (25)
                                                                                                      Token      : Newline+
                                                                                                      Value      : <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                                                                                                                   End   : 26
                                                                                                                   Start : 25
                                                                                                      Whitespace : None
                                                                                           Phrase   : Newline+
                                                                         IsComplete : True
                                                              Phrase   : Sequence: [Word Token, Newline+]
                                            IsComplete : True
                                 Phrase   : Repeat: {Sequence: [Word Token, Newline+], 1, None}
               IsComplete : True
    Phrase   : Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]
71) EndPhrase, "Sequence: [Repeat: {Sequence: [Word Token, Newline+], 0, None}, Repeat: {Sequence: [Number Token, Newline+], 1, None}, Repeat: {Sequence: [Upper Token, Newline+], 0, 1}, Repeat: {Sequence: [Word Token, Newline+], 1, None}]" [True]
