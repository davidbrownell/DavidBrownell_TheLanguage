# <class 'TheLanguage.Lexer.Components.Phrase.Phrase.LexResult'>
Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
  Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
    DataItems:
      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
          IsIgnored: False
          IterBegin: "[1, 1] (0)"
          IterEnd: "[1, 2] (1)"
          Token: "lpar"
          Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
            Match: "<_sre.SRE_Match object; span=(0, 1), match='('>"
          Whitespace: None
        Phrase: "lpar"
      - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
        Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.MultipleLexResultData'>
          DataItems:
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.TokenLexResultData'>
                IsIgnored: False
                IterBegin: "[1, 3] (2)"
                IterEnd: "[1, 6] (5)"
                Token: "Word Token"
                Value: # <class 'TheLanguage.Lexer.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(2, 5), match='one'>"
                Whitespace:
                  - 1
                  - 2
              Phrase: "Word Token"
            - # <class 'TheLanguage.Lexer.Components.Phrase.Phrase.StandardLexResultData'>
              Data: None
              Phrase: "Word Token"
          IsComplete: True
        Phrase: "Inner"
    IsComplete: True
  Phrase: "Phrase"
IterBegin: "[1, 1] (0)"
IterEnd: "[1, 6] (5)"
Success: False
