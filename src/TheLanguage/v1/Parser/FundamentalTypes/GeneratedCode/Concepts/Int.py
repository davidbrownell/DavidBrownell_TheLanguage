# ----------------------------------------------------------------------
# This code was automatically generated by the PythonTarget. Any changes made to this
# file will be overwritten during the next generation!
# ----------------------------------------------------------------------

from v1.Lexer.Location import Location
from v1.Parser.ParserInfos.Common.ClassModifier import ClassModifier
from v1.Parser.ParserInfos.Common.ConstraintParametersParserInfo import ConstraintParameterParserInfo
from v1.Parser.ParserInfos.Common.ConstraintParametersParserInfo import ConstraintParametersParserInfo
from v1.Parser.ParserInfos.Common.FuncArgumentsParserInfo import FuncArgumentParserInfo
from v1.Parser.ParserInfos.Common.FuncArgumentsParserInfo import FuncArgumentsParserInfo
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParameterParserInfo
from v1.Parser.ParserInfos.Common.FuncParametersParserInfo import FuncParametersParserInfo
from v1.Parser.ParserInfos.Common.MethodModifier import MethodModifier
from v1.Parser.ParserInfos.Common.MutabilityModifier import MutabilityModifier
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateParametersParserInfo
from v1.Parser.ParserInfos.Common.TemplateParametersParserInfo import TemplateTypeParameterParserInfo
from v1.Parser.ParserInfos.Common.VisibilityModifier import VisibilityModifier
from v1.Parser.ParserInfos.Expressions.BinaryExpressionParserInfo import BinaryExpressionParserInfo, OperatorType as BinaryExpressionOperatorType
from v1.Parser.ParserInfos.Expressions.CallExpressionParserInfo import CallExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.FuncOrTypeExpressionParserInfo import FuncOrTypeExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.NoneExpressionParserInfo import NoneExpressionParserInfo
from v1.Parser.ParserInfos.Expressions.TypeCheckExpressionParserInfo import TypeCheckExpressionParserInfo, OperatorType as TypeCheckExpressionParserInfoOperatorType
from v1.Parser.ParserInfos.Expressions.VariableExpressionParserInfo import VariableExpressionParserInfo
from v1.Parser.ParserInfos.ParserInfo import ParserInfoType
from v1.Parser.ParserInfos.Statements.ClassCapabilities.ConceptCapabilities import ConceptCapabilities
from v1.Parser.ParserInfos.Statements.ClassStatementParserInfo import ClassStatementParserInfo
from v1.Parser.ParserInfos.Statements.FuncDefinitionStatementParserInfo import FuncDefinitionStatementParserInfo, OperatorType as FuncDefinitionStatementParserInfoOperatorType
from v1.Parser.ParserInfos.Statements.SpecialMethodStatementParserInfo import SpecialMethodStatementParserInfo, SpecialMethodType
from v1.Parser.ParserInfos.Types.StandardTypeParserInfo import StandardTypeParserInfo, StandardTypeItemParserInfo
from v1.Parser.ParserInfos.Types.VariantTypeParserInfo import VariantTypeParserInfo
from v1.Parser.Region import Region


# ----------------------------------------------------------------------
region_000000 = Region(begin=Location(line=20, column=6), end=Location(line=20, column=9))
region_000001 = Region(begin=Location(line=20, column=12), end=Location(line=20, column=16))
region_000002 = Region(begin=Location(line=20, column=5), end=Location(line=20, column=17))
region_000003 = Region(begin=Location(line=20, column=31), end=Location(line=20, column=35))
region_000004 = Region(begin=Location(line=20, column=5), end=Location(line=20, column=35))
region_000005 = Region(begin=Location(line=20, column=18), end=Location(line=20, column=28))
region_000006 = Region(begin=Location(line=21, column=6), end=Location(line=21, column=9))
region_000007 = Region(begin=Location(line=21, column=12), end=Location(line=21, column=16))
region_000008 = Region(begin=Location(line=21, column=5), end=Location(line=21, column=17))
region_000009 = Region(begin=Location(line=21, column=31), end=Location(line=21, column=35))
region_000010 = Region(begin=Location(line=21, column=5), end=Location(line=21, column=35))
region_000011 = Region(begin=Location(line=21, column=18), end=Location(line=21, column=28))
region_000012 = Region(begin=Location(line=19, column=30), end=Location(line=22, column=2))
region_000013 = Region(begin=Location(line=20, column=5), end=Location(line=21, column=36))
region_000014 = Region(begin=Location(line=24, column=9), end=Location(line=24, column=17))
region_000015 = Region(begin=Location(line=24, column=18), end=Location(line=24, column=28))
region_000016 = Region(begin=Location(line=24, column=32), end=Location(line=24, column=36))
region_000017 = Region(begin=Location(line=24, column=18), end=Location(line=24, column=36))
region_000018 = Region(begin=Location(line=24, column=29), end=Location(line=24, column=31))
region_000019 = Region(begin=Location(line=24, column=40), end=Location(line=24, column=50))
region_000020 = Region(begin=Location(line=24, column=54), end=Location(line=24, column=58))
region_000021 = Region(begin=Location(line=24, column=40), end=Location(line=24, column=58))
region_000022 = Region(begin=Location(line=24, column=51), end=Location(line=24, column=53))
region_000023 = Region(begin=Location(line=24, column=62), end=Location(line=24, column=72))
region_000024 = Region(begin=Location(line=24, column=76), end=Location(line=24, column=86))
region_000025 = Region(begin=Location(line=24, column=62), end=Location(line=24, column=86))
region_000026 = Region(begin=Location(line=24, column=73), end=Location(line=24, column=75))
region_000027 = Region(begin=Location(line=24, column=40), end=Location(line=24, column=86))
region_000028 = Region(begin=Location(line=24, column=59), end=Location(line=24, column=61))
region_000029 = Region(begin=Location(line=24, column=18), end=Location(line=24, column=86))
region_000030 = Region(begin=Location(line=24, column=37), end=Location(line=24, column=39))
region_000031 = Region(begin=Location(line=24, column=17), end=Location(line=24, column=87))
region_000032 = Region(begin=Location(line=24, column=9), end=Location(line=24, column=87))
region_000033 = Region(begin=Location(line=23, column=5), end=Location(line=26, column=5))
region_000034 = Region(begin=Location(line=23, column=5), end=Location(line=23, column=25))
region_000035 = Region(begin=Location(line=23, column=27), end=Location(line=26, column=5))
region_000036 = Region(begin=Location(line=26, column=21), end=Location(line=26, column=29))
region_000037 = Region(begin=Location(line=26, column=21), end=Location(line=26, column=33))
region_000038 = Region(begin=Location(line=26, column=30), end=Location(line=26, column=33))
region_000039 = Region(begin=Location(line=26, column=51), end=Location(line=26, column=59))
region_000040 = Region(begin=Location(line=26, column=50), end=Location(line=26, column=60))
region_000041 = Region(begin=Location(line=26, column=61), end=Location(line=26, column=69))
region_000042 = Region(begin=Location(line=26, column=61), end=Location(line=26, column=73))
region_000043 = Region(begin=Location(line=26, column=70), end=Location(line=26, column=73))
region_000044 = Region(begin=Location(line=26, column=61), end=Location(line=26, column=81))
region_000045 = Region(begin=Location(line=26, column=74), end=Location(line=26, column=81))
region_000046 = Region(begin=Location(line=26, column=60), end=Location(line=26, column=82))
region_000047 = Region(begin=Location(line=26, column=5), end=Location(line=27, column=1))
region_000048 = Region(begin=Location(line=26, column=14), end=Location(line=26, column=20))
region_000049 = Region(begin=Location(line=26, column=34), end=Location(line=26, column=50))
region_000050 = Region(begin=Location(line=26, column=6), end=Location(line=26, column=12))
region_000051 = Region(begin=Location(line=27, column=32), end=Location(line=27, column=40))
region_000052 = Region(begin=Location(line=27, column=31), end=Location(line=27, column=41))
region_000053 = Region(begin=Location(line=27, column=42), end=Location(line=27, column=50))
region_000054 = Region(begin=Location(line=27, column=42), end=Location(line=27, column=54))
region_000055 = Region(begin=Location(line=27, column=51), end=Location(line=27, column=54))
region_000056 = Region(begin=Location(line=27, column=42), end=Location(line=27, column=62))
region_000057 = Region(begin=Location(line=27, column=55), end=Location(line=27, column=62))
region_000058 = Region(begin=Location(line=27, column=41), end=Location(line=27, column=63))
region_000059 = Region(begin=Location(line=27, column=5), end=Location(line=29, column=1))
region_000060 = Region(begin=Location(line=27, column=5), end=Location(line=27, column=11))
region_000061 = Region(begin=Location(line=27, column=64), end=Location(line=27, column=73))
region_000062 = Region(begin=Location(line=27, column=17), end=Location(line=27, column=31))
region_000063 = Region(begin=Location(line=29, column=29), end=Location(line=29, column=37))
region_000064 = Region(begin=Location(line=29, column=28), end=Location(line=29, column=38))
region_000065 = Region(begin=Location(line=29, column=39), end=Location(line=29, column=47))
region_000066 = Region(begin=Location(line=29, column=39), end=Location(line=29, column=51))
region_000067 = Region(begin=Location(line=29, column=48), end=Location(line=29, column=51))
region_000068 = Region(begin=Location(line=29, column=39), end=Location(line=29, column=59))
region_000069 = Region(begin=Location(line=29, column=52), end=Location(line=29, column=59))
region_000070 = Region(begin=Location(line=29, column=38), end=Location(line=29, column=60))
region_000071 = Region(begin=Location(line=29, column=5), end=Location(line=31, column=1))
region_000072 = Region(begin=Location(line=29, column=5), end=Location(line=29, column=11))
region_000073 = Region(begin=Location(line=29, column=61), end=Location(line=29, column=70))
region_000074 = Region(begin=Location(line=29, column=17), end=Location(line=29, column=28))
region_000075 = Region(begin=Location(line=31, column=12), end=Location(line=31, column=20))
region_000076 = Region(begin=Location(line=31, column=12), end=Location(line=31, column=24))
region_000077 = Region(begin=Location(line=31, column=21), end=Location(line=31, column=24))
region_000078 = Region(begin=Location(line=31, column=5), end=Location(line=33, column=1))
region_000079 = Region(begin=Location(line=31, column=5), end=Location(line=31, column=11))
region_000080 = Region(begin=Location(line=31, column=38), end=Location(line=31, column=47))
region_000081 = Region(begin=Location(line=31, column=25), end=Location(line=31, column=35))
region_000082 = Region(begin=Location(line=31, column=35), end=Location(line=31, column=37))
region_000083 = Region(begin=Location(line=33, column=12), end=Location(line=33, column=16))
region_000084 = Region(begin=Location(line=33, column=12), end=Location(line=33, column=20))
region_000085 = Region(begin=Location(line=33, column=17), end=Location(line=33, column=20))
region_000086 = Region(begin=Location(line=33, column=5), end=Location(line=34, column=1))
region_000087 = Region(begin=Location(line=33, column=5), end=Location(line=33, column=11))
region_000088 = Region(begin=Location(line=33, column=34), end=Location(line=33, column=43))
region_000089 = Region(begin=Location(line=33, column=21), end=Location(line=33, column=31))
region_000090 = Region(begin=Location(line=33, column=31), end=Location(line=33, column=33))
region_000091 = Region(begin=Location(line=34, column=12), end=Location(line=34, column=15))
region_000092 = Region(begin=Location(line=34, column=12), end=Location(line=34, column=19))
region_000093 = Region(begin=Location(line=34, column=16), end=Location(line=34, column=19))
region_000094 = Region(begin=Location(line=34, column=5), end=Location(line=36, column=1))
region_000095 = Region(begin=Location(line=34, column=5), end=Location(line=34, column=11))
region_000096 = Region(begin=Location(line=34, column=36), end=Location(line=34, column=45))
region_000097 = Region(begin=Location(line=34, column=20), end=Location(line=34, column=33))
region_000098 = Region(begin=Location(line=34, column=33), end=Location(line=34, column=35))
region_000099 = Region(begin=Location(line=36, column=21), end=Location(line=36, column=34))
region_000100 = Region(begin=Location(line=36, column=21), end=Location(line=36, column=38))
region_000101 = Region(begin=Location(line=36, column=35), end=Location(line=36, column=38))
region_000102 = Region(begin=Location(line=36, column=51), end=Location(line=36, column=59))
region_000103 = Region(begin=Location(line=36, column=51), end=Location(line=36, column=69))
region_000104 = Region(begin=Location(line=36, column=60), end=Location(line=36, column=69))
region_000105 = Region(begin=Location(line=36, column=51), end=Location(line=36, column=74))
region_000106 = Region(begin=Location(line=36, column=70), end=Location(line=36, column=74))
region_000107 = Region(begin=Location(line=36, column=76), end=Location(line=36, column=79))
region_000108 = Region(begin=Location(line=36, column=76), end=Location(line=36, column=89))
region_000109 = Region(begin=Location(line=36, column=80), end=Location(line=36, column=89))
region_000110 = Region(begin=Location(line=36, column=76), end=Location(line=36, column=94))
region_000111 = Region(begin=Location(line=36, column=90), end=Location(line=36, column=94))
region_000112 = Region(begin=Location(line=36, column=50), end=Location(line=36, column=95))
region_000113 = Region(begin=Location(line=36, column=51), end=Location(line=36, column=94))
region_000114 = Region(begin=Location(line=36, column=5), end=Location(line=38, column=1))
region_000115 = Region(begin=Location(line=36, column=14), end=Location(line=36, column=20))
region_000116 = Region(begin=Location(line=36, column=39), end=Location(line=36, column=50))
region_000117 = Region(begin=Location(line=36, column=6), end=Location(line=36, column=12))
region_000118 = Region(begin=Location(line=38, column=12), end=Location(line=38, column=16))
region_000119 = Region(begin=Location(line=38, column=12), end=Location(line=38, column=20))
region_000120 = Region(begin=Location(line=38, column=17), end=Location(line=38, column=20))
region_000121 = Region(begin=Location(line=38, column=31), end=Location(line=38, column=34))
region_000122 = Region(begin=Location(line=38, column=31), end=Location(line=38, column=44))
region_000123 = Region(begin=Location(line=38, column=35), end=Location(line=38, column=44))
region_000124 = Region(begin=Location(line=38, column=31), end=Location(line=38, column=49))
region_000125 = Region(begin=Location(line=38, column=45), end=Location(line=38, column=49))
region_000126 = Region(begin=Location(line=38, column=30), end=Location(line=38, column=50))
region_000127 = Region(begin=Location(line=38, column=5), end=Location(line=39, column=1))
region_000128 = Region(begin=Location(line=38, column=5), end=Location(line=38, column=11))
region_000129 = Region(begin=Location(line=38, column=51), end=Location(line=38, column=60))
region_000130 = Region(begin=Location(line=38, column=21), end=Location(line=38, column=30))
region_000131 = Region(begin=Location(line=39, column=12), end=Location(line=39, column=16))
region_000132 = Region(begin=Location(line=39, column=12), end=Location(line=39, column=20))
region_000133 = Region(begin=Location(line=39, column=17), end=Location(line=39, column=20))
region_000134 = Region(begin=Location(line=39, column=34), end=Location(line=39, column=37))
region_000135 = Region(begin=Location(line=39, column=34), end=Location(line=39, column=47))
region_000136 = Region(begin=Location(line=39, column=38), end=Location(line=39, column=47))
region_000137 = Region(begin=Location(line=39, column=34), end=Location(line=39, column=52))
region_000138 = Region(begin=Location(line=39, column=48), end=Location(line=39, column=52))
region_000139 = Region(begin=Location(line=39, column=33), end=Location(line=39, column=53))
region_000140 = Region(begin=Location(line=39, column=5), end=Location(line=40, column=1))
region_000141 = Region(begin=Location(line=39, column=5), end=Location(line=39, column=11))
region_000142 = Region(begin=Location(line=39, column=54), end=Location(line=39, column=63))
region_000143 = Region(begin=Location(line=39, column=21), end=Location(line=39, column=33))
region_000144 = Region(begin=Location(line=40, column=12), end=Location(line=40, column=16))
region_000145 = Region(begin=Location(line=40, column=12), end=Location(line=40, column=20))
region_000146 = Region(begin=Location(line=40, column=17), end=Location(line=40, column=20))
region_000147 = Region(begin=Location(line=40, column=30), end=Location(line=40, column=33))
region_000148 = Region(begin=Location(line=40, column=30), end=Location(line=40, column=43))
region_000149 = Region(begin=Location(line=40, column=34), end=Location(line=40, column=43))
region_000150 = Region(begin=Location(line=40, column=30), end=Location(line=40, column=48))
region_000151 = Region(begin=Location(line=40, column=44), end=Location(line=40, column=48))
region_000152 = Region(begin=Location(line=40, column=29), end=Location(line=40, column=49))
region_000153 = Region(begin=Location(line=40, column=5), end=Location(line=41, column=1))
region_000154 = Region(begin=Location(line=40, column=5), end=Location(line=40, column=11))
region_000155 = Region(begin=Location(line=40, column=50), end=Location(line=40, column=59))
region_000156 = Region(begin=Location(line=40, column=21), end=Location(line=40, column=29))
region_000157 = Region(begin=Location(line=41, column=12), end=Location(line=41, column=16))
region_000158 = Region(begin=Location(line=41, column=12), end=Location(line=41, column=20))
region_000159 = Region(begin=Location(line=41, column=17), end=Location(line=41, column=20))
region_000160 = Region(begin=Location(line=41, column=35), end=Location(line=41, column=38))
region_000161 = Region(begin=Location(line=41, column=35), end=Location(line=41, column=48))
region_000162 = Region(begin=Location(line=41, column=39), end=Location(line=41, column=48))
region_000163 = Region(begin=Location(line=41, column=35), end=Location(line=41, column=53))
region_000164 = Region(begin=Location(line=41, column=49), end=Location(line=41, column=53))
region_000165 = Region(begin=Location(line=41, column=34), end=Location(line=41, column=54))
region_000166 = Region(begin=Location(line=41, column=5), end=Location(line=42, column=1))
region_000167 = Region(begin=Location(line=41, column=5), end=Location(line=41, column=11))
region_000168 = Region(begin=Location(line=41, column=55), end=Location(line=41, column=64))
region_000169 = Region(begin=Location(line=41, column=21), end=Location(line=41, column=34))
region_000170 = Region(begin=Location(line=42, column=12), end=Location(line=42, column=16))
region_000171 = Region(begin=Location(line=42, column=12), end=Location(line=42, column=20))
region_000172 = Region(begin=Location(line=42, column=17), end=Location(line=42, column=20))
region_000173 = Region(begin=Location(line=42, column=33), end=Location(line=42, column=36))
region_000174 = Region(begin=Location(line=42, column=33), end=Location(line=42, column=46))
region_000175 = Region(begin=Location(line=42, column=37), end=Location(line=42, column=46))
region_000176 = Region(begin=Location(line=42, column=33), end=Location(line=42, column=51))
region_000177 = Region(begin=Location(line=42, column=47), end=Location(line=42, column=51))
region_000178 = Region(begin=Location(line=42, column=32), end=Location(line=42, column=52))
region_000179 = Region(begin=Location(line=42, column=5), end=Location(line=43, column=1))
region_000180 = Region(begin=Location(line=42, column=5), end=Location(line=42, column=11))
region_000181 = Region(begin=Location(line=42, column=53), end=Location(line=42, column=62))
region_000182 = Region(begin=Location(line=42, column=21), end=Location(line=42, column=32))
region_000183 = Region(begin=Location(line=43, column=12), end=Location(line=43, column=16))
region_000184 = Region(begin=Location(line=43, column=12), end=Location(line=43, column=20))
region_000185 = Region(begin=Location(line=43, column=17), end=Location(line=43, column=20))
region_000186 = Region(begin=Location(line=43, column=38), end=Location(line=43, column=41))
region_000187 = Region(begin=Location(line=43, column=38), end=Location(line=43, column=51))
region_000188 = Region(begin=Location(line=43, column=42), end=Location(line=43, column=51))
region_000189 = Region(begin=Location(line=43, column=38), end=Location(line=43, column=56))
region_000190 = Region(begin=Location(line=43, column=52), end=Location(line=43, column=56))
region_000191 = Region(begin=Location(line=43, column=37), end=Location(line=43, column=57))
region_000192 = Region(begin=Location(line=43, column=5), end=Location(line=45, column=1))
region_000193 = Region(begin=Location(line=43, column=5), end=Location(line=43, column=11))
region_000194 = Region(begin=Location(line=43, column=58), end=Location(line=43, column=67))
region_000195 = Region(begin=Location(line=43, column=21), end=Location(line=43, column=37))
region_000196 = Region(begin=Location(line=45, column=12), end=Location(line=45, column=20))
region_000197 = Region(begin=Location(line=45, column=12), end=Location(line=45, column=24))
region_000198 = Region(begin=Location(line=45, column=21), end=Location(line=45, column=24))
region_000199 = Region(begin=Location(line=45, column=5), end=Location(line=46, column=1))
region_000200 = Region(begin=Location(line=45, column=5), end=Location(line=45, column=11))
region_000201 = Region(begin=Location(line=45, column=41), end=Location(line=45, column=50))
region_000202 = Region(begin=Location(line=45, column=25), end=Location(line=45, column=38))
region_000203 = Region(begin=Location(line=45, column=38), end=Location(line=45, column=40))
region_000204 = Region(begin=Location(line=46, column=12), end=Location(line=46, column=20))
region_000205 = Region(begin=Location(line=46, column=12), end=Location(line=46, column=24))
region_000206 = Region(begin=Location(line=46, column=21), end=Location(line=46, column=24))
region_000207 = Region(begin=Location(line=46, column=5), end=Location(line=47, column=1))
region_000208 = Region(begin=Location(line=46, column=5), end=Location(line=46, column=11))
region_000209 = Region(begin=Location(line=46, column=41), end=Location(line=46, column=50))
region_000210 = Region(begin=Location(line=46, column=25), end=Location(line=46, column=38))
region_000211 = Region(begin=Location(line=46, column=38), end=Location(line=46, column=40))
region_000212 = Region(begin=Location(line=47, column=12), end=Location(line=47, column=20))
region_000213 = Region(begin=Location(line=47, column=12), end=Location(line=47, column=24))
region_000214 = Region(begin=Location(line=47, column=21), end=Location(line=47, column=24))
region_000215 = Region(begin=Location(line=47, column=5), end=Location(line=49, column=1))
region_000216 = Region(begin=Location(line=47, column=5), end=Location(line=47, column=11))
region_000217 = Region(begin=Location(line=47, column=40), end=Location(line=47, column=49))
region_000218 = Region(begin=Location(line=47, column=25), end=Location(line=47, column=37))
region_000219 = Region(begin=Location(line=47, column=37), end=Location(line=47, column=39))
region_000220 = Region(begin=Location(line=49, column=12), end=Location(line=49, column=15))
region_000221 = Region(begin=Location(line=49, column=12), end=Location(line=49, column=19))
region_000222 = Region(begin=Location(line=49, column=16), end=Location(line=49, column=19))
region_000223 = Region(begin=Location(line=49, column=32), end=Location(line=49, column=35))
region_000224 = Region(begin=Location(line=49, column=32), end=Location(line=49, column=45))
region_000225 = Region(begin=Location(line=49, column=36), end=Location(line=49, column=45))
region_000226 = Region(begin=Location(line=49, column=32), end=Location(line=49, column=53))
region_000227 = Region(begin=Location(line=49, column=46), end=Location(line=49, column=53))
region_000228 = Region(begin=Location(line=49, column=31), end=Location(line=49, column=54))
region_000229 = Region(begin=Location(line=49, column=5), end=Location(line=51, column=1))
region_000230 = Region(begin=Location(line=49, column=5), end=Location(line=49, column=11))
region_000231 = Region(begin=Location(line=49, column=55), end=Location(line=49, column=64))
region_000232 = Region(begin=Location(line=49, column=20), end=Location(line=49, column=31))
region_000233 = Region(begin=Location(line=51, column=12), end=Location(line=51, column=20))
region_000234 = Region(begin=Location(line=51, column=12), end=Location(line=51, column=24))
region_000235 = Region(begin=Location(line=51, column=21), end=Location(line=51, column=24))
region_000236 = Region(begin=Location(line=51, column=42), end=Location(line=51, column=45))
region_000237 = Region(begin=Location(line=51, column=42), end=Location(line=51, column=55))
region_000238 = Region(begin=Location(line=51, column=46), end=Location(line=51, column=55))
region_000239 = Region(begin=Location(line=51, column=42), end=Location(line=51, column=63))
region_000240 = Region(begin=Location(line=51, column=56), end=Location(line=51, column=63))
region_000241 = Region(begin=Location(line=51, column=41), end=Location(line=51, column=64))
region_000242 = Region(begin=Location(line=51, column=5), end=Location(line=52, column=1))
region_000243 = Region(begin=Location(line=51, column=5), end=Location(line=51, column=11))
region_000244 = Region(begin=Location(line=51, column=65), end=Location(line=51, column=74))
region_000245 = Region(begin=Location(line=51, column=25), end=Location(line=51, column=41))
region_000246 = Region(begin=Location(line=52, column=12), end=Location(line=52, column=20))
region_000247 = Region(begin=Location(line=52, column=12), end=Location(line=52, column=24))
region_000248 = Region(begin=Location(line=52, column=21), end=Location(line=52, column=24))
region_000249 = Region(begin=Location(line=52, column=37), end=Location(line=52, column=40))
region_000250 = Region(begin=Location(line=52, column=37), end=Location(line=52, column=50))
region_000251 = Region(begin=Location(line=52, column=41), end=Location(line=52, column=50))
region_000252 = Region(begin=Location(line=52, column=37), end=Location(line=52, column=58))
region_000253 = Region(begin=Location(line=52, column=51), end=Location(line=52, column=58))
region_000254 = Region(begin=Location(line=52, column=36), end=Location(line=52, column=59))
region_000255 = Region(begin=Location(line=52, column=5), end=Location(line=53, column=1))
region_000256 = Region(begin=Location(line=52, column=5), end=Location(line=52, column=11))
region_000257 = Region(begin=Location(line=52, column=60), end=Location(line=52, column=69))
region_000258 = Region(begin=Location(line=52, column=25), end=Location(line=52, column=36))
region_000259 = Region(begin=Location(line=53, column=12), end=Location(line=53, column=20))
region_000260 = Region(begin=Location(line=53, column=12), end=Location(line=53, column=24))
region_000261 = Region(begin=Location(line=53, column=21), end=Location(line=53, column=24))
region_000262 = Region(begin=Location(line=53, column=39), end=Location(line=53, column=42))
region_000263 = Region(begin=Location(line=53, column=39), end=Location(line=53, column=52))
region_000264 = Region(begin=Location(line=53, column=43), end=Location(line=53, column=52))
region_000265 = Region(begin=Location(line=53, column=39), end=Location(line=53, column=63))
region_000266 = Region(begin=Location(line=53, column=53), end=Location(line=53, column=63))
region_000267 = Region(begin=Location(line=53, column=38), end=Location(line=53, column=64))
region_000268 = Region(begin=Location(line=53, column=5), end=Location(line=54, column=1))
region_000269 = Region(begin=Location(line=53, column=5), end=Location(line=53, column=11))
region_000270 = Region(begin=Location(line=53, column=65), end=Location(line=53, column=74))
region_000271 = Region(begin=Location(line=53, column=25), end=Location(line=53, column=38))
region_000272 = Region(begin=Location(line=54, column=12), end=Location(line=54, column=20))
region_000273 = Region(begin=Location(line=54, column=12), end=Location(line=54, column=24))
region_000274 = Region(begin=Location(line=54, column=21), end=Location(line=54, column=24))
region_000275 = Region(begin=Location(line=54, column=36), end=Location(line=54, column=39))
region_000276 = Region(begin=Location(line=54, column=36), end=Location(line=54, column=49))
region_000277 = Region(begin=Location(line=54, column=40), end=Location(line=54, column=49))
region_000278 = Region(begin=Location(line=54, column=36), end=Location(line=54, column=58))
region_000279 = Region(begin=Location(line=54, column=50), end=Location(line=54, column=58))
region_000280 = Region(begin=Location(line=54, column=35), end=Location(line=54, column=59))
region_000281 = Region(begin=Location(line=54, column=5), end=Location(line=56, column=1))
region_000282 = Region(begin=Location(line=54, column=5), end=Location(line=54, column=11))
region_000283 = Region(begin=Location(line=54, column=60), end=Location(line=54, column=69))
region_000284 = Region(begin=Location(line=54, column=25), end=Location(line=54, column=35))
region_000285 = Region(begin=Location(line=56, column=12), end=Location(line=56, column=20))
region_000286 = Region(begin=Location(line=56, column=12), end=Location(line=56, column=24))
region_000287 = Region(begin=Location(line=56, column=21), end=Location(line=56, column=24))
region_000288 = Region(begin=Location(line=56, column=34), end=Location(line=56, column=37))
region_000289 = Region(begin=Location(line=56, column=34), end=Location(line=56, column=47))
region_000290 = Region(begin=Location(line=56, column=38), end=Location(line=56, column=47))
region_000291 = Region(begin=Location(line=56, column=34), end=Location(line=56, column=53))
region_000292 = Region(begin=Location(line=56, column=48), end=Location(line=56, column=53))
region_000293 = Region(begin=Location(line=56, column=33), end=Location(line=56, column=54))
region_000294 = Region(begin=Location(line=56, column=5), end=Location(line=57, column=1))
region_000295 = Region(begin=Location(line=56, column=5), end=Location(line=56, column=11))
region_000296 = Region(begin=Location(line=56, column=55), end=Location(line=56, column=64))
region_000297 = Region(begin=Location(line=56, column=25), end=Location(line=56, column=33))
region_000298 = Region(begin=Location(line=57, column=12), end=Location(line=57, column=20))
region_000299 = Region(begin=Location(line=57, column=12), end=Location(line=57, column=24))
region_000300 = Region(begin=Location(line=57, column=21), end=Location(line=57, column=24))
region_000301 = Region(begin=Location(line=57, column=39), end=Location(line=57, column=42))
region_000302 = Region(begin=Location(line=57, column=39), end=Location(line=57, column=52))
region_000303 = Region(begin=Location(line=57, column=43), end=Location(line=57, column=52))
region_000304 = Region(begin=Location(line=57, column=39), end=Location(line=57, column=58))
region_000305 = Region(begin=Location(line=57, column=53), end=Location(line=57, column=58))
region_000306 = Region(begin=Location(line=57, column=38), end=Location(line=57, column=59))
region_000307 = Region(begin=Location(line=57, column=5), end=Location(line=59, column=1))
region_000308 = Region(begin=Location(line=57, column=5), end=Location(line=57, column=11))
region_000309 = Region(begin=Location(line=57, column=60), end=Location(line=57, column=69))
region_000310 = Region(begin=Location(line=57, column=25), end=Location(line=57, column=38))
region_000311 = Region(begin=Location(line=59, column=12), end=Location(line=59, column=20))
region_000312 = Region(begin=Location(line=59, column=12), end=Location(line=59, column=24))
region_000313 = Region(begin=Location(line=59, column=21), end=Location(line=59, column=24))
region_000314 = Region(begin=Location(line=59, column=43), end=Location(line=59, column=46))
region_000315 = Region(begin=Location(line=59, column=43), end=Location(line=59, column=56))
region_000316 = Region(begin=Location(line=59, column=47), end=Location(line=59, column=56))
region_000317 = Region(begin=Location(line=59, column=43), end=Location(line=59, column=62))
region_000318 = Region(begin=Location(line=59, column=57), end=Location(line=59, column=62))
region_000319 = Region(begin=Location(line=59, column=42), end=Location(line=59, column=63))
region_000320 = Region(begin=Location(line=59, column=5), end=Location(line=60, column=1))
region_000321 = Region(begin=Location(line=59, column=5), end=Location(line=59, column=11))
region_000322 = Region(begin=Location(line=59, column=64), end=Location(line=59, column=73))
region_000323 = Region(begin=Location(line=59, column=25), end=Location(line=59, column=42))
region_000324 = Region(begin=Location(line=60, column=12), end=Location(line=60, column=20))
region_000325 = Region(begin=Location(line=60, column=12), end=Location(line=60, column=24))
region_000326 = Region(begin=Location(line=60, column=21), end=Location(line=60, column=24))
region_000327 = Region(begin=Location(line=60, column=44), end=Location(line=60, column=47))
region_000328 = Region(begin=Location(line=60, column=44), end=Location(line=60, column=57))
region_000329 = Region(begin=Location(line=60, column=48), end=Location(line=60, column=57))
region_000330 = Region(begin=Location(line=60, column=44), end=Location(line=60, column=63))
region_000331 = Region(begin=Location(line=60, column=58), end=Location(line=60, column=63))
region_000332 = Region(begin=Location(line=60, column=43), end=Location(line=60, column=64))
region_000333 = Region(begin=Location(line=60, column=5), end=Location(line=62, column=1))
region_000334 = Region(begin=Location(line=60, column=5), end=Location(line=60, column=11))
region_000335 = Region(begin=Location(line=60, column=65), end=Location(line=60, column=74))
region_000336 = Region(begin=Location(line=60, column=25), end=Location(line=60, column=43))
region_000337 = Region(begin=Location(line=62, column=12), end=Location(line=62, column=20))
region_000338 = Region(begin=Location(line=62, column=12), end=Location(line=62, column=24))
region_000339 = Region(begin=Location(line=62, column=21), end=Location(line=62, column=24))
region_000340 = Region(begin=Location(line=62, column=37), end=Location(line=62, column=40))
region_000341 = Region(begin=Location(line=62, column=37), end=Location(line=62, column=50))
region_000342 = Region(begin=Location(line=62, column=41), end=Location(line=62, column=50))
region_000343 = Region(begin=Location(line=62, column=37), end=Location(line=62, column=56))
region_000344 = Region(begin=Location(line=62, column=51), end=Location(line=62, column=56))
region_000345 = Region(begin=Location(line=62, column=36), end=Location(line=62, column=57))
region_000346 = Region(begin=Location(line=62, column=5), end=Location(line=63, column=1))
region_000347 = Region(begin=Location(line=62, column=5), end=Location(line=62, column=11))
region_000348 = Region(begin=Location(line=62, column=58), end=Location(line=62, column=67))
region_000349 = Region(begin=Location(line=62, column=25), end=Location(line=62, column=36))
region_000350 = Region(begin=Location(line=63, column=12), end=Location(line=63, column=20))
region_000351 = Region(begin=Location(line=63, column=12), end=Location(line=63, column=24))
region_000352 = Region(begin=Location(line=63, column=21), end=Location(line=63, column=24))
region_000353 = Region(begin=Location(line=63, column=37), end=Location(line=63, column=40))
region_000354 = Region(begin=Location(line=63, column=37), end=Location(line=63, column=50))
region_000355 = Region(begin=Location(line=63, column=41), end=Location(line=63, column=50))
region_000356 = Region(begin=Location(line=63, column=37), end=Location(line=63, column=56))
region_000357 = Region(begin=Location(line=63, column=51), end=Location(line=63, column=56))
region_000358 = Region(begin=Location(line=63, column=36), end=Location(line=63, column=57))
region_000359 = Region(begin=Location(line=63, column=5), end=Location(line=64, column=1))
region_000360 = Region(begin=Location(line=63, column=5), end=Location(line=63, column=11))
region_000361 = Region(begin=Location(line=63, column=58), end=Location(line=63, column=67))
region_000362 = Region(begin=Location(line=63, column=25), end=Location(line=63, column=36))
region_000363 = Region(begin=Location(line=64, column=12), end=Location(line=64, column=20))
region_000364 = Region(begin=Location(line=64, column=12), end=Location(line=64, column=24))
region_000365 = Region(begin=Location(line=64, column=21), end=Location(line=64, column=24))
region_000366 = Region(begin=Location(line=64, column=36), end=Location(line=64, column=39))
region_000367 = Region(begin=Location(line=64, column=36), end=Location(line=64, column=49))
region_000368 = Region(begin=Location(line=64, column=40), end=Location(line=64, column=49))
region_000369 = Region(begin=Location(line=64, column=36), end=Location(line=64, column=55))
region_000370 = Region(begin=Location(line=64, column=50), end=Location(line=64, column=55))
region_000371 = Region(begin=Location(line=64, column=35), end=Location(line=64, column=56))
region_000372 = Region(begin=Location(line=64, column=5), end=Location(line=65, column=1))
region_000373 = Region(begin=Location(line=64, column=5), end=Location(line=64, column=11))
region_000374 = Region(begin=Location(line=64, column=57), end=Location(line=64, column=66))
region_000375 = Region(begin=Location(line=64, column=25), end=Location(line=64, column=35))
region_000376 = Region(begin=Location(line=19, column=1), end=Location(line=65, column=1))
region_000377 = Region(begin=Location(line=19, column=1), end=Location(line=19, column=7))
region_000378 = Region(begin=Location(line=19, column=8), end=Location(line=19, column=17))
region_000379 = Region(begin=Location(line=19, column=26), end=Location(line=19, column=29))
region_000380 = Region(begin=Location(line=22, column=2), end=Location(line=65, column=1))


# ----------------------------------------------------------------------
statement_000000 = StandardTypeItemParserInfo.Create(
    regions=[region_000000, region_000000],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000000 = StandardTypeParserInfo.Create(
    regions=[region_000000, None, region_000000],
    mutability_modifier=None,
    items=[statement_000000, ],
)

statement_000001 = StandardTypeItemParserInfo.Create(
    regions=[region_000001, region_000001],
    name="None",
    templates=None,
    constraints=None,
)

statement_000001 = StandardTypeParserInfo.Create(
    regions=[region_000001, None, region_000001],
    mutability_modifier=None,
    items=[statement_000001, ],
)

statement_000002 = VariantTypeParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000002, None, region_000002],
    mutability_modifier=None,
    types=[statement_000000, statement_000001, ],
)

statement_000003 = NoneExpressionParserInfo.Create(
    regions=[region_000003],
)

statement_000004 = ConstraintParameterParserInfo.Create(
    regions=[region_000004, region_000005],
    type=statement_000002,
    name="min_value!",
    default_value=statement_000003,
)

statement_000005 = StandardTypeItemParserInfo.Create(
    regions=[region_000006, region_000006],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000005 = StandardTypeParserInfo.Create(
    regions=[region_000006, None, region_000006],
    mutability_modifier=None,
    items=[statement_000005, ],
)

statement_000006 = StandardTypeItemParserInfo.Create(
    regions=[region_000007, region_000007],
    name="None",
    templates=None,
    constraints=None,
)

statement_000006 = StandardTypeParserInfo.Create(
    regions=[region_000007, None, region_000007],
    mutability_modifier=None,
    items=[statement_000006, ],
)

statement_000007 = VariantTypeParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000008, None, region_000008],
    mutability_modifier=None,
    types=[statement_000005, statement_000006, ],
)

statement_000008 = NoneExpressionParserInfo.Create(
    regions=[region_000009],
)

statement_000009 = ConstraintParameterParserInfo.Create(
    regions=[region_000010, region_000011],
    type=statement_000007,
    name="max_value!",
    default_value=statement_000008,
)

statement_000010 = ConstraintParametersParserInfo.Create(
    regions=[region_000012, None, region_000013, None],
    positional=None,
    any=[statement_000004, statement_000009, ],
    keyword=None,
)

statement_000011 = FuncOrTypeExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.CompileTime,
    regions=[region_000014, region_000014],
    name="Enforce!",
)

statement_000012 = VariableExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.CompileTimeType,
    regions=[region_000015, region_000015],
    name="min_value!",
)

statement_000013 = StandardTypeItemParserInfo.Create(
    regions=[region_000016, region_000016],
    name="None",
    templates=None,
    constraints=None,
)

statement_000013 = StandardTypeParserInfo.Create(
    regions=[region_000016, None, region_000016],
    mutability_modifier=None,
    items=[statement_000013, ],
)

statement_000014 = TypeCheckExpressionParserInfo.Create(
    regions=[region_000017, region_000018],
    operator=TypeCheckExpressionParserInfoOperatorType.Is,
    expression=statement_000012,
    type=statement_000013,
)

statement_000015 = VariableExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.CompileTimeType,
    regions=[region_000019, region_000019],
    name="max_value!",
)

statement_000016 = StandardTypeItemParserInfo.Create(
    regions=[region_000020, region_000020],
    name="None",
    templates=None,
    constraints=None,
)

statement_000016 = StandardTypeParserInfo.Create(
    regions=[region_000020, None, region_000020],
    mutability_modifier=None,
    items=[statement_000016, ],
)

statement_000017 = TypeCheckExpressionParserInfo.Create(
    regions=[region_000021, region_000022],
    operator=TypeCheckExpressionParserInfoOperatorType.Is,
    expression=statement_000015,
    type=statement_000016,
)

statement_000018 = VariableExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.CompileTimeType,
    regions=[region_000023, region_000023],
    name="min_value!",
)

statement_000019 = VariableExpressionParserInfo.Create(
    parser_info_type=ParserInfoType.CompileTimeType,
    regions=[region_000024, region_000024],
    name="max_value!",
)

statement_000020 = BinaryExpressionParserInfo.Create(
    regions=[region_000025, region_000026],
    left_expression=statement_000018,
    operator=BinaryExpressionOperatorType.LessEqual,
    right_expression=statement_000019,
)

statement_000021 = BinaryExpressionParserInfo.Create(
    regions=[region_000027, region_000028],
    left_expression=statement_000017,
    operator=BinaryExpressionOperatorType.LogicalOr,
    right_expression=statement_000020,
)

statement_000022 = BinaryExpressionParserInfo.Create(
    regions=[region_000029, region_000030],
    left_expression=statement_000014,
    operator=BinaryExpressionOperatorType.LogicalOr,
    right_expression=statement_000021,
)

statement_000022 = FuncArgumentParserInfo.Create(
    parser_info_type=ParserInfoType.CompileTimeType,
    regions=[region_000029, None],
    expression=statement_000022,
    keyword=None,
)

statement_000023 = FuncArgumentsParserInfo.Create(
    regions=[region_000031, region_000031],
    arguments=[statement_000022, ],
)

statement_000024 = CallExpressionParserInfo.Create(
    regions=[region_000032, region_000031],
    expression=statement_000011,
    arguments=statement_000023,
)

statement_000025 = SpecialMethodStatementParserInfo.Create(
    regions=[region_000033, region_000034, region_000035],
    parent_class_capabilities=ConceptCapabilities,
    the_type=SpecialMethodType.CompileTimeEvalConstraints,
    statements=[statement_000024, ],
)

statement_000026 = StandardTypeItemParserInfo.Create(
    regions=[region_000036, region_000036],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000027 = StandardTypeParserInfo.Create(
    regions=[region_000037, region_000038, region_000036],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000026, ],
)

statement_000028 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000039, region_000039, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000029 = TemplateParametersParserInfo.Create(
    regions=[region_000040, None, region_000039, None],
    positional=None,
    any=[statement_000028, ],
    keyword=None,
)

statement_000030 = StandardTypeItemParserInfo.Create(
    regions=[region_000041, region_000041],
    name="ArchiveT",
    templates=None,
    constraints=None,
)

statement_000031 = StandardTypeParserInfo.Create(
    regions=[region_000042, region_000043, region_000041],
    mutability_modifier=MutabilityModifier.ref,
    items=[statement_000030, ],
)

statement_000032 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000044, None, region_000045],  # type: ignore
    type=statement_000031,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000033 = FuncParametersParserInfo.Create(
    regions=[region_000046, None, region_000044, None],
    positional=None,
    any_args=[statement_000032, ],
    keyword=None,
)

statement_000034 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000047, region_000046, region_000048, None, region_000047, region_000049, None, None, None, None, None, None, None, None, region_000050],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000033,
    visibility_param=VisibilityModifier.public,
    mutability_param=None,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000027,
    name=FuncDefinitionStatementParserInfoOperatorType.Deserialize,
    documentation=None,
    templates=statement_000029,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=True,
)

statement_000035 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000051, region_000051, None],
    name="ArchiveT",
    is_variadic=None,
    default_type=None,
)

statement_000036 = TemplateParametersParserInfo.Create(
    regions=[region_000052, None, region_000051, None],
    positional=None,
    any=[statement_000035, ],
    keyword=None,
)

statement_000037 = StandardTypeItemParserInfo.Create(
    regions=[region_000053, region_000053],
    name="ArchiveT",
    templates=None,
    constraints=None,
)

statement_000038 = StandardTypeParserInfo.Create(
    regions=[region_000054, region_000055, region_000053],
    mutability_modifier=MutabilityModifier.ref,
    items=[statement_000037, ],
)

statement_000039 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000056, None, region_000057],  # type: ignore
    type=statement_000038,
    is_variadic=None,
    name="archive",
    default_value=None,
)

statement_000040 = FuncParametersParserInfo.Create(
    regions=[region_000058, None, region_000056, None],
    positional=None,
    any_args=[statement_000039, ],
    keyword=None,
)

statement_000041 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000059, region_000058, region_000060, region_000061, region_000059, region_000062, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000040,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Serialize,
    documentation=None,
    templates=statement_000036,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000042 = TemplateTypeParameterParserInfo.Create(
    regions=[region_000063, region_000063, None],
    name="VisitorT",
    is_variadic=None,
    default_type=None,
)

statement_000043 = TemplateParametersParserInfo.Create(
    regions=[region_000064, None, region_000063, None],
    positional=None,
    any=[statement_000042, ],
    keyword=None,
)

statement_000044 = StandardTypeItemParserInfo.Create(
    regions=[region_000065, region_000065],
    name="VisitorT",
    templates=None,
    constraints=None,
)

statement_000045 = StandardTypeParserInfo.Create(
    regions=[region_000066, region_000067, region_000065],
    mutability_modifier=MutabilityModifier.ref,
    items=[statement_000044, ],
)

statement_000046 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000068, None, region_000069],  # type: ignore
    type=statement_000045,
    is_variadic=None,
    name="visitor",
    default_value=None,
)

statement_000047 = FuncParametersParserInfo.Create(
    regions=[region_000070, None, region_000068, None],
    positional=None,
    any_args=[statement_000046, ],
    keyword=None,
)

statement_000048 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000071, region_000070, region_000072, region_000073, region_000071, region_000074, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000047,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=None,
    name=FuncDefinitionStatementParserInfoOperatorType.Accept,
    documentation=None,
    templates=statement_000043,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000049 = StandardTypeItemParserInfo.Create(
    regions=[region_000075, region_000075],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000050 = StandardTypeParserInfo.Create(
    regions=[region_000076, region_000077, region_000075],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000049, ],
)

statement_000051 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000078, region_000082, region_000079, region_000080, region_000078, region_000081, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000050,
    name=FuncDefinitionStatementParserInfoOperatorType.Clone,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000052 = StandardTypeItemParserInfo.Create(
    regions=[region_000083, region_000083],
    name="Bool",
    templates=None,
    constraints=None,
)

statement_000053 = StandardTypeParserInfo.Create(
    regions=[region_000084, region_000085, region_000083],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000052, ],
)

statement_000054 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000086, region_000090, region_000087, region_000088, region_000086, region_000089, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000053,
    name=FuncDefinitionStatementParserInfoOperatorType.ToBool,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000055 = StandardTypeItemParserInfo.Create(
    regions=[region_000091, region_000091],
    name="Str",
    templates=None,
    constraints=None,
)

statement_000056 = StandardTypeParserInfo.Create(
    regions=[region_000092, region_000093, region_000091],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000055, ],
)

statement_000057 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000094, region_000098, region_000095, region_000096, region_000094, region_000097, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000056,
    name=FuncDefinitionStatementParserInfoOperatorType.ToString,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000058 = StandardTypeItemParserInfo.Create(
    regions=[region_000099, region_000099],
    name="CompareResult",
    templates=None,
    constraints=None,
)

statement_000059 = StandardTypeParserInfo.Create(
    regions=[region_000100, region_000101, region_000099],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000058, ],
)

statement_000060 = StandardTypeItemParserInfo.Create(
    regions=[region_000102, region_000102],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000061 = StandardTypeParserInfo.Create(
    regions=[region_000103, region_000104, region_000102],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000060, ],
)

statement_000062 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000105, None, region_000106],  # type: ignore
    type=statement_000061,
    is_variadic=None,
    name="this",
    default_value=None,
)

statement_000063 = StandardTypeItemParserInfo.Create(
    regions=[region_000107, region_000107],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000064 = StandardTypeParserInfo.Create(
    regions=[region_000108, region_000109, region_000107],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000063, ],
)

statement_000065 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000110, None, region_000111],  # type: ignore
    type=statement_000064,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000066 = FuncParametersParserInfo.Create(
    regions=[region_000112, None, region_000113, None],
    positional=None,
    any_args=[statement_000062, statement_000065, ],
    keyword=None,
)

statement_000067 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000114, region_000112, region_000115, None, region_000114, region_000116, None, None, None, None, None, None, None, None, region_000117],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000066,
    visibility_param=VisibilityModifier.public,
    mutability_param=None,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000059,
    name=FuncDefinitionStatementParserInfoOperatorType.Compare,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=True,
)

statement_000068 = StandardTypeItemParserInfo.Create(
    regions=[region_000118, region_000118],
    name="Bool",
    templates=None,
    constraints=None,
)

statement_000069 = StandardTypeParserInfo.Create(
    regions=[region_000119, region_000120, region_000118],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000068, ],
)

statement_000070 = StandardTypeItemParserInfo.Create(
    regions=[region_000121, region_000121],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000071 = StandardTypeParserInfo.Create(
    regions=[region_000122, region_000123, region_000121],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000070, ],
)

statement_000072 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000124, None, region_000125],  # type: ignore
    type=statement_000071,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000073 = FuncParametersParserInfo.Create(
    regions=[region_000126, None, region_000124, None],
    positional=None,
    any_args=[statement_000072, ],
    keyword=None,
)

statement_000074 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000127, region_000126, region_000128, region_000129, region_000127, region_000130, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000073,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000069,
    name=FuncDefinitionStatementParserInfoOperatorType.Equal,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000075 = StandardTypeItemParserInfo.Create(
    regions=[region_000131, region_000131],
    name="Bool",
    templates=None,
    constraints=None,
)

statement_000076 = StandardTypeParserInfo.Create(
    regions=[region_000132, region_000133, region_000131],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000075, ],
)

statement_000077 = StandardTypeItemParserInfo.Create(
    regions=[region_000134, region_000134],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000078 = StandardTypeParserInfo.Create(
    regions=[region_000135, region_000136, region_000134],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000077, ],
)

statement_000079 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000137, None, region_000138],  # type: ignore
    type=statement_000078,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000080 = FuncParametersParserInfo.Create(
    regions=[region_000139, None, region_000137, None],
    positional=None,
    any_args=[statement_000079, ],
    keyword=None,
)

statement_000081 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000140, region_000139, region_000141, region_000142, region_000140, region_000143, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000080,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000076,
    name=FuncDefinitionStatementParserInfoOperatorType.NotEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000082 = StandardTypeItemParserInfo.Create(
    regions=[region_000144, region_000144],
    name="Bool",
    templates=None,
    constraints=None,
)

statement_000083 = StandardTypeParserInfo.Create(
    regions=[region_000145, region_000146, region_000144],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000082, ],
)

statement_000084 = StandardTypeItemParserInfo.Create(
    regions=[region_000147, region_000147],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000085 = StandardTypeParserInfo.Create(
    regions=[region_000148, region_000149, region_000147],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000084, ],
)

statement_000086 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000150, None, region_000151],  # type: ignore
    type=statement_000085,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000087 = FuncParametersParserInfo.Create(
    regions=[region_000152, None, region_000150, None],
    positional=None,
    any_args=[statement_000086, ],
    keyword=None,
)

statement_000088 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000153, region_000152, region_000154, region_000155, region_000153, region_000156, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000087,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000083,
    name=FuncDefinitionStatementParserInfoOperatorType.Less,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000089 = StandardTypeItemParserInfo.Create(
    regions=[region_000157, region_000157],
    name="Bool",
    templates=None,
    constraints=None,
)

statement_000090 = StandardTypeParserInfo.Create(
    regions=[region_000158, region_000159, region_000157],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000089, ],
)

statement_000091 = StandardTypeItemParserInfo.Create(
    regions=[region_000160, region_000160],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000092 = StandardTypeParserInfo.Create(
    regions=[region_000161, region_000162, region_000160],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000091, ],
)

statement_000093 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000163, None, region_000164],  # type: ignore
    type=statement_000092,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000094 = FuncParametersParserInfo.Create(
    regions=[region_000165, None, region_000163, None],
    positional=None,
    any_args=[statement_000093, ],
    keyword=None,
)

statement_000095 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000166, region_000165, region_000167, region_000168, region_000166, region_000169, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000094,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000090,
    name=FuncDefinitionStatementParserInfoOperatorType.LessEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000096 = StandardTypeItemParserInfo.Create(
    regions=[region_000170, region_000170],
    name="Bool",
    templates=None,
    constraints=None,
)

statement_000097 = StandardTypeParserInfo.Create(
    regions=[region_000171, region_000172, region_000170],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000096, ],
)

statement_000098 = StandardTypeItemParserInfo.Create(
    regions=[region_000173, region_000173],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000099 = StandardTypeParserInfo.Create(
    regions=[region_000174, region_000175, region_000173],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000098, ],
)

statement_000100 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000176, None, region_000177],  # type: ignore
    type=statement_000099,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000101 = FuncParametersParserInfo.Create(
    regions=[region_000178, None, region_000176, None],
    positional=None,
    any_args=[statement_000100, ],
    keyword=None,
)

statement_000102 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000179, region_000178, region_000180, region_000181, region_000179, region_000182, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000101,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000097,
    name=FuncDefinitionStatementParserInfoOperatorType.Greater,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000103 = StandardTypeItemParserInfo.Create(
    regions=[region_000183, region_000183],
    name="Bool",
    templates=None,
    constraints=None,
)

statement_000104 = StandardTypeParserInfo.Create(
    regions=[region_000184, region_000185, region_000183],
    mutability_modifier=MutabilityModifier.val,
    items=[statement_000103, ],
)

statement_000105 = StandardTypeItemParserInfo.Create(
    regions=[region_000186, region_000186],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000106 = StandardTypeParserInfo.Create(
    regions=[region_000187, region_000188, region_000186],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000105, ],
)

statement_000107 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000189, None, region_000190],  # type: ignore
    type=statement_000106,
    is_variadic=None,
    name="that",
    default_value=None,
)

statement_000108 = FuncParametersParserInfo.Create(
    regions=[region_000191, None, region_000189, None],
    positional=None,
    any_args=[statement_000107, ],
    keyword=None,
)

statement_000109 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000192, region_000191, region_000193, region_000194, region_000192, region_000195, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000108,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000104,
    name=FuncDefinitionStatementParserInfoOperatorType.GreaterEqual,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000110 = StandardTypeItemParserInfo.Create(
    regions=[region_000196, region_000196],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000111 = StandardTypeParserInfo.Create(
    regions=[region_000197, region_000198, region_000196],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000110, ],
)

statement_000112 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000199, region_000203, region_000200, region_000201, region_000199, region_000202, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000111,
    name=FuncDefinitionStatementParserInfoOperatorType.Negative,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000113 = StandardTypeItemParserInfo.Create(
    regions=[region_000204, region_000204],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000114 = StandardTypeParserInfo.Create(
    regions=[region_000205, region_000206, region_000204],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000113, ],
)

statement_000115 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000207, region_000211, region_000208, region_000209, region_000207, region_000210, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000114,
    name=FuncDefinitionStatementParserInfoOperatorType.Positive,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000116 = StandardTypeItemParserInfo.Create(
    regions=[region_000212, region_000212],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000117 = StandardTypeParserInfo.Create(
    regions=[region_000213, region_000214, region_000212],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000116, ],
)

statement_000118 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000215, region_000219, region_000216, region_000217, region_000215, region_000218, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=True,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000117,
    name=FuncDefinitionStatementParserInfoOperatorType.BitFlip,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000119 = StandardTypeItemParserInfo.Create(
    regions=[region_000220, region_000220],
    name="Num",
    templates=None,
    constraints=None,
)

statement_000120 = StandardTypeParserInfo.Create(
    regions=[region_000221, region_000222, region_000220],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000119, ],
)

statement_000121 = StandardTypeItemParserInfo.Create(
    regions=[region_000223, region_000223],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000122 = StandardTypeParserInfo.Create(
    regions=[region_000224, region_000225, region_000223],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000121, ],
)

statement_000123 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000226, None, region_000227],  # type: ignore
    type=statement_000122,
    is_variadic=None,
    name="divisor",
    default_value=None,
)

statement_000124 = FuncParametersParserInfo.Create(
    regions=[region_000228, None, region_000226, None],
    positional=None,
    any_args=[statement_000123, ],
    keyword=None,
)

statement_000125 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000229, region_000228, region_000230, region_000231, region_000229, region_000232, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000124,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000120,
    name=FuncDefinitionStatementParserInfoOperatorType.Divide,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000126 = StandardTypeItemParserInfo.Create(
    regions=[region_000233, region_000233],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000127 = StandardTypeParserInfo.Create(
    regions=[region_000234, region_000235, region_000233],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000126, ],
)

statement_000128 = StandardTypeItemParserInfo.Create(
    regions=[region_000236, region_000236],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000129 = StandardTypeParserInfo.Create(
    regions=[region_000237, region_000238, region_000236],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000128, ],
)

statement_000130 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000239, None, region_000240],  # type: ignore
    type=statement_000129,
    is_variadic=None,
    name="divisor",
    default_value=None,
)

statement_000131 = FuncParametersParserInfo.Create(
    regions=[region_000241, None, region_000239, None],
    positional=None,
    any_args=[statement_000130, ],
    keyword=None,
)

statement_000132 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000242, region_000241, region_000243, region_000244, region_000242, region_000245, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000131,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000127,
    name=FuncDefinitionStatementParserInfoOperatorType.DivideFloor,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000133 = StandardTypeItemParserInfo.Create(
    regions=[region_000246, region_000246],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000134 = StandardTypeParserInfo.Create(
    regions=[region_000247, region_000248, region_000246],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000133, ],
)

statement_000135 = StandardTypeItemParserInfo.Create(
    regions=[region_000249, region_000249],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000136 = StandardTypeParserInfo.Create(
    regions=[region_000250, region_000251, region_000249],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000135, ],
)

statement_000137 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000252, None, region_000253],  # type: ignore
    type=statement_000136,
    is_variadic=None,
    name="divisor",
    default_value=None,
)

statement_000138 = FuncParametersParserInfo.Create(
    regions=[region_000254, None, region_000252, None],
    positional=None,
    any_args=[statement_000137, ],
    keyword=None,
)

statement_000139 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000255, region_000254, region_000256, region_000257, region_000255, region_000258, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000138,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000134,
    name=FuncDefinitionStatementParserInfoOperatorType.Modulo,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000140 = StandardTypeItemParserInfo.Create(
    regions=[region_000259, region_000259],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000141 = StandardTypeParserInfo.Create(
    regions=[region_000260, region_000261, region_000259],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000140, ],
)

statement_000142 = StandardTypeItemParserInfo.Create(
    regions=[region_000262, region_000262],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000143 = StandardTypeParserInfo.Create(
    regions=[region_000263, region_000264, region_000262],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000142, ],
)

statement_000144 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000265, None, region_000266],  # type: ignore
    type=statement_000143,
    is_variadic=None,
    name="multiplier",
    default_value=None,
)

statement_000145 = FuncParametersParserInfo.Create(
    regions=[region_000267, None, region_000265, None],
    positional=None,
    any_args=[statement_000144, ],
    keyword=None,
)

statement_000146 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000268, region_000267, region_000269, region_000270, region_000268, region_000271, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000145,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000141,
    name=FuncDefinitionStatementParserInfoOperatorType.Multiply,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000147 = StandardTypeItemParserInfo.Create(
    regions=[region_000272, region_000272],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000148 = StandardTypeParserInfo.Create(
    regions=[region_000273, region_000274, region_000272],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000147, ],
)

statement_000149 = StandardTypeItemParserInfo.Create(
    regions=[region_000275, region_000275],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000150 = StandardTypeParserInfo.Create(
    regions=[region_000276, region_000277, region_000275],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000149, ],
)

statement_000151 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000278, None, region_000279],  # type: ignore
    type=statement_000150,
    is_variadic=None,
    name="exponent",
    default_value=None,
)

statement_000152 = FuncParametersParserInfo.Create(
    regions=[region_000280, None, region_000278, None],
    positional=None,
    any_args=[statement_000151, ],
    keyword=None,
)

statement_000153 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000281, region_000280, region_000282, region_000283, region_000281, region_000284, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000152,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000148,
    name=FuncDefinitionStatementParserInfoOperatorType.Power,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000154 = StandardTypeItemParserInfo.Create(
    regions=[region_000285, region_000285],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000155 = StandardTypeParserInfo.Create(
    regions=[region_000286, region_000287, region_000285],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000154, ],
)

statement_000156 = StandardTypeItemParserInfo.Create(
    regions=[region_000288, region_000288],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000157 = StandardTypeParserInfo.Create(
    regions=[region_000289, region_000290, region_000288],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000156, ],
)

statement_000158 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000291, None, region_000292],  # type: ignore
    type=statement_000157,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000159 = FuncParametersParserInfo.Create(
    regions=[region_000293, None, region_000291, None],
    positional=None,
    any_args=[statement_000158, ],
    keyword=None,
)

statement_000160 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000294, region_000293, region_000295, region_000296, region_000294, region_000297, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000159,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000155,
    name=FuncDefinitionStatementParserInfoOperatorType.Add,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000161 = StandardTypeItemParserInfo.Create(
    regions=[region_000298, region_000298],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000162 = StandardTypeParserInfo.Create(
    regions=[region_000299, region_000300, region_000298],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000161, ],
)

statement_000163 = StandardTypeItemParserInfo.Create(
    regions=[region_000301, region_000301],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000164 = StandardTypeParserInfo.Create(
    regions=[region_000302, region_000303, region_000301],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000163, ],
)

statement_000165 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000304, None, region_000305],  # type: ignore
    type=statement_000164,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000166 = FuncParametersParserInfo.Create(
    regions=[region_000306, None, region_000304, None],
    positional=None,
    any_args=[statement_000165, ],
    keyword=None,
)

statement_000167 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000307, region_000306, region_000308, region_000309, region_000307, region_000310, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000166,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000162,
    name=FuncDefinitionStatementParserInfoOperatorType.Subtract,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000168 = StandardTypeItemParserInfo.Create(
    regions=[region_000311, region_000311],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000169 = StandardTypeParserInfo.Create(
    regions=[region_000312, region_000313, region_000311],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000168, ],
)

statement_000170 = StandardTypeItemParserInfo.Create(
    regions=[region_000314, region_000314],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000171 = StandardTypeParserInfo.Create(
    regions=[region_000315, region_000316, region_000314],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000170, ],
)

statement_000172 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000317, None, region_000318],  # type: ignore
    type=statement_000171,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000173 = FuncParametersParserInfo.Create(
    regions=[region_000319, None, region_000317, None],
    positional=None,
    any_args=[statement_000172, ],
    keyword=None,
)

statement_000174 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000320, region_000319, region_000321, region_000322, region_000320, region_000323, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000173,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000169,
    name=FuncDefinitionStatementParserInfoOperatorType.BitShiftLeft,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000175 = StandardTypeItemParserInfo.Create(
    regions=[region_000324, region_000324],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000176 = StandardTypeParserInfo.Create(
    regions=[region_000325, region_000326, region_000324],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000175, ],
)

statement_000177 = StandardTypeItemParserInfo.Create(
    regions=[region_000327, region_000327],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000178 = StandardTypeParserInfo.Create(
    regions=[region_000328, region_000329, region_000327],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000177, ],
)

statement_000179 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000330, None, region_000331],  # type: ignore
    type=statement_000178,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000180 = FuncParametersParserInfo.Create(
    regions=[region_000332, None, region_000330, None],
    positional=None,
    any_args=[statement_000179, ],
    keyword=None,
)

statement_000181 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000333, region_000332, region_000334, region_000335, region_000333, region_000336, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000180,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000176,
    name=FuncDefinitionStatementParserInfoOperatorType.BitShiftRight,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000182 = StandardTypeItemParserInfo.Create(
    regions=[region_000337, region_000337],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000183 = StandardTypeParserInfo.Create(
    regions=[region_000338, region_000339, region_000337],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000182, ],
)

statement_000184 = StandardTypeItemParserInfo.Create(
    regions=[region_000340, region_000340],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000185 = StandardTypeParserInfo.Create(
    regions=[region_000341, region_000342, region_000340],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000184, ],
)

statement_000186 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000343, None, region_000344],  # type: ignore
    type=statement_000185,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000187 = FuncParametersParserInfo.Create(
    regions=[region_000345, None, region_000343, None],
    positional=None,
    any_args=[statement_000186, ],
    keyword=None,
)

statement_000188 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000346, region_000345, region_000347, region_000348, region_000346, region_000349, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000187,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000183,
    name=FuncDefinitionStatementParserInfoOperatorType.BitAnd,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000189 = StandardTypeItemParserInfo.Create(
    regions=[region_000350, region_000350],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000190 = StandardTypeParserInfo.Create(
    regions=[region_000351, region_000352, region_000350],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000189, ],
)

statement_000191 = StandardTypeItemParserInfo.Create(
    regions=[region_000353, region_000353],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000192 = StandardTypeParserInfo.Create(
    regions=[region_000354, region_000355, region_000353],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000191, ],
)

statement_000193 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000356, None, region_000357],  # type: ignore
    type=statement_000192,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000194 = FuncParametersParserInfo.Create(
    regions=[region_000358, None, region_000356, None],
    positional=None,
    any_args=[statement_000193, ],
    keyword=None,
)

statement_000195 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000359, region_000358, region_000360, region_000361, region_000359, region_000362, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000194,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000190,
    name=FuncDefinitionStatementParserInfoOperatorType.BitXor,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000196 = StandardTypeItemParserInfo.Create(
    regions=[region_000363, region_000363],
    name="ThisType",
    templates=None,
    constraints=None,
)

statement_000197 = StandardTypeParserInfo.Create(
    regions=[region_000364, region_000365, region_000363],
    mutability_modifier=MutabilityModifier.new,
    items=[statement_000196, ],
)

statement_000198 = StandardTypeItemParserInfo.Create(
    regions=[region_000366, region_000366],
    name="Int",
    templates=None,
    constraints=None,
)

statement_000199 = StandardTypeParserInfo.Create(
    regions=[region_000367, region_000368, region_000366],
    mutability_modifier=MutabilityModifier.immutable,
    items=[statement_000198, ],
)

statement_000200 = FuncParameterParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000369, None, region_000370],  # type: ignore
    type=statement_000199,
    is_variadic=None,
    name="value",
    default_value=None,
)

statement_000201 = FuncParametersParserInfo.Create(
    regions=[region_000371, None, region_000369, None],
    positional=None,
    any_args=[statement_000200, ],
    keyword=None,
)

statement_000202 = FuncDefinitionStatementParserInfo.Create(
    parser_info_type=ParserInfoType.Standard,
    regions=[region_000372, region_000371, region_000373, region_000374, region_000372, region_000375, None, None, None, None, None, None, None, None, None],
    parent_class_capabilities=ConceptCapabilities,
    parameters=statement_000201,
    visibility_param=VisibilityModifier.public,
    mutability_param=MutabilityModifier.immutable,
    method_modifier_param=MethodModifier.abstract,
    return_type=statement_000197,
    name=FuncDefinitionStatementParserInfoOperatorType.BitOr,
    documentation=None,
    templates=None,
    captured_variables=None,
    statements=None,
    is_deferred=None,
    is_exceptional=None,
    is_generator=None,
    is_reentrant=None,
    is_scoped=None,
    is_static=None,
)

statement_000203 = ClassStatementParserInfo.Create(
    regions=[region_000376, region_000377, region_000378, region_000379, None, None, None, None, region_000380, region_000376, None, None],
    class_capabilities=ConceptCapabilities,
    visibility_param=VisibilityModifier.public,
    class_modifier_param=ClassModifier.immutable,
    name="Int",
    documentation=None,
    templates=None,
    constraints=statement_000010,
    extends=None,
    implements=None,
    uses=None,
    statements=[statement_000025, statement_000034, statement_000041, statement_000048, statement_000051, statement_000054, statement_000057, statement_000067, statement_000074, statement_000081, statement_000088, statement_000095, statement_000102, statement_000109, statement_000112, statement_000115, statement_000118, statement_000125, statement_000132, statement_000139, statement_000146, statement_000153, statement_000160, statement_000167, statement_000174, statement_000181, statement_000188, statement_000195, statement_000202, ],
    constructor_visibility_param=VisibilityModifier.public,
    is_abstract=None,
    is_final=None,
)

public_exports = [
    statement_000203,
]
