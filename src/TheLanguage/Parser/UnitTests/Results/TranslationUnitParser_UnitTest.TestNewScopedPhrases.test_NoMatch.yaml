The syntax is not recognized [4, 1]

# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
            IsIgnored: False
            IterBegin: "[1, 1] (0)"
            IterEnd: "[1, 4] (3)"
            Type: "Upper <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
              Match: "<_sre.SRE_Match object; span=(0, 3), match='ONE'>"
            Whitespace: None
        IterBegin: "[1, 1] (0)"
        IterEnd: "[1, 4] (3)"
        Type: "(Upper Phrase, Newline Phrase, Indent Phrase, Dedent Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[1, 4] (3)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
            IsIgnored: False
            IterBegin: "[1, 4] (3)"
            IterEnd: "[2, 1] (4)"
            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
              End: 4
              Start: 3
            Whitespace: None
        IterBegin: "[1, 4] (3)"
        IterEnd: "[2, 1] (4)"
        Type: "(Upper Phrase, Newline Phrase, Indent Phrase, Dedent Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 4] (3)"
    IterEnd: "[2, 1] (4)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
            IsIgnored: False
            IterBegin: "[2, 1] (4)"
            IterEnd: "[2, 5] (8)"
            Type: "Indent <class 'TheLanguage.Parser.Components.Token.IndentToken'>"
            Value: # <class 'TheLanguage.Parser.Components.Token.IndentToken.MatchResult'>
              End: 8
              Start: 4
              Value: 4
            Whitespace: None
        IterBegin: "[2, 1] (4)"
        IterEnd: "[2, 5] (8)"
        Type: "(Upper Phrase, Newline Phrase, Indent Phrase, Dedent Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 1] (4)"
    IterEnd: "[2, 5] (8)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
            IsIgnored: False
            IterBegin: "[2, 5] (8)"
            IterEnd: "[2, 8] (11)"
            Type: "Lower <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
              Match: "<_sre.SRE_Match object; span=(8, 11), match='two'>"
            Whitespace: None
        IterBegin: "[2, 5] (8)"
        IterEnd: "[2, 8] (11)"
        Type: "(Upper Phrase, Newline Phrase, Indent Phrase, Dedent Phrase) / (Lower Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 5] (8)"
    IterEnd: "[2, 8] (11)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
            IsIgnored: False
            IterBegin: "[2, 8] (11)"
            IterEnd: "[4, 1] (13)"
            Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
            Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
              End: 13
              Start: 11
            Whitespace: None
        IterBegin: "[2, 8] (11)"
        IterEnd: "[4, 1] (13)"
        Type: "(Upper Phrase, Newline Phrase, Indent Phrase, Dedent Phrase) / (Lower Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 8] (11)"
    IterEnd: "[4, 1] (13)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
            IsIgnored: False
            IterBegin: "[4, 1] (13)"
            IterEnd: "[4, 1] (13)"
            Type: "Dedent <class 'TheLanguage.Parser.Components.Token.DedentToken'>"
            Value: # <class 'TheLanguage.Parser.Components.Token.DedentToken.MatchResult'>
              {}
            Whitespace: None
        IterBegin: "[4, 1] (13)"
        IterEnd: "[4, 1] (13)"
        Type: "(Upper Phrase, Newline Phrase, Indent Phrase, Dedent Phrase) / (Lower Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[4, 1] (13)"
    IterEnd: "[4, 1] (13)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children: []
            IterBegin: None
            IterEnd: None
            Type: "Upper Phrase <class 'TheLanguage.Parser.Phrases.TokenPhrase.TokenPhrase'>"
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children: []
            IterBegin: None
            IterEnd: None
            Type: "Newline Phrase <class 'TheLanguage.Parser.Phrases.TokenPhrase.TokenPhrase'>"
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children: []
            IterBegin: None
            IterEnd: None
            Type: "Indent Phrase <class 'TheLanguage.Parser.Phrases.TokenPhrase.TokenPhrase'>"
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children: []
            IterBegin: None
            IterEnd: None
            Type: "Dedent Phrase <class 'TheLanguage.Parser.Phrases.TokenPhrase.TokenPhrase'>"
        IterBegin: None
        IterEnd: None
        Type: "(Upper Phrase, Newline Phrase, Indent Phrase, Dedent Phrase) <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: None
    IterEnd: None
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: None
Type: "<None>"
