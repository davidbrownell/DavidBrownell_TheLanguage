# <class 'TheLanguage.Parser.Components.AST.RootNode'>
Children:
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 1] (0)"
                IterEnd: "[1, 6] (5)"
                Type: "'raise' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(0, 5), match='raise'>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                        IsIgnored: False
                                        IterBegin: "[1, 7] (6)"
                                        IterEnd: "[1, 10] (9)"
                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                          Match: "<_sre.SRE_Match object; span=(6, 9), match='foo'>"
                                        Whitespace:
                                          - 5
                                          - 6
                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                        Name: "foo"
                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 7
                                            Line: 1
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 10
                                            Line: 1
                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 7
                                            Line: 1
                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                            Column: 10
                                            Line: 1
                                    IterBegin: "[1, 7] (6)"
                                    IterEnd: "[1, 10] (9)"
                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                IterBegin: "[1, 7] (6)"
                                IterEnd: "[1, 10] (9)"
                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                    Name: "foo"
                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 7
                                        Line: 1
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 10
                                        Line: 1
                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 7
                                        Line: 1
                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                        Column: 10
                                        Line: 1
                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 7
                                    Line: 1
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 10
                                    Line: 1
                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 7
                                    Line: 1
                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                    Column: 10
                                    Line: 1
                            IterBegin: "[1, 7] (6)"
                            IterEnd: "[1, 10] (9)"
                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                        IterBegin: "[1, 7] (6)"
                        IterEnd: "[1, 10] (9)"
                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[1, 7] (6)"
                    IterEnd: "[1, 10] (9)"
                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                IterBegin: "[1, 7] (6)"
                IterEnd: "[1, 10] (9)"
                Type: "Repeat: {DynamicPhrasesType.Expressions, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[1, 10] (9)"
                IterEnd: "[2, 1] (10)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 10
                  Start: 9
                Whitespace: None
            IterBegin: "[1, 1] (0)"
            IterEnd: "[2, 1] (10)"
            Type: "Raise Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[1, 1] (0)"
        IterEnd: "[2, 1] (10)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[1, 1] (0)"
    IterEnd: "[2, 1] (10)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
  - # <class 'TheLanguage.Parser.Components.AST.Node'>
    Children:
      - # <class 'TheLanguage.Parser.Components.AST.Node'>
        Children:
          - # <class 'TheLanguage.Parser.Components.AST.Node'>
            Children:
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 1] (10)"
                IterEnd: "[2, 6] (15)"
                Type: "'raise' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                  Match: "<_sre.SRE_Match object; span=(10, 15), match='raise'>"
                Whitespace: None
              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                Children:
                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                    Children:
                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                        Children:
                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                            Children:
                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                Children:
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[2, 7] (16)"
                                    IterEnd: "[2, 8] (17)"
                                    Type: "'(' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(16, 17), match='('>"
                                    Whitespace:
                                      - 15
                                      - 16
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                        IsIgnored: False
                                                        IterBegin: "[2, 8] (17)"
                                                        IterEnd: "[2, 9] (18)"
                                                        Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                        Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                          Match: "<_sre.SRE_Match object; span=(17, 18), match='a'>"
                                                        Whitespace: None
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                        Name: "a"
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 8
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 9
                                                            Line: 2
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 8
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 9
                                                            Line: 2
                                                    IterBegin: "[2, 8] (17)"
                                                    IterEnd: "[2, 9] (18)"
                                                    Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                IterBegin: "[2, 8] (17)"
                                                IterEnd: "[2, 9] (18)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                  Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                    Name: "a"
                                                  Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                    Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                        Column: 8
                                                        Line: 2
                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                        Column: 9
                                                        Line: 2
                                                    Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                      Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                        Column: 8
                                                        Line: 2
                                                      End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                        Column: 9
                                                        Line: 2
                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 2
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 9
                                                    Line: 2
                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 8
                                                    Line: 2
                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                    Column: 9
                                                    Line: 2
                                            IterBegin: "[2, 8] (17)"
                                            IterEnd: "[2, 9] (18)"
                                            Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                        IterBegin: "[2, 8] (17)"
                                        IterEnd: "[2, 9] (18)"
                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                    IterBegin: "[2, 8] (17)"
                                    IterEnd: "[2, 9] (18)"
                                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                    Children:
                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                        Children:
                                          - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                            IsIgnored: False
                                            IterBegin: "[2, 9] (18)"
                                            IterEnd: "[2, 10] (19)"
                                            Type: "',' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                            Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                              Match: "<_sre.SRE_Match object; span=(18, 19), match=','>"
                                            Whitespace: None
                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                            Children:
                                              - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                Children:
                                                  - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                    Children:
                                                      - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                        Children:
                                                          - # <class 'TheLanguage.Parser.Components.AST.Node'>
                                                            Children:
                                                              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                                                IsIgnored: False
                                                                IterBegin: "[2, 11] (20)"
                                                                IterEnd: "[2, 12] (21)"
                                                                Type: "<generic_name> <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                                                Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                                                  Match: "<_sre.SRE_Match object; span=(20, 21), match='b'>"
                                                                Whitespace:
                                                                  - 19
                                                                  - 20
                                                            Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                              Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                                Name: "b"
                                                              Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                                Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 11
                                                                    Line: 2
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 12
                                                                    Line: 2
                                                                Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                                  Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 11
                                                                    Line: 2
                                                                  End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                    Column: 12
                                                                    Line: 2
                                                            IterBegin: "[2, 11] (20)"
                                                            IterEnd: "[2, 12] (21)"
                                                            Type: "Variable Name <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                                        IterBegin: "[2, 11] (20)"
                                                        IterEnd: "[2, 12] (21)"
                                                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                                    Info: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerInfo'>
                                                      Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerData'>
                                                        Name: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerInfo'>
                                                          Data: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerData'>
                                                            Name: "b"
                                                          Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Names.VariableNameLexerInfo.VariableNameLexerRegions'>
                                                            Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 11
                                                                Line: 2
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 12
                                                                Line: 2
                                                            Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                              Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 11
                                                                Line: 2
                                                              End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                                Column: 12
                                                                Line: 2
                                                      Regions: # <class 'TheLanguage.Lexer.ParserInterfaces.Expressions.VariableExpressionLexerInfo.VariableExpressionLexerRegions'>
                                                        Name: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 11
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 12
                                                            Line: 2
                                                        Self__: # <class 'TheLanguage.Lexer.LexerInfo.Region'>
                                                          Begin: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 11
                                                            Line: 2
                                                          End: # <class 'TheLanguage.Lexer.LexerInfo.Location'>
                                                            Column: 12
                                                            Line: 2
                                                    IterBegin: "[2, 11] (20)"
                                                    IterEnd: "[2, 12] (21)"
                                                    Type: "Variable Expression <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                                IterBegin: "[2, 11] (20)"
                                                IterEnd: "[2, 12] (21)"
                                                Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                                            IterBegin: "[2, 11] (20)"
                                            IterEnd: "[2, 12] (21)"
                                            Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                                        IterBegin: "[2, 9] (18)"
                                        IterEnd: "[2, 12] (21)"
                                        Type: "Comma and Element <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                                    IterBegin: "[2, 9] (18)"
                                    IterEnd: "[2, 12] (21)"
                                    Type: "Repeat: {Comma and Element, 1, None} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
                                  - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                                    IsIgnored: False
                                    IterBegin: "[2, 12] (21)"
                                    IterEnd: "[2, 13] (22)"
                                    Type: "')' <class 'TheLanguage.Parser.Components.Token.RegexToken'>"
                                    Value: # <class 'TheLanguage.Parser.Components.Token.RegexToken.MatchResult'>
                                      Match: "<_sre.SRE_Match object; span=(21, 22), match=')'>"
                                    Whitespace: None
                                IterBegin: "[2, 7] (16)"
                                IterEnd: "[2, 13] (22)"
                                Type: "Multiple <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
                            IterBegin: "[2, 7] (16)"
                            IterEnd: "[2, 13] (22)"
                            Type: "Tuple Expression <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                        IterBegin: "[2, 7] (16)"
                        IterEnd: "[2, 13] (22)"
                        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
                    IterBegin: "[2, 7] (16)"
                    IterEnd: "[2, 13] (22)"
                    Type: "DynamicPhrasesType.Expressions <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
                IterBegin: "[2, 7] (16)"
                IterEnd: "[2, 13] (22)"
                Type: "Repeat: {DynamicPhrasesType.Expressions, 0, 1} <class 'TheLanguage.Parser.Phrases.RepeatPhrase.RepeatPhrase'>"
              - # <class 'TheLanguage.Parser.Components.AST.Leaf'>
                IsIgnored: False
                IterBegin: "[2, 13] (22)"
                IterEnd: "[3, 1] (23)"
                Type: "Newline+ <class 'TheLanguage.Parser.Components.Token.NewlineToken'>"
                Value: # <class 'TheLanguage.Parser.Components.Token.NewlineToken.MatchResult'>
                  End: 23
                  Start: 22
                Whitespace: None
            IterBegin: "[2, 1] (10)"
            IterEnd: "[3, 1] (23)"
            Type: "Raise Statement <class 'TheLanguage.Parser.Phrases.SequencePhrase.SequencePhrase'>"
        IterBegin: "[2, 1] (10)"
        IterEnd: "[3, 1] (23)"
        Type: "0.0.1 Grammar <class 'TheLanguage.Parser.Phrases.OrPhrase.OrPhrase'>"
    IterBegin: "[2, 1] (10)"
    IterEnd: "[3, 1] (23)"
    Type: "Dynamic Phrases <class 'TheLanguage.Parser.Phrases.DynamicPhrase.DynamicPhrase'>"
IterBegin: "[1, 1] (0)"
IterEnd: "[3, 1] (23)"
Type: "<None>"
